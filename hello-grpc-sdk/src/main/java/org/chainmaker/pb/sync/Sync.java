// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sync/sync.proto

package org.chainmaker.pb.sync;

public final class Sync {
  private Sync() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SyncMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sync.SyncMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * sync message type
     * </pre>
     *
     * <code>.sync.SyncMsg.MsgType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * sync message type
     * </pre>
     *
     * <code>.sync.SyncMsg.MsgType type = 1;</code>
     * @return The type.
     */
    org.chainmaker.pb.sync.Sync.SyncMsg.MsgType getType();

    /**
     * <pre>
     * payload for the message
     * </pre>
     *
     * <code>bytes payload = 2;</code>
     * @return The payload.
     */
    com.google.protobuf.ByteString getPayload();
  }
  /**
   * <pre>
   * network message of synchronization module
   * </pre>
   *
   * Protobuf type {@code sync.SyncMsg}
   */
  public static final class SyncMsg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sync.SyncMsg)
      SyncMsgOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SyncMsg.newBuilder() to construct.
    private SyncMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SyncMsg() {
      type_ = 0;
      payload_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SyncMsg();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SyncMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {

              payload_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.sync.Sync.internal_static_sync_SyncMsg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.sync.Sync.internal_static_sync_SyncMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.sync.Sync.SyncMsg.class, org.chainmaker.pb.sync.Sync.SyncMsg.Builder.class);
    }

    /**
     * <pre>
     * specific syncblockmessage types
     * </pre>
     *
     * Protobuf enum {@code sync.SyncMsg.MsgType}
     */
    public enum MsgType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NODE_STATUS_REQ = 0;</code>
       */
      NODE_STATUS_REQ(0),
      /**
       * <code>NODE_STATUS_RESP = 1;</code>
       */
      NODE_STATUS_RESP(1),
      /**
       * <code>BLOCK_SYNC_REQ = 2;</code>
       */
      BLOCK_SYNC_REQ(2),
      /**
       * <code>BLOCK_SYNC_RESP = 3;</code>
       */
      BLOCK_SYNC_RESP(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>NODE_STATUS_REQ = 0;</code>
       */
      public static final int NODE_STATUS_REQ_VALUE = 0;
      /**
       * <code>NODE_STATUS_RESP = 1;</code>
       */
      public static final int NODE_STATUS_RESP_VALUE = 1;
      /**
       * <code>BLOCK_SYNC_REQ = 2;</code>
       */
      public static final int BLOCK_SYNC_REQ_VALUE = 2;
      /**
       * <code>BLOCK_SYNC_RESP = 3;</code>
       */
      public static final int BLOCK_SYNC_RESP_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MsgType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static MsgType forNumber(int value) {
        switch (value) {
          case 0: return NODE_STATUS_REQ;
          case 1: return NODE_STATUS_RESP;
          case 2: return BLOCK_SYNC_REQ;
          case 3: return BLOCK_SYNC_RESP;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<MsgType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          MsgType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MsgType>() {
              public MsgType findValueByNumber(int number) {
                return MsgType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.chainmaker.pb.sync.Sync.SyncMsg.getDescriptor().getEnumTypes().get(0);
      }

      private static final MsgType[] VALUES = values();

      public static MsgType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private MsgType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:sync.SyncMsg.MsgType)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * sync message type
     * </pre>
     *
     * <code>.sync.SyncMsg.MsgType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * sync message type
     * </pre>
     *
     * <code>.sync.SyncMsg.MsgType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public org.chainmaker.pb.sync.Sync.SyncMsg.MsgType getType() {
      @SuppressWarnings("deprecation")
      org.chainmaker.pb.sync.Sync.SyncMsg.MsgType result = org.chainmaker.pb.sync.Sync.SyncMsg.MsgType.valueOf(type_);
      return result == null ? org.chainmaker.pb.sync.Sync.SyncMsg.MsgType.UNRECOGNIZED : result;
    }

    public static final int PAYLOAD_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString payload_;
    /**
     * <pre>
     * payload for the message
     * </pre>
     *
     * <code>bytes payload = 2;</code>
     * @return The payload.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPayload() {
      return payload_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.chainmaker.pb.sync.Sync.SyncMsg.MsgType.NODE_STATUS_REQ.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (!payload_.isEmpty()) {
        output.writeBytes(2, payload_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.chainmaker.pb.sync.Sync.SyncMsg.MsgType.NODE_STATUS_REQ.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (!payload_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, payload_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.sync.Sync.SyncMsg)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.sync.Sync.SyncMsg other = (org.chainmaker.pb.sync.Sync.SyncMsg) obj;

      if (type_ != other.type_) return false;
      if (!getPayload()
          .equals(other.getPayload())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
      hash = (53 * hash) + getPayload().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.sync.Sync.SyncMsg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.sync.Sync.SyncMsg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.SyncMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.sync.Sync.SyncMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.SyncMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.sync.Sync.SyncMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.SyncMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.sync.Sync.SyncMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.SyncMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.sync.Sync.SyncMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.SyncMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.sync.Sync.SyncMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.sync.Sync.SyncMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * network message of synchronization module
     * </pre>
     *
     * Protobuf type {@code sync.SyncMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sync.SyncMsg)
        org.chainmaker.pb.sync.Sync.SyncMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.sync.Sync.internal_static_sync_SyncMsg_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.sync.Sync.internal_static_sync_SyncMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.sync.Sync.SyncMsg.class, org.chainmaker.pb.sync.Sync.SyncMsg.Builder.class);
      }

      // Construct using org.chainmaker.pb.sync.Sync.SyncMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        payload_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.sync.Sync.internal_static_sync_SyncMsg_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.sync.Sync.SyncMsg getDefaultInstanceForType() {
        return org.chainmaker.pb.sync.Sync.SyncMsg.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.sync.Sync.SyncMsg build() {
        org.chainmaker.pb.sync.Sync.SyncMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.sync.Sync.SyncMsg buildPartial() {
        org.chainmaker.pb.sync.Sync.SyncMsg result = new org.chainmaker.pb.sync.Sync.SyncMsg(this);
        result.type_ = type_;
        result.payload_ = payload_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.sync.Sync.SyncMsg) {
          return mergeFrom((org.chainmaker.pb.sync.Sync.SyncMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.sync.Sync.SyncMsg other) {
        if (other == org.chainmaker.pb.sync.Sync.SyncMsg.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getPayload() != com.google.protobuf.ByteString.EMPTY) {
          setPayload(other.getPayload());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.sync.Sync.SyncMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.sync.Sync.SyncMsg) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * sync message type
       * </pre>
       *
       * <code>.sync.SyncMsg.MsgType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * sync message type
       * </pre>
       *
       * <code>.sync.SyncMsg.MsgType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * sync message type
       * </pre>
       *
       * <code>.sync.SyncMsg.MsgType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public org.chainmaker.pb.sync.Sync.SyncMsg.MsgType getType() {
        @SuppressWarnings("deprecation")
        org.chainmaker.pb.sync.Sync.SyncMsg.MsgType result = org.chainmaker.pb.sync.Sync.SyncMsg.MsgType.valueOf(type_);
        return result == null ? org.chainmaker.pb.sync.Sync.SyncMsg.MsgType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * sync message type
       * </pre>
       *
       * <code>.sync.SyncMsg.MsgType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(org.chainmaker.pb.sync.Sync.SyncMsg.MsgType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * sync message type
       * </pre>
       *
       * <code>.sync.SyncMsg.MsgType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * payload for the message
       * </pre>
       *
       * <code>bytes payload = 2;</code>
       * @return The payload.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPayload() {
        return payload_;
      }
      /**
       * <pre>
       * payload for the message
       * </pre>
       *
       * <code>bytes payload = 2;</code>
       * @param value The payload to set.
       * @return This builder for chaining.
       */
      public Builder setPayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * payload for the message
       * </pre>
       *
       * <code>bytes payload = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPayload() {
        
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:sync.SyncMsg)
    }

    // @@protoc_insertion_point(class_scope:sync.SyncMsg)
    private static final org.chainmaker.pb.sync.Sync.SyncMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.sync.Sync.SyncMsg();
    }

    public static org.chainmaker.pb.sync.Sync.SyncMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SyncMsg>
        PARSER = new com.google.protobuf.AbstractParser<SyncMsg>() {
      @java.lang.Override
      public SyncMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SyncMsg(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SyncMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SyncMsg> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.sync.Sync.SyncMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BlockHeightBCMOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sync.BlockHeightBCM)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint64 block_height = 1;</code>
     * @return The blockHeight.
     */
    long getBlockHeight();

    /**
     * <code>uint64 archived_height = 2;</code>
     * @return The archivedHeight.
     */
    long getArchivedHeight();
  }
  /**
   * <pre>
   * response message for node status
   * </pre>
   *
   * Protobuf type {@code sync.BlockHeightBCM}
   */
  public static final class BlockHeightBCM extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sync.BlockHeightBCM)
      BlockHeightBCMOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BlockHeightBCM.newBuilder() to construct.
    private BlockHeightBCM(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BlockHeightBCM() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BlockHeightBCM();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BlockHeightBCM(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              blockHeight_ = input.readUInt64();
              break;
            }
            case 16: {

              archivedHeight_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.sync.Sync.internal_static_sync_BlockHeightBCM_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.sync.Sync.internal_static_sync_BlockHeightBCM_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.sync.Sync.BlockHeightBCM.class, org.chainmaker.pb.sync.Sync.BlockHeightBCM.Builder.class);
    }

    public static final int BLOCK_HEIGHT_FIELD_NUMBER = 1;
    private long blockHeight_;
    /**
     * <code>uint64 block_height = 1;</code>
     * @return The blockHeight.
     */
    @java.lang.Override
    public long getBlockHeight() {
      return blockHeight_;
    }

    public static final int ARCHIVED_HEIGHT_FIELD_NUMBER = 2;
    private long archivedHeight_;
    /**
     * <code>uint64 archived_height = 2;</code>
     * @return The archivedHeight.
     */
    @java.lang.Override
    public long getArchivedHeight() {
      return archivedHeight_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (blockHeight_ != 0L) {
        output.writeUInt64(1, blockHeight_);
      }
      if (archivedHeight_ != 0L) {
        output.writeUInt64(2, archivedHeight_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (blockHeight_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, blockHeight_);
      }
      if (archivedHeight_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, archivedHeight_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.sync.Sync.BlockHeightBCM)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.sync.Sync.BlockHeightBCM other = (org.chainmaker.pb.sync.Sync.BlockHeightBCM) obj;

      if (getBlockHeight()
          != other.getBlockHeight()) return false;
      if (getArchivedHeight()
          != other.getArchivedHeight()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BLOCK_HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBlockHeight());
      hash = (37 * hash) + ARCHIVED_HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getArchivedHeight());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.sync.Sync.BlockHeightBCM parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.sync.Sync.BlockHeightBCM parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.BlockHeightBCM parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.sync.Sync.BlockHeightBCM parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.BlockHeightBCM parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.sync.Sync.BlockHeightBCM parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.BlockHeightBCM parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.sync.Sync.BlockHeightBCM parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.BlockHeightBCM parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.sync.Sync.BlockHeightBCM parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.BlockHeightBCM parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.sync.Sync.BlockHeightBCM parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.sync.Sync.BlockHeightBCM prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * response message for node status
     * </pre>
     *
     * Protobuf type {@code sync.BlockHeightBCM}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sync.BlockHeightBCM)
        org.chainmaker.pb.sync.Sync.BlockHeightBCMOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.sync.Sync.internal_static_sync_BlockHeightBCM_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.sync.Sync.internal_static_sync_BlockHeightBCM_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.sync.Sync.BlockHeightBCM.class, org.chainmaker.pb.sync.Sync.BlockHeightBCM.Builder.class);
      }

      // Construct using org.chainmaker.pb.sync.Sync.BlockHeightBCM.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        blockHeight_ = 0L;

        archivedHeight_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.sync.Sync.internal_static_sync_BlockHeightBCM_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.sync.Sync.BlockHeightBCM getDefaultInstanceForType() {
        return org.chainmaker.pb.sync.Sync.BlockHeightBCM.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.sync.Sync.BlockHeightBCM build() {
        org.chainmaker.pb.sync.Sync.BlockHeightBCM result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.sync.Sync.BlockHeightBCM buildPartial() {
        org.chainmaker.pb.sync.Sync.BlockHeightBCM result = new org.chainmaker.pb.sync.Sync.BlockHeightBCM(this);
        result.blockHeight_ = blockHeight_;
        result.archivedHeight_ = archivedHeight_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.sync.Sync.BlockHeightBCM) {
          return mergeFrom((org.chainmaker.pb.sync.Sync.BlockHeightBCM)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.sync.Sync.BlockHeightBCM other) {
        if (other == org.chainmaker.pb.sync.Sync.BlockHeightBCM.getDefaultInstance()) return this;
        if (other.getBlockHeight() != 0L) {
          setBlockHeight(other.getBlockHeight());
        }
        if (other.getArchivedHeight() != 0L) {
          setArchivedHeight(other.getArchivedHeight());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.sync.Sync.BlockHeightBCM parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.sync.Sync.BlockHeightBCM) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long blockHeight_ ;
      /**
       * <code>uint64 block_height = 1;</code>
       * @return The blockHeight.
       */
      @java.lang.Override
      public long getBlockHeight() {
        return blockHeight_;
      }
      /**
       * <code>uint64 block_height = 1;</code>
       * @param value The blockHeight to set.
       * @return This builder for chaining.
       */
      public Builder setBlockHeight(long value) {
        
        blockHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 block_height = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockHeight() {
        
        blockHeight_ = 0L;
        onChanged();
        return this;
      }

      private long archivedHeight_ ;
      /**
       * <code>uint64 archived_height = 2;</code>
       * @return The archivedHeight.
       */
      @java.lang.Override
      public long getArchivedHeight() {
        return archivedHeight_;
      }
      /**
       * <code>uint64 archived_height = 2;</code>
       * @param value The archivedHeight to set.
       * @return This builder for chaining.
       */
      public Builder setArchivedHeight(long value) {
        
        archivedHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 archived_height = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearArchivedHeight() {
        
        archivedHeight_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:sync.BlockHeightBCM)
    }

    // @@protoc_insertion_point(class_scope:sync.BlockHeightBCM)
    private static final org.chainmaker.pb.sync.Sync.BlockHeightBCM DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.sync.Sync.BlockHeightBCM();
    }

    public static org.chainmaker.pb.sync.Sync.BlockHeightBCM getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BlockHeightBCM>
        PARSER = new com.google.protobuf.AbstractParser<BlockHeightBCM>() {
      @java.lang.Override
      public BlockHeightBCM parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlockHeightBCM(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BlockHeightBCM> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BlockHeightBCM> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.sync.Sync.BlockHeightBCM getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BlockSyncReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sync.BlockSyncReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint64 block_height = 1;</code>
     * @return The blockHeight.
     */
    long getBlockHeight();

    /**
     * <code>uint64 batch_size = 2;</code>
     * @return The batchSize.
     */
    long getBatchSize();

    /**
     * <code>bool with_rwset = 3;</code>
     * @return The withRwset.
     */
    boolean getWithRwset();
  }
  /**
   * <pre>
   * block request message
   * </pre>
   *
   * Protobuf type {@code sync.BlockSyncReq}
   */
  public static final class BlockSyncReq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sync.BlockSyncReq)
      BlockSyncReqOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BlockSyncReq.newBuilder() to construct.
    private BlockSyncReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BlockSyncReq() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BlockSyncReq();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BlockSyncReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              blockHeight_ = input.readUInt64();
              break;
            }
            case 16: {

              batchSize_ = input.readUInt64();
              break;
            }
            case 24: {

              withRwset_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.sync.Sync.internal_static_sync_BlockSyncReq_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.sync.Sync.internal_static_sync_BlockSyncReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.sync.Sync.BlockSyncReq.class, org.chainmaker.pb.sync.Sync.BlockSyncReq.Builder.class);
    }

    public static final int BLOCK_HEIGHT_FIELD_NUMBER = 1;
    private long blockHeight_;
    /**
     * <code>uint64 block_height = 1;</code>
     * @return The blockHeight.
     */
    @java.lang.Override
    public long getBlockHeight() {
      return blockHeight_;
    }

    public static final int BATCH_SIZE_FIELD_NUMBER = 2;
    private long batchSize_;
    /**
     * <code>uint64 batch_size = 2;</code>
     * @return The batchSize.
     */
    @java.lang.Override
    public long getBatchSize() {
      return batchSize_;
    }

    public static final int WITH_RWSET_FIELD_NUMBER = 3;
    private boolean withRwset_;
    /**
     * <code>bool with_rwset = 3;</code>
     * @return The withRwset.
     */
    @java.lang.Override
    public boolean getWithRwset() {
      return withRwset_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (blockHeight_ != 0L) {
        output.writeUInt64(1, blockHeight_);
      }
      if (batchSize_ != 0L) {
        output.writeUInt64(2, batchSize_);
      }
      if (withRwset_ != false) {
        output.writeBool(3, withRwset_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (blockHeight_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, blockHeight_);
      }
      if (batchSize_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, batchSize_);
      }
      if (withRwset_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, withRwset_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.sync.Sync.BlockSyncReq)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.sync.Sync.BlockSyncReq other = (org.chainmaker.pb.sync.Sync.BlockSyncReq) obj;

      if (getBlockHeight()
          != other.getBlockHeight()) return false;
      if (getBatchSize()
          != other.getBatchSize()) return false;
      if (getWithRwset()
          != other.getWithRwset()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BLOCK_HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBlockHeight());
      hash = (37 * hash) + BATCH_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBatchSize());
      hash = (37 * hash) + WITH_RWSET_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getWithRwset());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.sync.Sync.BlockSyncReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.sync.Sync.BlockSyncReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.BlockSyncReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.sync.Sync.BlockSyncReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.BlockSyncReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.sync.Sync.BlockSyncReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.BlockSyncReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.sync.Sync.BlockSyncReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.BlockSyncReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.sync.Sync.BlockSyncReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.BlockSyncReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.sync.Sync.BlockSyncReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.sync.Sync.BlockSyncReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * block request message
     * </pre>
     *
     * Protobuf type {@code sync.BlockSyncReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sync.BlockSyncReq)
        org.chainmaker.pb.sync.Sync.BlockSyncReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.sync.Sync.internal_static_sync_BlockSyncReq_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.sync.Sync.internal_static_sync_BlockSyncReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.sync.Sync.BlockSyncReq.class, org.chainmaker.pb.sync.Sync.BlockSyncReq.Builder.class);
      }

      // Construct using org.chainmaker.pb.sync.Sync.BlockSyncReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        blockHeight_ = 0L;

        batchSize_ = 0L;

        withRwset_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.sync.Sync.internal_static_sync_BlockSyncReq_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.sync.Sync.BlockSyncReq getDefaultInstanceForType() {
        return org.chainmaker.pb.sync.Sync.BlockSyncReq.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.sync.Sync.BlockSyncReq build() {
        org.chainmaker.pb.sync.Sync.BlockSyncReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.sync.Sync.BlockSyncReq buildPartial() {
        org.chainmaker.pb.sync.Sync.BlockSyncReq result = new org.chainmaker.pb.sync.Sync.BlockSyncReq(this);
        result.blockHeight_ = blockHeight_;
        result.batchSize_ = batchSize_;
        result.withRwset_ = withRwset_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.sync.Sync.BlockSyncReq) {
          return mergeFrom((org.chainmaker.pb.sync.Sync.BlockSyncReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.sync.Sync.BlockSyncReq other) {
        if (other == org.chainmaker.pb.sync.Sync.BlockSyncReq.getDefaultInstance()) return this;
        if (other.getBlockHeight() != 0L) {
          setBlockHeight(other.getBlockHeight());
        }
        if (other.getBatchSize() != 0L) {
          setBatchSize(other.getBatchSize());
        }
        if (other.getWithRwset() != false) {
          setWithRwset(other.getWithRwset());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.sync.Sync.BlockSyncReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.sync.Sync.BlockSyncReq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long blockHeight_ ;
      /**
       * <code>uint64 block_height = 1;</code>
       * @return The blockHeight.
       */
      @java.lang.Override
      public long getBlockHeight() {
        return blockHeight_;
      }
      /**
       * <code>uint64 block_height = 1;</code>
       * @param value The blockHeight to set.
       * @return This builder for chaining.
       */
      public Builder setBlockHeight(long value) {
        
        blockHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 block_height = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockHeight() {
        
        blockHeight_ = 0L;
        onChanged();
        return this;
      }

      private long batchSize_ ;
      /**
       * <code>uint64 batch_size = 2;</code>
       * @return The batchSize.
       */
      @java.lang.Override
      public long getBatchSize() {
        return batchSize_;
      }
      /**
       * <code>uint64 batch_size = 2;</code>
       * @param value The batchSize to set.
       * @return This builder for chaining.
       */
      public Builder setBatchSize(long value) {
        
        batchSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 batch_size = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBatchSize() {
        
        batchSize_ = 0L;
        onChanged();
        return this;
      }

      private boolean withRwset_ ;
      /**
       * <code>bool with_rwset = 3;</code>
       * @return The withRwset.
       */
      @java.lang.Override
      public boolean getWithRwset() {
        return withRwset_;
      }
      /**
       * <code>bool with_rwset = 3;</code>
       * @param value The withRwset to set.
       * @return This builder for chaining.
       */
      public Builder setWithRwset(boolean value) {
        
        withRwset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool with_rwset = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearWithRwset() {
        
        withRwset_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:sync.BlockSyncReq)
    }

    // @@protoc_insertion_point(class_scope:sync.BlockSyncReq)
    private static final org.chainmaker.pb.sync.Sync.BlockSyncReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.sync.Sync.BlockSyncReq();
    }

    public static org.chainmaker.pb.sync.Sync.BlockSyncReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BlockSyncReq>
        PARSER = new com.google.protobuf.AbstractParser<BlockSyncReq>() {
      @java.lang.Override
      public BlockSyncReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlockSyncReq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BlockSyncReq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BlockSyncReq> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.sync.Sync.BlockSyncReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BlockBatchOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sync.BlockBatch)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .common.Block batches = 1;</code>
     */
    java.util.List<org.chainmaker.pb.common.ChainmakerBlock.Block> 
        getBatchesList();
    /**
     * <code>repeated .common.Block batches = 1;</code>
     */
    org.chainmaker.pb.common.ChainmakerBlock.Block getBatches(int index);
    /**
     * <code>repeated .common.Block batches = 1;</code>
     */
    int getBatchesCount();
    /**
     * <code>repeated .common.Block batches = 1;</code>
     */
    java.util.List<? extends org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder> 
        getBatchesOrBuilderList();
    /**
     * <code>repeated .common.Block batches = 1;</code>
     */
    org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder getBatchesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * batch blocks
   * </pre>
   *
   * Protobuf type {@code sync.BlockBatch}
   */
  public static final class BlockBatch extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sync.BlockBatch)
      BlockBatchOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BlockBatch.newBuilder() to construct.
    private BlockBatch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BlockBatch() {
      batches_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BlockBatch();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BlockBatch(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                batches_ = new java.util.ArrayList<org.chainmaker.pb.common.ChainmakerBlock.Block>();
                mutable_bitField0_ |= 0x00000001;
              }
              batches_.add(
                  input.readMessage(org.chainmaker.pb.common.ChainmakerBlock.Block.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          batches_ = java.util.Collections.unmodifiableList(batches_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.sync.Sync.internal_static_sync_BlockBatch_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.sync.Sync.internal_static_sync_BlockBatch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.sync.Sync.BlockBatch.class, org.chainmaker.pb.sync.Sync.BlockBatch.Builder.class);
    }

    public static final int BATCHES_FIELD_NUMBER = 1;
    private java.util.List<org.chainmaker.pb.common.ChainmakerBlock.Block> batches_;
    /**
     * <code>repeated .common.Block batches = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.chainmaker.pb.common.ChainmakerBlock.Block> getBatchesList() {
      return batches_;
    }
    /**
     * <code>repeated .common.Block batches = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder> 
        getBatchesOrBuilderList() {
      return batches_;
    }
    /**
     * <code>repeated .common.Block batches = 1;</code>
     */
    @java.lang.Override
    public int getBatchesCount() {
      return batches_.size();
    }
    /**
     * <code>repeated .common.Block batches = 1;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.Block getBatches(int index) {
      return batches_.get(index);
    }
    /**
     * <code>repeated .common.Block batches = 1;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder getBatchesOrBuilder(
        int index) {
      return batches_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < batches_.size(); i++) {
        output.writeMessage(1, batches_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < batches_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, batches_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.sync.Sync.BlockBatch)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.sync.Sync.BlockBatch other = (org.chainmaker.pb.sync.Sync.BlockBatch) obj;

      if (!getBatchesList()
          .equals(other.getBatchesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getBatchesCount() > 0) {
        hash = (37 * hash) + BATCHES_FIELD_NUMBER;
        hash = (53 * hash) + getBatchesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.sync.Sync.BlockBatch parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.sync.Sync.BlockBatch parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.BlockBatch parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.sync.Sync.BlockBatch parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.BlockBatch parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.sync.Sync.BlockBatch parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.BlockBatch parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.sync.Sync.BlockBatch parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.BlockBatch parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.sync.Sync.BlockBatch parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.BlockBatch parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.sync.Sync.BlockBatch parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.sync.Sync.BlockBatch prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * batch blocks
     * </pre>
     *
     * Protobuf type {@code sync.BlockBatch}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sync.BlockBatch)
        org.chainmaker.pb.sync.Sync.BlockBatchOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.sync.Sync.internal_static_sync_BlockBatch_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.sync.Sync.internal_static_sync_BlockBatch_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.sync.Sync.BlockBatch.class, org.chainmaker.pb.sync.Sync.BlockBatch.Builder.class);
      }

      // Construct using org.chainmaker.pb.sync.Sync.BlockBatch.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBatchesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (batchesBuilder_ == null) {
          batches_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          batchesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.sync.Sync.internal_static_sync_BlockBatch_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.sync.Sync.BlockBatch getDefaultInstanceForType() {
        return org.chainmaker.pb.sync.Sync.BlockBatch.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.sync.Sync.BlockBatch build() {
        org.chainmaker.pb.sync.Sync.BlockBatch result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.sync.Sync.BlockBatch buildPartial() {
        org.chainmaker.pb.sync.Sync.BlockBatch result = new org.chainmaker.pb.sync.Sync.BlockBatch(this);
        int from_bitField0_ = bitField0_;
        if (batchesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            batches_ = java.util.Collections.unmodifiableList(batches_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.batches_ = batches_;
        } else {
          result.batches_ = batchesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.sync.Sync.BlockBatch) {
          return mergeFrom((org.chainmaker.pb.sync.Sync.BlockBatch)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.sync.Sync.BlockBatch other) {
        if (other == org.chainmaker.pb.sync.Sync.BlockBatch.getDefaultInstance()) return this;
        if (batchesBuilder_ == null) {
          if (!other.batches_.isEmpty()) {
            if (batches_.isEmpty()) {
              batches_ = other.batches_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBatchesIsMutable();
              batches_.addAll(other.batches_);
            }
            onChanged();
          }
        } else {
          if (!other.batches_.isEmpty()) {
            if (batchesBuilder_.isEmpty()) {
              batchesBuilder_.dispose();
              batchesBuilder_ = null;
              batches_ = other.batches_;
              bitField0_ = (bitField0_ & ~0x00000001);
              batchesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBatchesFieldBuilder() : null;
            } else {
              batchesBuilder_.addAllMessages(other.batches_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.sync.Sync.BlockBatch parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.sync.Sync.BlockBatch) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.chainmaker.pb.common.ChainmakerBlock.Block> batches_ =
        java.util.Collections.emptyList();
      private void ensureBatchesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          batches_ = new java.util.ArrayList<org.chainmaker.pb.common.ChainmakerBlock.Block>(batches_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.Block, org.chainmaker.pb.common.ChainmakerBlock.Block.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder> batchesBuilder_;

      /**
       * <code>repeated .common.Block batches = 1;</code>
       */
      public java.util.List<org.chainmaker.pb.common.ChainmakerBlock.Block> getBatchesList() {
        if (batchesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(batches_);
        } else {
          return batchesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .common.Block batches = 1;</code>
       */
      public int getBatchesCount() {
        if (batchesBuilder_ == null) {
          return batches_.size();
        } else {
          return batchesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .common.Block batches = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.Block getBatches(int index) {
        if (batchesBuilder_ == null) {
          return batches_.get(index);
        } else {
          return batchesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .common.Block batches = 1;</code>
       */
      public Builder setBatches(
          int index, org.chainmaker.pb.common.ChainmakerBlock.Block value) {
        if (batchesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBatchesIsMutable();
          batches_.set(index, value);
          onChanged();
        } else {
          batchesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .common.Block batches = 1;</code>
       */
      public Builder setBatches(
          int index, org.chainmaker.pb.common.ChainmakerBlock.Block.Builder builderForValue) {
        if (batchesBuilder_ == null) {
          ensureBatchesIsMutable();
          batches_.set(index, builderForValue.build());
          onChanged();
        } else {
          batchesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .common.Block batches = 1;</code>
       */
      public Builder addBatches(org.chainmaker.pb.common.ChainmakerBlock.Block value) {
        if (batchesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBatchesIsMutable();
          batches_.add(value);
          onChanged();
        } else {
          batchesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .common.Block batches = 1;</code>
       */
      public Builder addBatches(
          int index, org.chainmaker.pb.common.ChainmakerBlock.Block value) {
        if (batchesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBatchesIsMutable();
          batches_.add(index, value);
          onChanged();
        } else {
          batchesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .common.Block batches = 1;</code>
       */
      public Builder addBatches(
          org.chainmaker.pb.common.ChainmakerBlock.Block.Builder builderForValue) {
        if (batchesBuilder_ == null) {
          ensureBatchesIsMutable();
          batches_.add(builderForValue.build());
          onChanged();
        } else {
          batchesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .common.Block batches = 1;</code>
       */
      public Builder addBatches(
          int index, org.chainmaker.pb.common.ChainmakerBlock.Block.Builder builderForValue) {
        if (batchesBuilder_ == null) {
          ensureBatchesIsMutable();
          batches_.add(index, builderForValue.build());
          onChanged();
        } else {
          batchesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .common.Block batches = 1;</code>
       */
      public Builder addAllBatches(
          java.lang.Iterable<? extends org.chainmaker.pb.common.ChainmakerBlock.Block> values) {
        if (batchesBuilder_ == null) {
          ensureBatchesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, batches_);
          onChanged();
        } else {
          batchesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .common.Block batches = 1;</code>
       */
      public Builder clearBatches() {
        if (batchesBuilder_ == null) {
          batches_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          batchesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .common.Block batches = 1;</code>
       */
      public Builder removeBatches(int index) {
        if (batchesBuilder_ == null) {
          ensureBatchesIsMutable();
          batches_.remove(index);
          onChanged();
        } else {
          batchesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .common.Block batches = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.Block.Builder getBatchesBuilder(
          int index) {
        return getBatchesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .common.Block batches = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder getBatchesOrBuilder(
          int index) {
        if (batchesBuilder_ == null) {
          return batches_.get(index);  } else {
          return batchesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .common.Block batches = 1;</code>
       */
      public java.util.List<? extends org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder> 
           getBatchesOrBuilderList() {
        if (batchesBuilder_ != null) {
          return batchesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(batches_);
        }
      }
      /**
       * <code>repeated .common.Block batches = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.Block.Builder addBatchesBuilder() {
        return getBatchesFieldBuilder().addBuilder(
            org.chainmaker.pb.common.ChainmakerBlock.Block.getDefaultInstance());
      }
      /**
       * <code>repeated .common.Block batches = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.Block.Builder addBatchesBuilder(
          int index) {
        return getBatchesFieldBuilder().addBuilder(
            index, org.chainmaker.pb.common.ChainmakerBlock.Block.getDefaultInstance());
      }
      /**
       * <code>repeated .common.Block batches = 1;</code>
       */
      public java.util.List<org.chainmaker.pb.common.ChainmakerBlock.Block.Builder> 
           getBatchesBuilderList() {
        return getBatchesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.Block, org.chainmaker.pb.common.ChainmakerBlock.Block.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder> 
          getBatchesFieldBuilder() {
        if (batchesBuilder_ == null) {
          batchesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.chainmaker.pb.common.ChainmakerBlock.Block, org.chainmaker.pb.common.ChainmakerBlock.Block.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder>(
                  batches_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          batches_ = null;
        }
        return batchesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:sync.BlockBatch)
    }

    // @@protoc_insertion_point(class_scope:sync.BlockBatch)
    private static final org.chainmaker.pb.sync.Sync.BlockBatch DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.sync.Sync.BlockBatch();
    }

    public static org.chainmaker.pb.sync.Sync.BlockBatch getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BlockBatch>
        PARSER = new com.google.protobuf.AbstractParser<BlockBatch>() {
      @java.lang.Override
      public BlockBatch parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlockBatch(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BlockBatch> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BlockBatch> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.sync.Sync.BlockBatch getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BlockInfoBatchOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sync.BlockInfoBatch)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .common.BlockInfo batch = 1;</code>
     */
    java.util.List<org.chainmaker.pb.common.ChainmakerBlock.BlockInfo> 
        getBatchList();
    /**
     * <code>repeated .common.BlockInfo batch = 1;</code>
     */
    org.chainmaker.pb.common.ChainmakerBlock.BlockInfo getBatch(int index);
    /**
     * <code>repeated .common.BlockInfo batch = 1;</code>
     */
    int getBatchCount();
    /**
     * <code>repeated .common.BlockInfo batch = 1;</code>
     */
    java.util.List<? extends org.chainmaker.pb.common.ChainmakerBlock.BlockInfoOrBuilder> 
        getBatchOrBuilderList();
    /**
     * <code>repeated .common.BlockInfo batch = 1;</code>
     */
    org.chainmaker.pb.common.ChainmakerBlock.BlockInfoOrBuilder getBatchOrBuilder(
        int index);
  }
  /**
   * <pre>
   * information of batch blocks
   * </pre>
   *
   * Protobuf type {@code sync.BlockInfoBatch}
   */
  public static final class BlockInfoBatch extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sync.BlockInfoBatch)
      BlockInfoBatchOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BlockInfoBatch.newBuilder() to construct.
    private BlockInfoBatch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BlockInfoBatch() {
      batch_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BlockInfoBatch();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BlockInfoBatch(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                batch_ = new java.util.ArrayList<org.chainmaker.pb.common.ChainmakerBlock.BlockInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              batch_.add(
                  input.readMessage(org.chainmaker.pb.common.ChainmakerBlock.BlockInfo.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          batch_ = java.util.Collections.unmodifiableList(batch_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.sync.Sync.internal_static_sync_BlockInfoBatch_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.sync.Sync.internal_static_sync_BlockInfoBatch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.sync.Sync.BlockInfoBatch.class, org.chainmaker.pb.sync.Sync.BlockInfoBatch.Builder.class);
    }

    public static final int BATCH_FIELD_NUMBER = 1;
    private java.util.List<org.chainmaker.pb.common.ChainmakerBlock.BlockInfo> batch_;
    /**
     * <code>repeated .common.BlockInfo batch = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.chainmaker.pb.common.ChainmakerBlock.BlockInfo> getBatchList() {
      return batch_;
    }
    /**
     * <code>repeated .common.BlockInfo batch = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.chainmaker.pb.common.ChainmakerBlock.BlockInfoOrBuilder> 
        getBatchOrBuilderList() {
      return batch_;
    }
    /**
     * <code>repeated .common.BlockInfo batch = 1;</code>
     */
    @java.lang.Override
    public int getBatchCount() {
      return batch_.size();
    }
    /**
     * <code>repeated .common.BlockInfo batch = 1;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.BlockInfo getBatch(int index) {
      return batch_.get(index);
    }
    /**
     * <code>repeated .common.BlockInfo batch = 1;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.BlockInfoOrBuilder getBatchOrBuilder(
        int index) {
      return batch_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < batch_.size(); i++) {
        output.writeMessage(1, batch_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < batch_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, batch_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.sync.Sync.BlockInfoBatch)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.sync.Sync.BlockInfoBatch other = (org.chainmaker.pb.sync.Sync.BlockInfoBatch) obj;

      if (!getBatchList()
          .equals(other.getBatchList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getBatchCount() > 0) {
        hash = (37 * hash) + BATCH_FIELD_NUMBER;
        hash = (53 * hash) + getBatchList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.sync.Sync.BlockInfoBatch parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.sync.Sync.BlockInfoBatch parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.BlockInfoBatch parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.sync.Sync.BlockInfoBatch parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.BlockInfoBatch parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.sync.Sync.BlockInfoBatch parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.BlockInfoBatch parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.sync.Sync.BlockInfoBatch parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.BlockInfoBatch parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.sync.Sync.BlockInfoBatch parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.BlockInfoBatch parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.sync.Sync.BlockInfoBatch parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.sync.Sync.BlockInfoBatch prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * information of batch blocks
     * </pre>
     *
     * Protobuf type {@code sync.BlockInfoBatch}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sync.BlockInfoBatch)
        org.chainmaker.pb.sync.Sync.BlockInfoBatchOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.sync.Sync.internal_static_sync_BlockInfoBatch_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.sync.Sync.internal_static_sync_BlockInfoBatch_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.sync.Sync.BlockInfoBatch.class, org.chainmaker.pb.sync.Sync.BlockInfoBatch.Builder.class);
      }

      // Construct using org.chainmaker.pb.sync.Sync.BlockInfoBatch.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBatchFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (batchBuilder_ == null) {
          batch_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          batchBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.sync.Sync.internal_static_sync_BlockInfoBatch_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.sync.Sync.BlockInfoBatch getDefaultInstanceForType() {
        return org.chainmaker.pb.sync.Sync.BlockInfoBatch.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.sync.Sync.BlockInfoBatch build() {
        org.chainmaker.pb.sync.Sync.BlockInfoBatch result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.sync.Sync.BlockInfoBatch buildPartial() {
        org.chainmaker.pb.sync.Sync.BlockInfoBatch result = new org.chainmaker.pb.sync.Sync.BlockInfoBatch(this);
        int from_bitField0_ = bitField0_;
        if (batchBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            batch_ = java.util.Collections.unmodifiableList(batch_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.batch_ = batch_;
        } else {
          result.batch_ = batchBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.sync.Sync.BlockInfoBatch) {
          return mergeFrom((org.chainmaker.pb.sync.Sync.BlockInfoBatch)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.sync.Sync.BlockInfoBatch other) {
        if (other == org.chainmaker.pb.sync.Sync.BlockInfoBatch.getDefaultInstance()) return this;
        if (batchBuilder_ == null) {
          if (!other.batch_.isEmpty()) {
            if (batch_.isEmpty()) {
              batch_ = other.batch_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBatchIsMutable();
              batch_.addAll(other.batch_);
            }
            onChanged();
          }
        } else {
          if (!other.batch_.isEmpty()) {
            if (batchBuilder_.isEmpty()) {
              batchBuilder_.dispose();
              batchBuilder_ = null;
              batch_ = other.batch_;
              bitField0_ = (bitField0_ & ~0x00000001);
              batchBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBatchFieldBuilder() : null;
            } else {
              batchBuilder_.addAllMessages(other.batch_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.sync.Sync.BlockInfoBatch parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.sync.Sync.BlockInfoBatch) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.chainmaker.pb.common.ChainmakerBlock.BlockInfo> batch_ =
        java.util.Collections.emptyList();
      private void ensureBatchIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          batch_ = new java.util.ArrayList<org.chainmaker.pb.common.ChainmakerBlock.BlockInfo>(batch_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.BlockInfo, org.chainmaker.pb.common.ChainmakerBlock.BlockInfo.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockInfoOrBuilder> batchBuilder_;

      /**
       * <code>repeated .common.BlockInfo batch = 1;</code>
       */
      public java.util.List<org.chainmaker.pb.common.ChainmakerBlock.BlockInfo> getBatchList() {
        if (batchBuilder_ == null) {
          return java.util.Collections.unmodifiableList(batch_);
        } else {
          return batchBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .common.BlockInfo batch = 1;</code>
       */
      public int getBatchCount() {
        if (batchBuilder_ == null) {
          return batch_.size();
        } else {
          return batchBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .common.BlockInfo batch = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.BlockInfo getBatch(int index) {
        if (batchBuilder_ == null) {
          return batch_.get(index);
        } else {
          return batchBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .common.BlockInfo batch = 1;</code>
       */
      public Builder setBatch(
          int index, org.chainmaker.pb.common.ChainmakerBlock.BlockInfo value) {
        if (batchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBatchIsMutable();
          batch_.set(index, value);
          onChanged();
        } else {
          batchBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .common.BlockInfo batch = 1;</code>
       */
      public Builder setBatch(
          int index, org.chainmaker.pb.common.ChainmakerBlock.BlockInfo.Builder builderForValue) {
        if (batchBuilder_ == null) {
          ensureBatchIsMutable();
          batch_.set(index, builderForValue.build());
          onChanged();
        } else {
          batchBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .common.BlockInfo batch = 1;</code>
       */
      public Builder addBatch(org.chainmaker.pb.common.ChainmakerBlock.BlockInfo value) {
        if (batchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBatchIsMutable();
          batch_.add(value);
          onChanged();
        } else {
          batchBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .common.BlockInfo batch = 1;</code>
       */
      public Builder addBatch(
          int index, org.chainmaker.pb.common.ChainmakerBlock.BlockInfo value) {
        if (batchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBatchIsMutable();
          batch_.add(index, value);
          onChanged();
        } else {
          batchBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .common.BlockInfo batch = 1;</code>
       */
      public Builder addBatch(
          org.chainmaker.pb.common.ChainmakerBlock.BlockInfo.Builder builderForValue) {
        if (batchBuilder_ == null) {
          ensureBatchIsMutable();
          batch_.add(builderForValue.build());
          onChanged();
        } else {
          batchBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .common.BlockInfo batch = 1;</code>
       */
      public Builder addBatch(
          int index, org.chainmaker.pb.common.ChainmakerBlock.BlockInfo.Builder builderForValue) {
        if (batchBuilder_ == null) {
          ensureBatchIsMutable();
          batch_.add(index, builderForValue.build());
          onChanged();
        } else {
          batchBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .common.BlockInfo batch = 1;</code>
       */
      public Builder addAllBatch(
          java.lang.Iterable<? extends org.chainmaker.pb.common.ChainmakerBlock.BlockInfo> values) {
        if (batchBuilder_ == null) {
          ensureBatchIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, batch_);
          onChanged();
        } else {
          batchBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .common.BlockInfo batch = 1;</code>
       */
      public Builder clearBatch() {
        if (batchBuilder_ == null) {
          batch_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          batchBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .common.BlockInfo batch = 1;</code>
       */
      public Builder removeBatch(int index) {
        if (batchBuilder_ == null) {
          ensureBatchIsMutable();
          batch_.remove(index);
          onChanged();
        } else {
          batchBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .common.BlockInfo batch = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.BlockInfo.Builder getBatchBuilder(
          int index) {
        return getBatchFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .common.BlockInfo batch = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.BlockInfoOrBuilder getBatchOrBuilder(
          int index) {
        if (batchBuilder_ == null) {
          return batch_.get(index);  } else {
          return batchBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .common.BlockInfo batch = 1;</code>
       */
      public java.util.List<? extends org.chainmaker.pb.common.ChainmakerBlock.BlockInfoOrBuilder> 
           getBatchOrBuilderList() {
        if (batchBuilder_ != null) {
          return batchBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(batch_);
        }
      }
      /**
       * <code>repeated .common.BlockInfo batch = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.BlockInfo.Builder addBatchBuilder() {
        return getBatchFieldBuilder().addBuilder(
            org.chainmaker.pb.common.ChainmakerBlock.BlockInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .common.BlockInfo batch = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.BlockInfo.Builder addBatchBuilder(
          int index) {
        return getBatchFieldBuilder().addBuilder(
            index, org.chainmaker.pb.common.ChainmakerBlock.BlockInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .common.BlockInfo batch = 1;</code>
       */
      public java.util.List<org.chainmaker.pb.common.ChainmakerBlock.BlockInfo.Builder> 
           getBatchBuilderList() {
        return getBatchFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.BlockInfo, org.chainmaker.pb.common.ChainmakerBlock.BlockInfo.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockInfoOrBuilder> 
          getBatchFieldBuilder() {
        if (batchBuilder_ == null) {
          batchBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.chainmaker.pb.common.ChainmakerBlock.BlockInfo, org.chainmaker.pb.common.ChainmakerBlock.BlockInfo.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockInfoOrBuilder>(
                  batch_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          batch_ = null;
        }
        return batchBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:sync.BlockInfoBatch)
    }

    // @@protoc_insertion_point(class_scope:sync.BlockInfoBatch)
    private static final org.chainmaker.pb.sync.Sync.BlockInfoBatch DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.sync.Sync.BlockInfoBatch();
    }

    public static org.chainmaker.pb.sync.Sync.BlockInfoBatch getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BlockInfoBatch>
        PARSER = new com.google.protobuf.AbstractParser<BlockInfoBatch>() {
      @java.lang.Override
      public BlockInfoBatch parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlockInfoBatch(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BlockInfoBatch> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BlockInfoBatch> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.sync.Sync.BlockInfoBatch getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SyncBlockBatchOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sync.SyncBlockBatch)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * the response structure returned when requesting block data
     * </pre>
     *
     * <code>.sync.BlockBatch block_batch = 1;</code>
     * @return Whether the blockBatch field is set.
     */
    boolean hasBlockBatch();
    /**
     * <pre>
     * the response structure returned when requesting block data
     * </pre>
     *
     * <code>.sync.BlockBatch block_batch = 1;</code>
     * @return The blockBatch.
     */
    org.chainmaker.pb.sync.Sync.BlockBatch getBlockBatch();
    /**
     * <pre>
     * the response structure returned when requesting block data
     * </pre>
     *
     * <code>.sync.BlockBatch block_batch = 1;</code>
     */
    org.chainmaker.pb.sync.Sync.BlockBatchOrBuilder getBlockBatchOrBuilder();

    /**
     * <pre>
     * when requesting a block and its read / write set data
     * </pre>
     *
     * <code>.sync.BlockInfoBatch blockinfo_batch = 2;</code>
     * @return Whether the blockinfoBatch field is set.
     */
    boolean hasBlockinfoBatch();
    /**
     * <pre>
     * when requesting a block and its read / write set data
     * </pre>
     *
     * <code>.sync.BlockInfoBatch blockinfo_batch = 2;</code>
     * @return The blockinfoBatch.
     */
    org.chainmaker.pb.sync.Sync.BlockInfoBatch getBlockinfoBatch();
    /**
     * <pre>
     * when requesting a block and its read / write set data
     * </pre>
     *
     * <code>.sync.BlockInfoBatch blockinfo_batch = 2;</code>
     */
    org.chainmaker.pb.sync.Sync.BlockInfoBatchOrBuilder getBlockinfoBatchOrBuilder();

    /**
     * <code>bool with_rwset = 3;</code>
     * @return The withRwset.
     */
    boolean getWithRwset();

    public org.chainmaker.pb.sync.Sync.SyncBlockBatch.DataCase getDataCase();
  }
  /**
   * <pre>
   * block response message
   * </pre>
   *
   * Protobuf type {@code sync.SyncBlockBatch}
   */
  public static final class SyncBlockBatch extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sync.SyncBlockBatch)
      SyncBlockBatchOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SyncBlockBatch.newBuilder() to construct.
    private SyncBlockBatch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SyncBlockBatch() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SyncBlockBatch();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SyncBlockBatch(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.chainmaker.pb.sync.Sync.BlockBatch.Builder subBuilder = null;
              if (dataCase_ == 1) {
                subBuilder = ((org.chainmaker.pb.sync.Sync.BlockBatch) data_).toBuilder();
              }
              data_ =
                  input.readMessage(org.chainmaker.pb.sync.Sync.BlockBatch.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.chainmaker.pb.sync.Sync.BlockBatch) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 1;
              break;
            }
            case 18: {
              org.chainmaker.pb.sync.Sync.BlockInfoBatch.Builder subBuilder = null;
              if (dataCase_ == 2) {
                subBuilder = ((org.chainmaker.pb.sync.Sync.BlockInfoBatch) data_).toBuilder();
              }
              data_ =
                  input.readMessage(org.chainmaker.pb.sync.Sync.BlockInfoBatch.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.chainmaker.pb.sync.Sync.BlockInfoBatch) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 2;
              break;
            }
            case 24: {

              withRwset_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.sync.Sync.internal_static_sync_SyncBlockBatch_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.sync.Sync.internal_static_sync_SyncBlockBatch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.sync.Sync.SyncBlockBatch.class, org.chainmaker.pb.sync.Sync.SyncBlockBatch.Builder.class);
    }

    private int dataCase_ = 0;
    private java.lang.Object data_;
    public enum DataCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      BLOCK_BATCH(1),
      BLOCKINFO_BATCH(2),
      DATA_NOT_SET(0);
      private final int value;
      private DataCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DataCase valueOf(int value) {
        return forNumber(value);
      }

      public static DataCase forNumber(int value) {
        switch (value) {
          case 1: return BLOCK_BATCH;
          case 2: return BLOCKINFO_BATCH;
          case 0: return DATA_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public DataCase
    getDataCase() {
      return DataCase.forNumber(
          dataCase_);
    }

    public static final int BLOCK_BATCH_FIELD_NUMBER = 1;
    /**
     * <pre>
     * the response structure returned when requesting block data
     * </pre>
     *
     * <code>.sync.BlockBatch block_batch = 1;</code>
     * @return Whether the blockBatch field is set.
     */
    @java.lang.Override
    public boolean hasBlockBatch() {
      return dataCase_ == 1;
    }
    /**
     * <pre>
     * the response structure returned when requesting block data
     * </pre>
     *
     * <code>.sync.BlockBatch block_batch = 1;</code>
     * @return The blockBatch.
     */
    @java.lang.Override
    public org.chainmaker.pb.sync.Sync.BlockBatch getBlockBatch() {
      if (dataCase_ == 1) {
         return (org.chainmaker.pb.sync.Sync.BlockBatch) data_;
      }
      return org.chainmaker.pb.sync.Sync.BlockBatch.getDefaultInstance();
    }
    /**
     * <pre>
     * the response structure returned when requesting block data
     * </pre>
     *
     * <code>.sync.BlockBatch block_batch = 1;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.sync.Sync.BlockBatchOrBuilder getBlockBatchOrBuilder() {
      if (dataCase_ == 1) {
         return (org.chainmaker.pb.sync.Sync.BlockBatch) data_;
      }
      return org.chainmaker.pb.sync.Sync.BlockBatch.getDefaultInstance();
    }

    public static final int BLOCKINFO_BATCH_FIELD_NUMBER = 2;
    /**
     * <pre>
     * when requesting a block and its read / write set data
     * </pre>
     *
     * <code>.sync.BlockInfoBatch blockinfo_batch = 2;</code>
     * @return Whether the blockinfoBatch field is set.
     */
    @java.lang.Override
    public boolean hasBlockinfoBatch() {
      return dataCase_ == 2;
    }
    /**
     * <pre>
     * when requesting a block and its read / write set data
     * </pre>
     *
     * <code>.sync.BlockInfoBatch blockinfo_batch = 2;</code>
     * @return The blockinfoBatch.
     */
    @java.lang.Override
    public org.chainmaker.pb.sync.Sync.BlockInfoBatch getBlockinfoBatch() {
      if (dataCase_ == 2) {
         return (org.chainmaker.pb.sync.Sync.BlockInfoBatch) data_;
      }
      return org.chainmaker.pb.sync.Sync.BlockInfoBatch.getDefaultInstance();
    }
    /**
     * <pre>
     * when requesting a block and its read / write set data
     * </pre>
     *
     * <code>.sync.BlockInfoBatch blockinfo_batch = 2;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.sync.Sync.BlockInfoBatchOrBuilder getBlockinfoBatchOrBuilder() {
      if (dataCase_ == 2) {
         return (org.chainmaker.pb.sync.Sync.BlockInfoBatch) data_;
      }
      return org.chainmaker.pb.sync.Sync.BlockInfoBatch.getDefaultInstance();
    }

    public static final int WITH_RWSET_FIELD_NUMBER = 3;
    private boolean withRwset_;
    /**
     * <code>bool with_rwset = 3;</code>
     * @return The withRwset.
     */
    @java.lang.Override
    public boolean getWithRwset() {
      return withRwset_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (dataCase_ == 1) {
        output.writeMessage(1, (org.chainmaker.pb.sync.Sync.BlockBatch) data_);
      }
      if (dataCase_ == 2) {
        output.writeMessage(2, (org.chainmaker.pb.sync.Sync.BlockInfoBatch) data_);
      }
      if (withRwset_ != false) {
        output.writeBool(3, withRwset_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (dataCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (org.chainmaker.pb.sync.Sync.BlockBatch) data_);
      }
      if (dataCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (org.chainmaker.pb.sync.Sync.BlockInfoBatch) data_);
      }
      if (withRwset_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, withRwset_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.sync.Sync.SyncBlockBatch)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.sync.Sync.SyncBlockBatch other = (org.chainmaker.pb.sync.Sync.SyncBlockBatch) obj;

      if (getWithRwset()
          != other.getWithRwset()) return false;
      if (!getDataCase().equals(other.getDataCase())) return false;
      switch (dataCase_) {
        case 1:
          if (!getBlockBatch()
              .equals(other.getBlockBatch())) return false;
          break;
        case 2:
          if (!getBlockinfoBatch()
              .equals(other.getBlockinfoBatch())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + WITH_RWSET_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getWithRwset());
      switch (dataCase_) {
        case 1:
          hash = (37 * hash) + BLOCK_BATCH_FIELD_NUMBER;
          hash = (53 * hash) + getBlockBatch().hashCode();
          break;
        case 2:
          hash = (37 * hash) + BLOCKINFO_BATCH_FIELD_NUMBER;
          hash = (53 * hash) + getBlockinfoBatch().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.sync.Sync.SyncBlockBatch parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.sync.Sync.SyncBlockBatch parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.SyncBlockBatch parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.sync.Sync.SyncBlockBatch parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.SyncBlockBatch parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.sync.Sync.SyncBlockBatch parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.SyncBlockBatch parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.sync.Sync.SyncBlockBatch parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.SyncBlockBatch parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.sync.Sync.SyncBlockBatch parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.sync.Sync.SyncBlockBatch parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.sync.Sync.SyncBlockBatch parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.sync.Sync.SyncBlockBatch prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * block response message
     * </pre>
     *
     * Protobuf type {@code sync.SyncBlockBatch}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sync.SyncBlockBatch)
        org.chainmaker.pb.sync.Sync.SyncBlockBatchOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.sync.Sync.internal_static_sync_SyncBlockBatch_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.sync.Sync.internal_static_sync_SyncBlockBatch_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.sync.Sync.SyncBlockBatch.class, org.chainmaker.pb.sync.Sync.SyncBlockBatch.Builder.class);
      }

      // Construct using org.chainmaker.pb.sync.Sync.SyncBlockBatch.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        withRwset_ = false;

        dataCase_ = 0;
        data_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.sync.Sync.internal_static_sync_SyncBlockBatch_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.sync.Sync.SyncBlockBatch getDefaultInstanceForType() {
        return org.chainmaker.pb.sync.Sync.SyncBlockBatch.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.sync.Sync.SyncBlockBatch build() {
        org.chainmaker.pb.sync.Sync.SyncBlockBatch result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.sync.Sync.SyncBlockBatch buildPartial() {
        org.chainmaker.pb.sync.Sync.SyncBlockBatch result = new org.chainmaker.pb.sync.Sync.SyncBlockBatch(this);
        if (dataCase_ == 1) {
          if (blockBatchBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = blockBatchBuilder_.build();
          }
        }
        if (dataCase_ == 2) {
          if (blockinfoBatchBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = blockinfoBatchBuilder_.build();
          }
        }
        result.withRwset_ = withRwset_;
        result.dataCase_ = dataCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.sync.Sync.SyncBlockBatch) {
          return mergeFrom((org.chainmaker.pb.sync.Sync.SyncBlockBatch)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.sync.Sync.SyncBlockBatch other) {
        if (other == org.chainmaker.pb.sync.Sync.SyncBlockBatch.getDefaultInstance()) return this;
        if (other.getWithRwset() != false) {
          setWithRwset(other.getWithRwset());
        }
        switch (other.getDataCase()) {
          case BLOCK_BATCH: {
            mergeBlockBatch(other.getBlockBatch());
            break;
          }
          case BLOCKINFO_BATCH: {
            mergeBlockinfoBatch(other.getBlockinfoBatch());
            break;
          }
          case DATA_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.sync.Sync.SyncBlockBatch parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.sync.Sync.SyncBlockBatch) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int dataCase_ = 0;
      private java.lang.Object data_;
      public DataCase
          getDataCase() {
        return DataCase.forNumber(
            dataCase_);
      }

      public Builder clearData() {
        dataCase_ = 0;
        data_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.sync.Sync.BlockBatch, org.chainmaker.pb.sync.Sync.BlockBatch.Builder, org.chainmaker.pb.sync.Sync.BlockBatchOrBuilder> blockBatchBuilder_;
      /**
       * <pre>
       * the response structure returned when requesting block data
       * </pre>
       *
       * <code>.sync.BlockBatch block_batch = 1;</code>
       * @return Whether the blockBatch field is set.
       */
      @java.lang.Override
      public boolean hasBlockBatch() {
        return dataCase_ == 1;
      }
      /**
       * <pre>
       * the response structure returned when requesting block data
       * </pre>
       *
       * <code>.sync.BlockBatch block_batch = 1;</code>
       * @return The blockBatch.
       */
      @java.lang.Override
      public org.chainmaker.pb.sync.Sync.BlockBatch getBlockBatch() {
        if (blockBatchBuilder_ == null) {
          if (dataCase_ == 1) {
            return (org.chainmaker.pb.sync.Sync.BlockBatch) data_;
          }
          return org.chainmaker.pb.sync.Sync.BlockBatch.getDefaultInstance();
        } else {
          if (dataCase_ == 1) {
            return blockBatchBuilder_.getMessage();
          }
          return org.chainmaker.pb.sync.Sync.BlockBatch.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * the response structure returned when requesting block data
       * </pre>
       *
       * <code>.sync.BlockBatch block_batch = 1;</code>
       */
      public Builder setBlockBatch(org.chainmaker.pb.sync.Sync.BlockBatch value) {
        if (blockBatchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          blockBatchBuilder_.setMessage(value);
        }
        dataCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * the response structure returned when requesting block data
       * </pre>
       *
       * <code>.sync.BlockBatch block_batch = 1;</code>
       */
      public Builder setBlockBatch(
          org.chainmaker.pb.sync.Sync.BlockBatch.Builder builderForValue) {
        if (blockBatchBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          blockBatchBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * the response structure returned when requesting block data
       * </pre>
       *
       * <code>.sync.BlockBatch block_batch = 1;</code>
       */
      public Builder mergeBlockBatch(org.chainmaker.pb.sync.Sync.BlockBatch value) {
        if (blockBatchBuilder_ == null) {
          if (dataCase_ == 1 &&
              data_ != org.chainmaker.pb.sync.Sync.BlockBatch.getDefaultInstance()) {
            data_ = org.chainmaker.pb.sync.Sync.BlockBatch.newBuilder((org.chainmaker.pb.sync.Sync.BlockBatch) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 1) {
            blockBatchBuilder_.mergeFrom(value);
          } else {
            blockBatchBuilder_.setMessage(value);
          }
        }
        dataCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * the response structure returned when requesting block data
       * </pre>
       *
       * <code>.sync.BlockBatch block_batch = 1;</code>
       */
      public Builder clearBlockBatch() {
        if (blockBatchBuilder_ == null) {
          if (dataCase_ == 1) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 1) {
            dataCase_ = 0;
            data_ = null;
          }
          blockBatchBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * the response structure returned when requesting block data
       * </pre>
       *
       * <code>.sync.BlockBatch block_batch = 1;</code>
       */
      public org.chainmaker.pb.sync.Sync.BlockBatch.Builder getBlockBatchBuilder() {
        return getBlockBatchFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * the response structure returned when requesting block data
       * </pre>
       *
       * <code>.sync.BlockBatch block_batch = 1;</code>
       */
      @java.lang.Override
      public org.chainmaker.pb.sync.Sync.BlockBatchOrBuilder getBlockBatchOrBuilder() {
        if ((dataCase_ == 1) && (blockBatchBuilder_ != null)) {
          return blockBatchBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 1) {
            return (org.chainmaker.pb.sync.Sync.BlockBatch) data_;
          }
          return org.chainmaker.pb.sync.Sync.BlockBatch.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * the response structure returned when requesting block data
       * </pre>
       *
       * <code>.sync.BlockBatch block_batch = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.sync.Sync.BlockBatch, org.chainmaker.pb.sync.Sync.BlockBatch.Builder, org.chainmaker.pb.sync.Sync.BlockBatchOrBuilder> 
          getBlockBatchFieldBuilder() {
        if (blockBatchBuilder_ == null) {
          if (!(dataCase_ == 1)) {
            data_ = org.chainmaker.pb.sync.Sync.BlockBatch.getDefaultInstance();
          }
          blockBatchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.sync.Sync.BlockBatch, org.chainmaker.pb.sync.Sync.BlockBatch.Builder, org.chainmaker.pb.sync.Sync.BlockBatchOrBuilder>(
                  (org.chainmaker.pb.sync.Sync.BlockBatch) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 1;
        onChanged();;
        return blockBatchBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.sync.Sync.BlockInfoBatch, org.chainmaker.pb.sync.Sync.BlockInfoBatch.Builder, org.chainmaker.pb.sync.Sync.BlockInfoBatchOrBuilder> blockinfoBatchBuilder_;
      /**
       * <pre>
       * when requesting a block and its read / write set data
       * </pre>
       *
       * <code>.sync.BlockInfoBatch blockinfo_batch = 2;</code>
       * @return Whether the blockinfoBatch field is set.
       */
      @java.lang.Override
      public boolean hasBlockinfoBatch() {
        return dataCase_ == 2;
      }
      /**
       * <pre>
       * when requesting a block and its read / write set data
       * </pre>
       *
       * <code>.sync.BlockInfoBatch blockinfo_batch = 2;</code>
       * @return The blockinfoBatch.
       */
      @java.lang.Override
      public org.chainmaker.pb.sync.Sync.BlockInfoBatch getBlockinfoBatch() {
        if (blockinfoBatchBuilder_ == null) {
          if (dataCase_ == 2) {
            return (org.chainmaker.pb.sync.Sync.BlockInfoBatch) data_;
          }
          return org.chainmaker.pb.sync.Sync.BlockInfoBatch.getDefaultInstance();
        } else {
          if (dataCase_ == 2) {
            return blockinfoBatchBuilder_.getMessage();
          }
          return org.chainmaker.pb.sync.Sync.BlockInfoBatch.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * when requesting a block and its read / write set data
       * </pre>
       *
       * <code>.sync.BlockInfoBatch blockinfo_batch = 2;</code>
       */
      public Builder setBlockinfoBatch(org.chainmaker.pb.sync.Sync.BlockInfoBatch value) {
        if (blockinfoBatchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          blockinfoBatchBuilder_.setMessage(value);
        }
        dataCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * when requesting a block and its read / write set data
       * </pre>
       *
       * <code>.sync.BlockInfoBatch blockinfo_batch = 2;</code>
       */
      public Builder setBlockinfoBatch(
          org.chainmaker.pb.sync.Sync.BlockInfoBatch.Builder builderForValue) {
        if (blockinfoBatchBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          blockinfoBatchBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * when requesting a block and its read / write set data
       * </pre>
       *
       * <code>.sync.BlockInfoBatch blockinfo_batch = 2;</code>
       */
      public Builder mergeBlockinfoBatch(org.chainmaker.pb.sync.Sync.BlockInfoBatch value) {
        if (blockinfoBatchBuilder_ == null) {
          if (dataCase_ == 2 &&
              data_ != org.chainmaker.pb.sync.Sync.BlockInfoBatch.getDefaultInstance()) {
            data_ = org.chainmaker.pb.sync.Sync.BlockInfoBatch.newBuilder((org.chainmaker.pb.sync.Sync.BlockInfoBatch) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 2) {
            blockinfoBatchBuilder_.mergeFrom(value);
          } else {
            blockinfoBatchBuilder_.setMessage(value);
          }
        }
        dataCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * when requesting a block and its read / write set data
       * </pre>
       *
       * <code>.sync.BlockInfoBatch blockinfo_batch = 2;</code>
       */
      public Builder clearBlockinfoBatch() {
        if (blockinfoBatchBuilder_ == null) {
          if (dataCase_ == 2) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 2) {
            dataCase_ = 0;
            data_ = null;
          }
          blockinfoBatchBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * when requesting a block and its read / write set data
       * </pre>
       *
       * <code>.sync.BlockInfoBatch blockinfo_batch = 2;</code>
       */
      public org.chainmaker.pb.sync.Sync.BlockInfoBatch.Builder getBlockinfoBatchBuilder() {
        return getBlockinfoBatchFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * when requesting a block and its read / write set data
       * </pre>
       *
       * <code>.sync.BlockInfoBatch blockinfo_batch = 2;</code>
       */
      @java.lang.Override
      public org.chainmaker.pb.sync.Sync.BlockInfoBatchOrBuilder getBlockinfoBatchOrBuilder() {
        if ((dataCase_ == 2) && (blockinfoBatchBuilder_ != null)) {
          return blockinfoBatchBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 2) {
            return (org.chainmaker.pb.sync.Sync.BlockInfoBatch) data_;
          }
          return org.chainmaker.pb.sync.Sync.BlockInfoBatch.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * when requesting a block and its read / write set data
       * </pre>
       *
       * <code>.sync.BlockInfoBatch blockinfo_batch = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.sync.Sync.BlockInfoBatch, org.chainmaker.pb.sync.Sync.BlockInfoBatch.Builder, org.chainmaker.pb.sync.Sync.BlockInfoBatchOrBuilder> 
          getBlockinfoBatchFieldBuilder() {
        if (blockinfoBatchBuilder_ == null) {
          if (!(dataCase_ == 2)) {
            data_ = org.chainmaker.pb.sync.Sync.BlockInfoBatch.getDefaultInstance();
          }
          blockinfoBatchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.sync.Sync.BlockInfoBatch, org.chainmaker.pb.sync.Sync.BlockInfoBatch.Builder, org.chainmaker.pb.sync.Sync.BlockInfoBatchOrBuilder>(
                  (org.chainmaker.pb.sync.Sync.BlockInfoBatch) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 2;
        onChanged();;
        return blockinfoBatchBuilder_;
      }

      private boolean withRwset_ ;
      /**
       * <code>bool with_rwset = 3;</code>
       * @return The withRwset.
       */
      @java.lang.Override
      public boolean getWithRwset() {
        return withRwset_;
      }
      /**
       * <code>bool with_rwset = 3;</code>
       * @param value The withRwset to set.
       * @return This builder for chaining.
       */
      public Builder setWithRwset(boolean value) {
        
        withRwset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool with_rwset = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearWithRwset() {
        
        withRwset_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:sync.SyncBlockBatch)
    }

    // @@protoc_insertion_point(class_scope:sync.SyncBlockBatch)
    private static final org.chainmaker.pb.sync.Sync.SyncBlockBatch DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.sync.Sync.SyncBlockBatch();
    }

    public static org.chainmaker.pb.sync.Sync.SyncBlockBatch getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SyncBlockBatch>
        PARSER = new com.google.protobuf.AbstractParser<SyncBlockBatch>() {
      @java.lang.Override
      public SyncBlockBatch parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SyncBlockBatch(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SyncBlockBatch> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SyncBlockBatch> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.sync.Sync.SyncBlockBatch getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sync_SyncMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sync_SyncMsg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sync_BlockHeightBCM_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sync_BlockHeightBCM_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sync_BlockSyncReq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sync_BlockSyncReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sync_BlockBatch_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sync_BlockBatch_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sync_BlockInfoBatch_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sync_BlockInfoBatch_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sync_SyncBlockBatch_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sync_SyncBlockBatch_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017sync/sync.proto\022\004sync\032\022common/block.pr" +
      "oto\"\236\001\n\007SyncMsg\022#\n\004type\030\001 \001(\0162\025.sync.Syn" +
      "cMsg.MsgType\022\017\n\007payload\030\002 \001(\014\"]\n\007MsgType" +
      "\022\023\n\017NODE_STATUS_REQ\020\000\022\024\n\020NODE_STATUS_RES" +
      "P\020\001\022\022\n\016BLOCK_SYNC_REQ\020\002\022\023\n\017BLOCK_SYNC_RE" +
      "SP\020\003\"?\n\016BlockHeightBCM\022\024\n\014block_height\030\001" +
      " \001(\004\022\027\n\017archived_height\030\002 \001(\004\"L\n\014BlockSy" +
      "ncReq\022\024\n\014block_height\030\001 \001(\004\022\022\n\nbatch_siz" +
      "e\030\002 \001(\004\022\022\n\nwith_rwset\030\003 \001(\010\",\n\nBlockBatc" +
      "h\022\036\n\007batches\030\001 \003(\0132\r.common.Block\"2\n\016Blo" +
      "ckInfoBatch\022 \n\005batch\030\001 \003(\0132\021.common.Bloc" +
      "kInfo\"\206\001\n\016SyncBlockBatch\022\'\n\013block_batch\030" +
      "\001 \001(\0132\020.sync.BlockBatchH\000\022/\n\017blockinfo_b" +
      "atch\030\002 \001(\0132\024.sync.BlockInfoBatchH\000\022\022\n\nwi" +
      "th_rwset\030\003 \001(\010B\006\n\004dataBA\n\026org.chainmaker" +
      ".pb.syncZ\'chainmaker.org/chainmaker/pb-g" +
      "o/v2/syncb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.chainmaker.pb.common.ChainmakerBlock.getDescriptor(),
        });
    internal_static_sync_SyncMsg_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_sync_SyncMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sync_SyncMsg_descriptor,
        new java.lang.String[] { "Type", "Payload", });
    internal_static_sync_BlockHeightBCM_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_sync_BlockHeightBCM_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sync_BlockHeightBCM_descriptor,
        new java.lang.String[] { "BlockHeight", "ArchivedHeight", });
    internal_static_sync_BlockSyncReq_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_sync_BlockSyncReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sync_BlockSyncReq_descriptor,
        new java.lang.String[] { "BlockHeight", "BatchSize", "WithRwset", });
    internal_static_sync_BlockBatch_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_sync_BlockBatch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sync_BlockBatch_descriptor,
        new java.lang.String[] { "Batches", });
    internal_static_sync_BlockInfoBatch_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_sync_BlockInfoBatch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sync_BlockInfoBatch_descriptor,
        new java.lang.String[] { "Batch", });
    internal_static_sync_SyncBlockBatch_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_sync_SyncBlockBatch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sync_SyncBlockBatch_descriptor,
        new java.lang.String[] { "BlockBatch", "BlockinfoBatch", "WithRwset", "Data", });
    org.chainmaker.pb.common.ChainmakerBlock.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
