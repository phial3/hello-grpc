// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: store/store.proto

package org.chainmaker.pb.store;

public final class Store {
  private Store() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code store.DbType}
   */
  public enum DbType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>INVALID_DB = 0;</code>
     */
    INVALID_DB(0),
    /**
     * <code>BLOCK_DB = 1;</code>
     */
    BLOCK_DB(1),
    /**
     * <code>BLOCK_INDEX_DB = 2;</code>
     */
    BLOCK_INDEX_DB(2),
    /**
     * <code>TX_DB = 3;</code>
     */
    TX_DB(3),
    /**
     * <code>TX_INDEX_DB = 4;</code>
     */
    TX_INDEX_DB(4),
    /**
     * <code>SOFT_DB = 5;</code>
     */
    SOFT_DB(5),
    /**
     * <code>STATE_DB = 6;</code>
     */
    STATE_DB(6),
    /**
     * <code>READ_WRITE_DB = 7;</code>
     */
    READ_WRITE_DB(7),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>INVALID_DB = 0;</code>
     */
    public static final int INVALID_DB_VALUE = 0;
    /**
     * <code>BLOCK_DB = 1;</code>
     */
    public static final int BLOCK_DB_VALUE = 1;
    /**
     * <code>BLOCK_INDEX_DB = 2;</code>
     */
    public static final int BLOCK_INDEX_DB_VALUE = 2;
    /**
     * <code>TX_DB = 3;</code>
     */
    public static final int TX_DB_VALUE = 3;
    /**
     * <code>TX_INDEX_DB = 4;</code>
     */
    public static final int TX_INDEX_DB_VALUE = 4;
    /**
     * <code>SOFT_DB = 5;</code>
     */
    public static final int SOFT_DB_VALUE = 5;
    /**
     * <code>STATE_DB = 6;</code>
     */
    public static final int STATE_DB_VALUE = 6;
    /**
     * <code>READ_WRITE_DB = 7;</code>
     */
    public static final int READ_WRITE_DB_VALUE = 7;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DbType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DbType forNumber(int value) {
      switch (value) {
        case 0: return INVALID_DB;
        case 1: return BLOCK_DB;
        case 2: return BLOCK_INDEX_DB;
        case 3: return TX_DB;
        case 4: return TX_INDEX_DB;
        case 5: return SOFT_DB;
        case 6: return STATE_DB;
        case 7: return READ_WRITE_DB;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DbType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DbType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DbType>() {
            public DbType findValueByNumber(int number) {
              return DbType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.chainmaker.pb.store.Store.getDescriptor().getEnumTypes().get(0);
    }

    private static final DbType[] VALUES = values();

    public static DbType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DbType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:store.DbType)
  }

  /**
   * Protobuf enum {@code store.DataStoreType}
   */
  public enum DataStoreType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 文件系统存储
     * </pre>
     *
     * <code>FILE_STORE = 0;</code>
     */
    FILE_STORE(0),
    /**
     * <pre>
     *SQL数据库存储
     * </pre>
     *
     * <code>SQL_STORE = 1;</code>
     */
    SQL_STORE(1),
    /**
     * <pre>
     *云对象存储
     * </pre>
     *
     * <code>COS = 2;</code>
     */
    COS(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 文件系统存储
     * </pre>
     *
     * <code>FILE_STORE = 0;</code>
     */
    public static final int FILE_STORE_VALUE = 0;
    /**
     * <pre>
     *SQL数据库存储
     * </pre>
     *
     * <code>SQL_STORE = 1;</code>
     */
    public static final int SQL_STORE_VALUE = 1;
    /**
     * <pre>
     *云对象存储
     * </pre>
     *
     * <code>COS = 2;</code>
     */
    public static final int COS_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DataStoreType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DataStoreType forNumber(int value) {
      switch (value) {
        case 0: return FILE_STORE;
        case 1: return SQL_STORE;
        case 2: return COS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DataStoreType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DataStoreType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DataStoreType>() {
            public DataStoreType findValueByNumber(int number) {
              return DataStoreType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.chainmaker.pb.store.Store.getDescriptor().getEnumTypes().get(1);
    }

    private static final DataStoreType[] VALUES = values();

    public static DataStoreType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DataStoreType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:store.DataStoreType)
  }

  public interface SerializedBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:store.SerializedBlock)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * header of block
     * </pre>
     *
     * <code>.common.BlockHeader header = 1;</code>
     * @return Whether the header field is set.
     */
    boolean hasHeader();
    /**
     * <pre>
     * header of block
     * </pre>
     *
     * <code>.common.BlockHeader header = 1;</code>
     * @return The header.
     */
    org.chainmaker.pb.common.ChainmakerBlock.BlockHeader getHeader();
    /**
     * <pre>
     * header of block
     * </pre>
     *
     * <code>.common.BlockHeader header = 1;</code>
     */
    org.chainmaker.pb.common.ChainmakerBlock.BlockHeaderOrBuilder getHeaderOrBuilder();

    /**
     * <pre>
     * transaction execution sequence of the block, described by DAG
     * </pre>
     *
     * <code>.common.DAG dag = 2;</code>
     * @return Whether the dag field is set.
     */
    boolean hasDag();
    /**
     * <pre>
     * transaction execution sequence of the block, described by DAG
     * </pre>
     *
     * <code>.common.DAG dag = 2;</code>
     * @return The dag.
     */
    org.chainmaker.pb.common.ChainmakerBlock.DAG getDag();
    /**
     * <pre>
     * transaction execution sequence of the block, described by DAG
     * </pre>
     *
     * <code>.common.DAG dag = 2;</code>
     */
    org.chainmaker.pb.common.ChainmakerBlock.DAGOrBuilder getDagOrBuilder();

    /**
     * <pre>
     * transaction id list within the block
     * </pre>
     *
     * <code>repeated string tx_ids = 3;</code>
     * @return A list containing the txIds.
     */
    java.util.List<java.lang.String>
        getTxIdsList();
    /**
     * <pre>
     * transaction id list within the block
     * </pre>
     *
     * <code>repeated string tx_ids = 3;</code>
     * @return The count of txIds.
     */
    int getTxIdsCount();
    /**
     * <pre>
     * transaction id list within the block
     * </pre>
     *
     * <code>repeated string tx_ids = 3;</code>
     * @param index The index of the element to return.
     * @return The txIds at the given index.
     */
    java.lang.String getTxIds(int index);
    /**
     * <pre>
     * transaction id list within the block
     * </pre>
     *
     * <code>repeated string tx_ids = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the txIds at the given index.
     */
    com.google.protobuf.ByteString
        getTxIdsBytes(int index);

    /**
     * <pre>
     * block additional data, not included in block hash calculation
     * </pre>
     *
     * <code>.common.AdditionalData additional_data = 4;</code>
     * @return Whether the additionalData field is set.
     */
    boolean hasAdditionalData();
    /**
     * <pre>
     * block additional data, not included in block hash calculation
     * </pre>
     *
     * <code>.common.AdditionalData additional_data = 4;</code>
     * @return The additionalData.
     */
    org.chainmaker.pb.common.ChainmakerBlock.AdditionalData getAdditionalData();
    /**
     * <pre>
     * block additional data, not included in block hash calculation
     * </pre>
     *
     * <code>.common.AdditionalData additional_data = 4;</code>
     */
    org.chainmaker.pb.common.ChainmakerBlock.AdditionalDataOrBuilder getAdditionalDataOrBuilder();
  }
  /**
   * <pre>
   * block structure used in serialization
   * </pre>
   *
   * Protobuf type {@code store.SerializedBlock}
   */
  public static final class SerializedBlock extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:store.SerializedBlock)
      SerializedBlockOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SerializedBlock.newBuilder() to construct.
    private SerializedBlock(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SerializedBlock() {
      txIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SerializedBlock();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SerializedBlock(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.chainmaker.pb.common.ChainmakerBlock.DAG.Builder subBuilder = null;
              if (dag_ != null) {
                subBuilder = dag_.toBuilder();
              }
              dag_ = input.readMessage(org.chainmaker.pb.common.ChainmakerBlock.DAG.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dag_);
                dag_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                txIds_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              txIds_.add(s);
              break;
            }
            case 34: {
              org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.Builder subBuilder = null;
              if (additionalData_ != null) {
                subBuilder = additionalData_.toBuilder();
              }
              additionalData_ = input.readMessage(org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(additionalData_);
                additionalData_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          txIds_ = txIds_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.store.Store.internal_static_store_SerializedBlock_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.store.Store.internal_static_store_SerializedBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.store.Store.SerializedBlock.class, org.chainmaker.pb.store.Store.SerializedBlock.Builder.class);
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private org.chainmaker.pb.common.ChainmakerBlock.BlockHeader header_;
    /**
     * <pre>
     * header of block
     * </pre>
     *
     * <code>.common.BlockHeader header = 1;</code>
     * @return Whether the header field is set.
     */
    @java.lang.Override
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <pre>
     * header of block
     * </pre>
     *
     * <code>.common.BlockHeader header = 1;</code>
     * @return The header.
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.BlockHeader getHeader() {
      return header_ == null ? org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.getDefaultInstance() : header_;
    }
    /**
     * <pre>
     * header of block
     * </pre>
     *
     * <code>.common.BlockHeader header = 1;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.BlockHeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int DAG_FIELD_NUMBER = 2;
    private org.chainmaker.pb.common.ChainmakerBlock.DAG dag_;
    /**
     * <pre>
     * transaction execution sequence of the block, described by DAG
     * </pre>
     *
     * <code>.common.DAG dag = 2;</code>
     * @return Whether the dag field is set.
     */
    @java.lang.Override
    public boolean hasDag() {
      return dag_ != null;
    }
    /**
     * <pre>
     * transaction execution sequence of the block, described by DAG
     * </pre>
     *
     * <code>.common.DAG dag = 2;</code>
     * @return The dag.
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.DAG getDag() {
      return dag_ == null ? org.chainmaker.pb.common.ChainmakerBlock.DAG.getDefaultInstance() : dag_;
    }
    /**
     * <pre>
     * transaction execution sequence of the block, described by DAG
     * </pre>
     *
     * <code>.common.DAG dag = 2;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.DAGOrBuilder getDagOrBuilder() {
      return getDag();
    }

    public static final int TX_IDS_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList txIds_;
    /**
     * <pre>
     * transaction id list within the block
     * </pre>
     *
     * <code>repeated string tx_ids = 3;</code>
     * @return A list containing the txIds.
     */
    public com.google.protobuf.ProtocolStringList
        getTxIdsList() {
      return txIds_;
    }
    /**
     * <pre>
     * transaction id list within the block
     * </pre>
     *
     * <code>repeated string tx_ids = 3;</code>
     * @return The count of txIds.
     */
    public int getTxIdsCount() {
      return txIds_.size();
    }
    /**
     * <pre>
     * transaction id list within the block
     * </pre>
     *
     * <code>repeated string tx_ids = 3;</code>
     * @param index The index of the element to return.
     * @return The txIds at the given index.
     */
    public java.lang.String getTxIds(int index) {
      return txIds_.get(index);
    }
    /**
     * <pre>
     * transaction id list within the block
     * </pre>
     *
     * <code>repeated string tx_ids = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the txIds at the given index.
     */
    public com.google.protobuf.ByteString
        getTxIdsBytes(int index) {
      return txIds_.getByteString(index);
    }

    public static final int ADDITIONAL_DATA_FIELD_NUMBER = 4;
    private org.chainmaker.pb.common.ChainmakerBlock.AdditionalData additionalData_;
    /**
     * <pre>
     * block additional data, not included in block hash calculation
     * </pre>
     *
     * <code>.common.AdditionalData additional_data = 4;</code>
     * @return Whether the additionalData field is set.
     */
    @java.lang.Override
    public boolean hasAdditionalData() {
      return additionalData_ != null;
    }
    /**
     * <pre>
     * block additional data, not included in block hash calculation
     * </pre>
     *
     * <code>.common.AdditionalData additional_data = 4;</code>
     * @return The additionalData.
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.AdditionalData getAdditionalData() {
      return additionalData_ == null ? org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.getDefaultInstance() : additionalData_;
    }
    /**
     * <pre>
     * block additional data, not included in block hash calculation
     * </pre>
     *
     * <code>.common.AdditionalData additional_data = 4;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.AdditionalDataOrBuilder getAdditionalDataOrBuilder() {
      return getAdditionalData();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (dag_ != null) {
        output.writeMessage(2, getDag());
      }
      for (int i = 0; i < txIds_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, txIds_.getRaw(i));
      }
      if (additionalData_ != null) {
        output.writeMessage(4, getAdditionalData());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (dag_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDag());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < txIds_.size(); i++) {
          dataSize += computeStringSizeNoTag(txIds_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTxIdsList().size();
      }
      if (additionalData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getAdditionalData());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.store.Store.SerializedBlock)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.store.Store.SerializedBlock other = (org.chainmaker.pb.store.Store.SerializedBlock) obj;

      if (hasHeader() != other.hasHeader()) return false;
      if (hasHeader()) {
        if (!getHeader()
            .equals(other.getHeader())) return false;
      }
      if (hasDag() != other.hasDag()) return false;
      if (hasDag()) {
        if (!getDag()
            .equals(other.getDag())) return false;
      }
      if (!getTxIdsList()
          .equals(other.getTxIdsList())) return false;
      if (hasAdditionalData() != other.hasAdditionalData()) return false;
      if (hasAdditionalData()) {
        if (!getAdditionalData()
            .equals(other.getAdditionalData())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (hasDag()) {
        hash = (37 * hash) + DAG_FIELD_NUMBER;
        hash = (53 * hash) + getDag().hashCode();
      }
      if (getTxIdsCount() > 0) {
        hash = (37 * hash) + TX_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getTxIdsList().hashCode();
      }
      if (hasAdditionalData()) {
        hash = (37 * hash) + ADDITIONAL_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getAdditionalData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.store.Store.SerializedBlock parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.store.Store.SerializedBlock parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.store.Store.SerializedBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.store.Store.SerializedBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.store.Store.SerializedBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.store.Store.SerializedBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.store.Store.SerializedBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.store.Store.SerializedBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.store.Store.SerializedBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.store.Store.SerializedBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.store.Store.SerializedBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.store.Store.SerializedBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.store.Store.SerializedBlock prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * block structure used in serialization
     * </pre>
     *
     * Protobuf type {@code store.SerializedBlock}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:store.SerializedBlock)
        org.chainmaker.pb.store.Store.SerializedBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.store.Store.internal_static_store_SerializedBlock_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.store.Store.internal_static_store_SerializedBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.store.Store.SerializedBlock.class, org.chainmaker.pb.store.Store.SerializedBlock.Builder.class);
      }

      // Construct using org.chainmaker.pb.store.Store.SerializedBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (dagBuilder_ == null) {
          dag_ = null;
        } else {
          dag_ = null;
          dagBuilder_ = null;
        }
        txIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (additionalDataBuilder_ == null) {
          additionalData_ = null;
        } else {
          additionalData_ = null;
          additionalDataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.store.Store.internal_static_store_SerializedBlock_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.store.Store.SerializedBlock getDefaultInstanceForType() {
        return org.chainmaker.pb.store.Store.SerializedBlock.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.store.Store.SerializedBlock build() {
        org.chainmaker.pb.store.Store.SerializedBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.store.Store.SerializedBlock buildPartial() {
        org.chainmaker.pb.store.Store.SerializedBlock result = new org.chainmaker.pb.store.Store.SerializedBlock(this);
        int from_bitField0_ = bitField0_;
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (dagBuilder_ == null) {
          result.dag_ = dag_;
        } else {
          result.dag_ = dagBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          txIds_ = txIds_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.txIds_ = txIds_;
        if (additionalDataBuilder_ == null) {
          result.additionalData_ = additionalData_;
        } else {
          result.additionalData_ = additionalDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.store.Store.SerializedBlock) {
          return mergeFrom((org.chainmaker.pb.store.Store.SerializedBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.store.Store.SerializedBlock other) {
        if (other == org.chainmaker.pb.store.Store.SerializedBlock.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasDag()) {
          mergeDag(other.getDag());
        }
        if (!other.txIds_.isEmpty()) {
          if (txIds_.isEmpty()) {
            txIds_ = other.txIds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTxIdsIsMutable();
            txIds_.addAll(other.txIds_);
          }
          onChanged();
        }
        if (other.hasAdditionalData()) {
          mergeAdditionalData(other.getAdditionalData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.store.Store.SerializedBlock parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.store.Store.SerializedBlock) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.chainmaker.pb.common.ChainmakerBlock.BlockHeader header_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.BlockHeader, org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockHeaderOrBuilder> headerBuilder_;
      /**
       * <pre>
       * header of block
       * </pre>
       *
       * <code>.common.BlockHeader header = 1;</code>
       * @return Whether the header field is set.
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <pre>
       * header of block
       * </pre>
       *
       * <code>.common.BlockHeader header = 1;</code>
       * @return The header.
       */
      public org.chainmaker.pb.common.ChainmakerBlock.BlockHeader getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * header of block
       * </pre>
       *
       * <code>.common.BlockHeader header = 1;</code>
       */
      public Builder setHeader(org.chainmaker.pb.common.ChainmakerBlock.BlockHeader value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * header of block
       * </pre>
       *
       * <code>.common.BlockHeader header = 1;</code>
       */
      public Builder setHeader(
          org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * header of block
       * </pre>
       *
       * <code>.common.BlockHeader header = 1;</code>
       */
      public Builder mergeHeader(org.chainmaker.pb.common.ChainmakerBlock.BlockHeader value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * header of block
       * </pre>
       *
       * <code>.common.BlockHeader header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * header of block
       * </pre>
       *
       * <code>.common.BlockHeader header = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * header of block
       * </pre>
       *
       * <code>.common.BlockHeader header = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.BlockHeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.getDefaultInstance() : header_;
        }
      }
      /**
       * <pre>
       * header of block
       * </pre>
       *
       * <code>.common.BlockHeader header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.BlockHeader, org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockHeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.common.ChainmakerBlock.BlockHeader, org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockHeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private org.chainmaker.pb.common.ChainmakerBlock.DAG dag_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.DAG, org.chainmaker.pb.common.ChainmakerBlock.DAG.Builder, org.chainmaker.pb.common.ChainmakerBlock.DAGOrBuilder> dagBuilder_;
      /**
       * <pre>
       * transaction execution sequence of the block, described by DAG
       * </pre>
       *
       * <code>.common.DAG dag = 2;</code>
       * @return Whether the dag field is set.
       */
      public boolean hasDag() {
        return dagBuilder_ != null || dag_ != null;
      }
      /**
       * <pre>
       * transaction execution sequence of the block, described by DAG
       * </pre>
       *
       * <code>.common.DAG dag = 2;</code>
       * @return The dag.
       */
      public org.chainmaker.pb.common.ChainmakerBlock.DAG getDag() {
        if (dagBuilder_ == null) {
          return dag_ == null ? org.chainmaker.pb.common.ChainmakerBlock.DAG.getDefaultInstance() : dag_;
        } else {
          return dagBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * transaction execution sequence of the block, described by DAG
       * </pre>
       *
       * <code>.common.DAG dag = 2;</code>
       */
      public Builder setDag(org.chainmaker.pb.common.ChainmakerBlock.DAG value) {
        if (dagBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dag_ = value;
          onChanged();
        } else {
          dagBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * transaction execution sequence of the block, described by DAG
       * </pre>
       *
       * <code>.common.DAG dag = 2;</code>
       */
      public Builder setDag(
          org.chainmaker.pb.common.ChainmakerBlock.DAG.Builder builderForValue) {
        if (dagBuilder_ == null) {
          dag_ = builderForValue.build();
          onChanged();
        } else {
          dagBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * transaction execution sequence of the block, described by DAG
       * </pre>
       *
       * <code>.common.DAG dag = 2;</code>
       */
      public Builder mergeDag(org.chainmaker.pb.common.ChainmakerBlock.DAG value) {
        if (dagBuilder_ == null) {
          if (dag_ != null) {
            dag_ =
              org.chainmaker.pb.common.ChainmakerBlock.DAG.newBuilder(dag_).mergeFrom(value).buildPartial();
          } else {
            dag_ = value;
          }
          onChanged();
        } else {
          dagBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * transaction execution sequence of the block, described by DAG
       * </pre>
       *
       * <code>.common.DAG dag = 2;</code>
       */
      public Builder clearDag() {
        if (dagBuilder_ == null) {
          dag_ = null;
          onChanged();
        } else {
          dag_ = null;
          dagBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * transaction execution sequence of the block, described by DAG
       * </pre>
       *
       * <code>.common.DAG dag = 2;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.DAG.Builder getDagBuilder() {
        
        onChanged();
        return getDagFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * transaction execution sequence of the block, described by DAG
       * </pre>
       *
       * <code>.common.DAG dag = 2;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.DAGOrBuilder getDagOrBuilder() {
        if (dagBuilder_ != null) {
          return dagBuilder_.getMessageOrBuilder();
        } else {
          return dag_ == null ?
              org.chainmaker.pb.common.ChainmakerBlock.DAG.getDefaultInstance() : dag_;
        }
      }
      /**
       * <pre>
       * transaction execution sequence of the block, described by DAG
       * </pre>
       *
       * <code>.common.DAG dag = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.DAG, org.chainmaker.pb.common.ChainmakerBlock.DAG.Builder, org.chainmaker.pb.common.ChainmakerBlock.DAGOrBuilder> 
          getDagFieldBuilder() {
        if (dagBuilder_ == null) {
          dagBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.common.ChainmakerBlock.DAG, org.chainmaker.pb.common.ChainmakerBlock.DAG.Builder, org.chainmaker.pb.common.ChainmakerBlock.DAGOrBuilder>(
                  getDag(),
                  getParentForChildren(),
                  isClean());
          dag_ = null;
        }
        return dagBuilder_;
      }

      private com.google.protobuf.LazyStringList txIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTxIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          txIds_ = new com.google.protobuf.LazyStringArrayList(txIds_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * transaction id list within the block
       * </pre>
       *
       * <code>repeated string tx_ids = 3;</code>
       * @return A list containing the txIds.
       */
      public com.google.protobuf.ProtocolStringList
          getTxIdsList() {
        return txIds_.getUnmodifiableView();
      }
      /**
       * <pre>
       * transaction id list within the block
       * </pre>
       *
       * <code>repeated string tx_ids = 3;</code>
       * @return The count of txIds.
       */
      public int getTxIdsCount() {
        return txIds_.size();
      }
      /**
       * <pre>
       * transaction id list within the block
       * </pre>
       *
       * <code>repeated string tx_ids = 3;</code>
       * @param index The index of the element to return.
       * @return The txIds at the given index.
       */
      public java.lang.String getTxIds(int index) {
        return txIds_.get(index);
      }
      /**
       * <pre>
       * transaction id list within the block
       * </pre>
       *
       * <code>repeated string tx_ids = 3;</code>
       * @param index The index of the value to return.
       * @return The bytes of the txIds at the given index.
       */
      public com.google.protobuf.ByteString
          getTxIdsBytes(int index) {
        return txIds_.getByteString(index);
      }
      /**
       * <pre>
       * transaction id list within the block
       * </pre>
       *
       * <code>repeated string tx_ids = 3;</code>
       * @param index The index to set the value at.
       * @param value The txIds to set.
       * @return This builder for chaining.
       */
      public Builder setTxIds(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTxIdsIsMutable();
        txIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * transaction id list within the block
       * </pre>
       *
       * <code>repeated string tx_ids = 3;</code>
       * @param value The txIds to add.
       * @return This builder for chaining.
       */
      public Builder addTxIds(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTxIdsIsMutable();
        txIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * transaction id list within the block
       * </pre>
       *
       * <code>repeated string tx_ids = 3;</code>
       * @param values The txIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllTxIds(
          java.lang.Iterable<java.lang.String> values) {
        ensureTxIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, txIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * transaction id list within the block
       * </pre>
       *
       * <code>repeated string tx_ids = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTxIds() {
        txIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * transaction id list within the block
       * </pre>
       *
       * <code>repeated string tx_ids = 3;</code>
       * @param value The bytes of the txIds to add.
       * @return This builder for chaining.
       */
      public Builder addTxIdsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTxIdsIsMutable();
        txIds_.add(value);
        onChanged();
        return this;
      }

      private org.chainmaker.pb.common.ChainmakerBlock.AdditionalData additionalData_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.AdditionalData, org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.Builder, org.chainmaker.pb.common.ChainmakerBlock.AdditionalDataOrBuilder> additionalDataBuilder_;
      /**
       * <pre>
       * block additional data, not included in block hash calculation
       * </pre>
       *
       * <code>.common.AdditionalData additional_data = 4;</code>
       * @return Whether the additionalData field is set.
       */
      public boolean hasAdditionalData() {
        return additionalDataBuilder_ != null || additionalData_ != null;
      }
      /**
       * <pre>
       * block additional data, not included in block hash calculation
       * </pre>
       *
       * <code>.common.AdditionalData additional_data = 4;</code>
       * @return The additionalData.
       */
      public org.chainmaker.pb.common.ChainmakerBlock.AdditionalData getAdditionalData() {
        if (additionalDataBuilder_ == null) {
          return additionalData_ == null ? org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.getDefaultInstance() : additionalData_;
        } else {
          return additionalDataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * block additional data, not included in block hash calculation
       * </pre>
       *
       * <code>.common.AdditionalData additional_data = 4;</code>
       */
      public Builder setAdditionalData(org.chainmaker.pb.common.ChainmakerBlock.AdditionalData value) {
        if (additionalDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          additionalData_ = value;
          onChanged();
        } else {
          additionalDataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * block additional data, not included in block hash calculation
       * </pre>
       *
       * <code>.common.AdditionalData additional_data = 4;</code>
       */
      public Builder setAdditionalData(
          org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.Builder builderForValue) {
        if (additionalDataBuilder_ == null) {
          additionalData_ = builderForValue.build();
          onChanged();
        } else {
          additionalDataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * block additional data, not included in block hash calculation
       * </pre>
       *
       * <code>.common.AdditionalData additional_data = 4;</code>
       */
      public Builder mergeAdditionalData(org.chainmaker.pb.common.ChainmakerBlock.AdditionalData value) {
        if (additionalDataBuilder_ == null) {
          if (additionalData_ != null) {
            additionalData_ =
              org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.newBuilder(additionalData_).mergeFrom(value).buildPartial();
          } else {
            additionalData_ = value;
          }
          onChanged();
        } else {
          additionalDataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * block additional data, not included in block hash calculation
       * </pre>
       *
       * <code>.common.AdditionalData additional_data = 4;</code>
       */
      public Builder clearAdditionalData() {
        if (additionalDataBuilder_ == null) {
          additionalData_ = null;
          onChanged();
        } else {
          additionalData_ = null;
          additionalDataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * block additional data, not included in block hash calculation
       * </pre>
       *
       * <code>.common.AdditionalData additional_data = 4;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.Builder getAdditionalDataBuilder() {
        
        onChanged();
        return getAdditionalDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * block additional data, not included in block hash calculation
       * </pre>
       *
       * <code>.common.AdditionalData additional_data = 4;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.AdditionalDataOrBuilder getAdditionalDataOrBuilder() {
        if (additionalDataBuilder_ != null) {
          return additionalDataBuilder_.getMessageOrBuilder();
        } else {
          return additionalData_ == null ?
              org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.getDefaultInstance() : additionalData_;
        }
      }
      /**
       * <pre>
       * block additional data, not included in block hash calculation
       * </pre>
       *
       * <code>.common.AdditionalData additional_data = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.AdditionalData, org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.Builder, org.chainmaker.pb.common.ChainmakerBlock.AdditionalDataOrBuilder> 
          getAdditionalDataFieldBuilder() {
        if (additionalDataBuilder_ == null) {
          additionalDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.common.ChainmakerBlock.AdditionalData, org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.Builder, org.chainmaker.pb.common.ChainmakerBlock.AdditionalDataOrBuilder>(
                  getAdditionalData(),
                  getParentForChildren(),
                  isClean());
          additionalData_ = null;
        }
        return additionalDataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:store.SerializedBlock)
    }

    // @@protoc_insertion_point(class_scope:store.SerializedBlock)
    private static final org.chainmaker.pb.store.Store.SerializedBlock DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.store.Store.SerializedBlock();
    }

    public static org.chainmaker.pb.store.Store.SerializedBlock getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SerializedBlock>
        PARSER = new com.google.protobuf.AbstractParser<SerializedBlock>() {
      @java.lang.Override
      public SerializedBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SerializedBlock(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SerializedBlock> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SerializedBlock> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.store.Store.SerializedBlock getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BlockWithRWSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:store.BlockWithRWSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * block data
     * </pre>
     *
     * <code>.common.Block block = 1;</code>
     * @return Whether the block field is set.
     */
    boolean hasBlock();
    /**
     * <pre>
     * block data
     * </pre>
     *
     * <code>.common.Block block = 1;</code>
     * @return The block.
     */
    org.chainmaker.pb.common.ChainmakerBlock.Block getBlock();
    /**
     * <pre>
     * block data
     * </pre>
     *
     * <code>.common.Block block = 1;</code>
     */
    org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder getBlockOrBuilder();

    /**
     * <pre>
     * transaction read/write set of blocks
     * </pre>
     *
     * <code>repeated .common.TxRWSet txRWSets = 2;</code>
     */
    java.util.List<org.chainmaker.pb.common.Rwset.TxRWSet> 
        getTxRWSetsList();
    /**
     * <pre>
     * transaction read/write set of blocks
     * </pre>
     *
     * <code>repeated .common.TxRWSet txRWSets = 2;</code>
     */
    org.chainmaker.pb.common.Rwset.TxRWSet getTxRWSets(int index);
    /**
     * <pre>
     * transaction read/write set of blocks
     * </pre>
     *
     * <code>repeated .common.TxRWSet txRWSets = 2;</code>
     */
    int getTxRWSetsCount();
    /**
     * <pre>
     * transaction read/write set of blocks
     * </pre>
     *
     * <code>repeated .common.TxRWSet txRWSets = 2;</code>
     */
    java.util.List<? extends org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder> 
        getTxRWSetsOrBuilderList();
    /**
     * <pre>
     * transaction read/write set of blocks
     * </pre>
     *
     * <code>repeated .common.TxRWSet txRWSets = 2;</code>
     */
    org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder getTxRWSetsOrBuilder(
        int index);

    /**
     * <pre>
     * contract event info
     * </pre>
     *
     * <code>repeated .common.ContractEvent contract_events = 3;</code>
     */
    java.util.List<org.chainmaker.pb.common.ResultOuterClass.ContractEvent> 
        getContractEventsList();
    /**
     * <pre>
     * contract event info
     * </pre>
     *
     * <code>repeated .common.ContractEvent contract_events = 3;</code>
     */
    org.chainmaker.pb.common.ResultOuterClass.ContractEvent getContractEvents(int index);
    /**
     * <pre>
     * contract event info
     * </pre>
     *
     * <code>repeated .common.ContractEvent contract_events = 3;</code>
     */
    int getContractEventsCount();
    /**
     * <pre>
     * contract event info
     * </pre>
     *
     * <code>repeated .common.ContractEvent contract_events = 3;</code>
     */
    java.util.List<? extends org.chainmaker.pb.common.ResultOuterClass.ContractEventOrBuilder> 
        getContractEventsOrBuilderList();
    /**
     * <pre>
     * contract event info
     * </pre>
     *
     * <code>repeated .common.ContractEvent contract_events = 3;</code>
     */
    org.chainmaker.pb.common.ResultOuterClass.ContractEventOrBuilder getContractEventsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Block and its read/write set information
   * </pre>
   *
   * Protobuf type {@code store.BlockWithRWSet}
   */
  public static final class BlockWithRWSet extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:store.BlockWithRWSet)
      BlockWithRWSetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BlockWithRWSet.newBuilder() to construct.
    private BlockWithRWSet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BlockWithRWSet() {
      txRWSets_ = java.util.Collections.emptyList();
      contractEvents_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BlockWithRWSet();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BlockWithRWSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.chainmaker.pb.common.ChainmakerBlock.Block.Builder subBuilder = null;
              if (block_ != null) {
                subBuilder = block_.toBuilder();
              }
              block_ = input.readMessage(org.chainmaker.pb.common.ChainmakerBlock.Block.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(block_);
                block_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                txRWSets_ = new java.util.ArrayList<org.chainmaker.pb.common.Rwset.TxRWSet>();
                mutable_bitField0_ |= 0x00000001;
              }
              txRWSets_.add(
                  input.readMessage(org.chainmaker.pb.common.Rwset.TxRWSet.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                contractEvents_ = new java.util.ArrayList<org.chainmaker.pb.common.ResultOuterClass.ContractEvent>();
                mutable_bitField0_ |= 0x00000002;
              }
              contractEvents_.add(
                  input.readMessage(org.chainmaker.pb.common.ResultOuterClass.ContractEvent.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          txRWSets_ = java.util.Collections.unmodifiableList(txRWSets_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          contractEvents_ = java.util.Collections.unmodifiableList(contractEvents_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.store.Store.internal_static_store_BlockWithRWSet_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.store.Store.internal_static_store_BlockWithRWSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.store.Store.BlockWithRWSet.class, org.chainmaker.pb.store.Store.BlockWithRWSet.Builder.class);
    }

    public static final int BLOCK_FIELD_NUMBER = 1;
    private org.chainmaker.pb.common.ChainmakerBlock.Block block_;
    /**
     * <pre>
     * block data
     * </pre>
     *
     * <code>.common.Block block = 1;</code>
     * @return Whether the block field is set.
     */
    @java.lang.Override
    public boolean hasBlock() {
      return block_ != null;
    }
    /**
     * <pre>
     * block data
     * </pre>
     *
     * <code>.common.Block block = 1;</code>
     * @return The block.
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.Block getBlock() {
      return block_ == null ? org.chainmaker.pb.common.ChainmakerBlock.Block.getDefaultInstance() : block_;
    }
    /**
     * <pre>
     * block data
     * </pre>
     *
     * <code>.common.Block block = 1;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder getBlockOrBuilder() {
      return getBlock();
    }

    public static final int TXRWSETS_FIELD_NUMBER = 2;
    private java.util.List<org.chainmaker.pb.common.Rwset.TxRWSet> txRWSets_;
    /**
     * <pre>
     * transaction read/write set of blocks
     * </pre>
     *
     * <code>repeated .common.TxRWSet txRWSets = 2;</code>
     */
    @java.lang.Override
    public java.util.List<org.chainmaker.pb.common.Rwset.TxRWSet> getTxRWSetsList() {
      return txRWSets_;
    }
    /**
     * <pre>
     * transaction read/write set of blocks
     * </pre>
     *
     * <code>repeated .common.TxRWSet txRWSets = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder> 
        getTxRWSetsOrBuilderList() {
      return txRWSets_;
    }
    /**
     * <pre>
     * transaction read/write set of blocks
     * </pre>
     *
     * <code>repeated .common.TxRWSet txRWSets = 2;</code>
     */
    @java.lang.Override
    public int getTxRWSetsCount() {
      return txRWSets_.size();
    }
    /**
     * <pre>
     * transaction read/write set of blocks
     * </pre>
     *
     * <code>repeated .common.TxRWSet txRWSets = 2;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.Rwset.TxRWSet getTxRWSets(int index) {
      return txRWSets_.get(index);
    }
    /**
     * <pre>
     * transaction read/write set of blocks
     * </pre>
     *
     * <code>repeated .common.TxRWSet txRWSets = 2;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder getTxRWSetsOrBuilder(
        int index) {
      return txRWSets_.get(index);
    }

    public static final int CONTRACT_EVENTS_FIELD_NUMBER = 3;
    private java.util.List<org.chainmaker.pb.common.ResultOuterClass.ContractEvent> contractEvents_;
    /**
     * <pre>
     * contract event info
     * </pre>
     *
     * <code>repeated .common.ContractEvent contract_events = 3;</code>
     */
    @java.lang.Override
    public java.util.List<org.chainmaker.pb.common.ResultOuterClass.ContractEvent> getContractEventsList() {
      return contractEvents_;
    }
    /**
     * <pre>
     * contract event info
     * </pre>
     *
     * <code>repeated .common.ContractEvent contract_events = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.chainmaker.pb.common.ResultOuterClass.ContractEventOrBuilder> 
        getContractEventsOrBuilderList() {
      return contractEvents_;
    }
    /**
     * <pre>
     * contract event info
     * </pre>
     *
     * <code>repeated .common.ContractEvent contract_events = 3;</code>
     */
    @java.lang.Override
    public int getContractEventsCount() {
      return contractEvents_.size();
    }
    /**
     * <pre>
     * contract event info
     * </pre>
     *
     * <code>repeated .common.ContractEvent contract_events = 3;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ResultOuterClass.ContractEvent getContractEvents(int index) {
      return contractEvents_.get(index);
    }
    /**
     * <pre>
     * contract event info
     * </pre>
     *
     * <code>repeated .common.ContractEvent contract_events = 3;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ResultOuterClass.ContractEventOrBuilder getContractEventsOrBuilder(
        int index) {
      return contractEvents_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (block_ != null) {
        output.writeMessage(1, getBlock());
      }
      for (int i = 0; i < txRWSets_.size(); i++) {
        output.writeMessage(2, txRWSets_.get(i));
      }
      for (int i = 0; i < contractEvents_.size(); i++) {
        output.writeMessage(3, contractEvents_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (block_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBlock());
      }
      for (int i = 0; i < txRWSets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, txRWSets_.get(i));
      }
      for (int i = 0; i < contractEvents_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, contractEvents_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.store.Store.BlockWithRWSet)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.store.Store.BlockWithRWSet other = (org.chainmaker.pb.store.Store.BlockWithRWSet) obj;

      if (hasBlock() != other.hasBlock()) return false;
      if (hasBlock()) {
        if (!getBlock()
            .equals(other.getBlock())) return false;
      }
      if (!getTxRWSetsList()
          .equals(other.getTxRWSetsList())) return false;
      if (!getContractEventsList()
          .equals(other.getContractEventsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBlock()) {
        hash = (37 * hash) + BLOCK_FIELD_NUMBER;
        hash = (53 * hash) + getBlock().hashCode();
      }
      if (getTxRWSetsCount() > 0) {
        hash = (37 * hash) + TXRWSETS_FIELD_NUMBER;
        hash = (53 * hash) + getTxRWSetsList().hashCode();
      }
      if (getContractEventsCount() > 0) {
        hash = (37 * hash) + CONTRACT_EVENTS_FIELD_NUMBER;
        hash = (53 * hash) + getContractEventsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.store.Store.BlockWithRWSet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.store.Store.BlockWithRWSet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.store.Store.BlockWithRWSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.store.Store.BlockWithRWSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.store.Store.BlockWithRWSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.store.Store.BlockWithRWSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.store.Store.BlockWithRWSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.store.Store.BlockWithRWSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.store.Store.BlockWithRWSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.store.Store.BlockWithRWSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.store.Store.BlockWithRWSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.store.Store.BlockWithRWSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.store.Store.BlockWithRWSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Block and its read/write set information
     * </pre>
     *
     * Protobuf type {@code store.BlockWithRWSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:store.BlockWithRWSet)
        org.chainmaker.pb.store.Store.BlockWithRWSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.store.Store.internal_static_store_BlockWithRWSet_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.store.Store.internal_static_store_BlockWithRWSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.store.Store.BlockWithRWSet.class, org.chainmaker.pb.store.Store.BlockWithRWSet.Builder.class);
      }

      // Construct using org.chainmaker.pb.store.Store.BlockWithRWSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTxRWSetsFieldBuilder();
          getContractEventsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (blockBuilder_ == null) {
          block_ = null;
        } else {
          block_ = null;
          blockBuilder_ = null;
        }
        if (txRWSetsBuilder_ == null) {
          txRWSets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          txRWSetsBuilder_.clear();
        }
        if (contractEventsBuilder_ == null) {
          contractEvents_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          contractEventsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.store.Store.internal_static_store_BlockWithRWSet_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.store.Store.BlockWithRWSet getDefaultInstanceForType() {
        return org.chainmaker.pb.store.Store.BlockWithRWSet.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.store.Store.BlockWithRWSet build() {
        org.chainmaker.pb.store.Store.BlockWithRWSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.store.Store.BlockWithRWSet buildPartial() {
        org.chainmaker.pb.store.Store.BlockWithRWSet result = new org.chainmaker.pb.store.Store.BlockWithRWSet(this);
        int from_bitField0_ = bitField0_;
        if (blockBuilder_ == null) {
          result.block_ = block_;
        } else {
          result.block_ = blockBuilder_.build();
        }
        if (txRWSetsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            txRWSets_ = java.util.Collections.unmodifiableList(txRWSets_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.txRWSets_ = txRWSets_;
        } else {
          result.txRWSets_ = txRWSetsBuilder_.build();
        }
        if (contractEventsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            contractEvents_ = java.util.Collections.unmodifiableList(contractEvents_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.contractEvents_ = contractEvents_;
        } else {
          result.contractEvents_ = contractEventsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.store.Store.BlockWithRWSet) {
          return mergeFrom((org.chainmaker.pb.store.Store.BlockWithRWSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.store.Store.BlockWithRWSet other) {
        if (other == org.chainmaker.pb.store.Store.BlockWithRWSet.getDefaultInstance()) return this;
        if (other.hasBlock()) {
          mergeBlock(other.getBlock());
        }
        if (txRWSetsBuilder_ == null) {
          if (!other.txRWSets_.isEmpty()) {
            if (txRWSets_.isEmpty()) {
              txRWSets_ = other.txRWSets_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTxRWSetsIsMutable();
              txRWSets_.addAll(other.txRWSets_);
            }
            onChanged();
          }
        } else {
          if (!other.txRWSets_.isEmpty()) {
            if (txRWSetsBuilder_.isEmpty()) {
              txRWSetsBuilder_.dispose();
              txRWSetsBuilder_ = null;
              txRWSets_ = other.txRWSets_;
              bitField0_ = (bitField0_ & ~0x00000001);
              txRWSetsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTxRWSetsFieldBuilder() : null;
            } else {
              txRWSetsBuilder_.addAllMessages(other.txRWSets_);
            }
          }
        }
        if (contractEventsBuilder_ == null) {
          if (!other.contractEvents_.isEmpty()) {
            if (contractEvents_.isEmpty()) {
              contractEvents_ = other.contractEvents_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureContractEventsIsMutable();
              contractEvents_.addAll(other.contractEvents_);
            }
            onChanged();
          }
        } else {
          if (!other.contractEvents_.isEmpty()) {
            if (contractEventsBuilder_.isEmpty()) {
              contractEventsBuilder_.dispose();
              contractEventsBuilder_ = null;
              contractEvents_ = other.contractEvents_;
              bitField0_ = (bitField0_ & ~0x00000002);
              contractEventsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getContractEventsFieldBuilder() : null;
            } else {
              contractEventsBuilder_.addAllMessages(other.contractEvents_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.store.Store.BlockWithRWSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.store.Store.BlockWithRWSet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.chainmaker.pb.common.ChainmakerBlock.Block block_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.Block, org.chainmaker.pb.common.ChainmakerBlock.Block.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder> blockBuilder_;
      /**
       * <pre>
       * block data
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       * @return Whether the block field is set.
       */
      public boolean hasBlock() {
        return blockBuilder_ != null || block_ != null;
      }
      /**
       * <pre>
       * block data
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       * @return The block.
       */
      public org.chainmaker.pb.common.ChainmakerBlock.Block getBlock() {
        if (blockBuilder_ == null) {
          return block_ == null ? org.chainmaker.pb.common.ChainmakerBlock.Block.getDefaultInstance() : block_;
        } else {
          return blockBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * block data
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       */
      public Builder setBlock(org.chainmaker.pb.common.ChainmakerBlock.Block value) {
        if (blockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          block_ = value;
          onChanged();
        } else {
          blockBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * block data
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       */
      public Builder setBlock(
          org.chainmaker.pb.common.ChainmakerBlock.Block.Builder builderForValue) {
        if (blockBuilder_ == null) {
          block_ = builderForValue.build();
          onChanged();
        } else {
          blockBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * block data
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       */
      public Builder mergeBlock(org.chainmaker.pb.common.ChainmakerBlock.Block value) {
        if (blockBuilder_ == null) {
          if (block_ != null) {
            block_ =
              org.chainmaker.pb.common.ChainmakerBlock.Block.newBuilder(block_).mergeFrom(value).buildPartial();
          } else {
            block_ = value;
          }
          onChanged();
        } else {
          blockBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * block data
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       */
      public Builder clearBlock() {
        if (blockBuilder_ == null) {
          block_ = null;
          onChanged();
        } else {
          block_ = null;
          blockBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * block data
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.Block.Builder getBlockBuilder() {
        
        onChanged();
        return getBlockFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * block data
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder getBlockOrBuilder() {
        if (blockBuilder_ != null) {
          return blockBuilder_.getMessageOrBuilder();
        } else {
          return block_ == null ?
              org.chainmaker.pb.common.ChainmakerBlock.Block.getDefaultInstance() : block_;
        }
      }
      /**
       * <pre>
       * block data
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.Block, org.chainmaker.pb.common.ChainmakerBlock.Block.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder> 
          getBlockFieldBuilder() {
        if (blockBuilder_ == null) {
          blockBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.common.ChainmakerBlock.Block, org.chainmaker.pb.common.ChainmakerBlock.Block.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder>(
                  getBlock(),
                  getParentForChildren(),
                  isClean());
          block_ = null;
        }
        return blockBuilder_;
      }

      private java.util.List<org.chainmaker.pb.common.Rwset.TxRWSet> txRWSets_ =
        java.util.Collections.emptyList();
      private void ensureTxRWSetsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          txRWSets_ = new java.util.ArrayList<org.chainmaker.pb.common.Rwset.TxRWSet>(txRWSets_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.chainmaker.pb.common.Rwset.TxRWSet, org.chainmaker.pb.common.Rwset.TxRWSet.Builder, org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder> txRWSetsBuilder_;

      /**
       * <pre>
       * transaction read/write set of blocks
       * </pre>
       *
       * <code>repeated .common.TxRWSet txRWSets = 2;</code>
       */
      public java.util.List<org.chainmaker.pb.common.Rwset.TxRWSet> getTxRWSetsList() {
        if (txRWSetsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(txRWSets_);
        } else {
          return txRWSetsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * transaction read/write set of blocks
       * </pre>
       *
       * <code>repeated .common.TxRWSet txRWSets = 2;</code>
       */
      public int getTxRWSetsCount() {
        if (txRWSetsBuilder_ == null) {
          return txRWSets_.size();
        } else {
          return txRWSetsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * transaction read/write set of blocks
       * </pre>
       *
       * <code>repeated .common.TxRWSet txRWSets = 2;</code>
       */
      public org.chainmaker.pb.common.Rwset.TxRWSet getTxRWSets(int index) {
        if (txRWSetsBuilder_ == null) {
          return txRWSets_.get(index);
        } else {
          return txRWSetsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * transaction read/write set of blocks
       * </pre>
       *
       * <code>repeated .common.TxRWSet txRWSets = 2;</code>
       */
      public Builder setTxRWSets(
          int index, org.chainmaker.pb.common.Rwset.TxRWSet value) {
        if (txRWSetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTxRWSetsIsMutable();
          txRWSets_.set(index, value);
          onChanged();
        } else {
          txRWSetsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * transaction read/write set of blocks
       * </pre>
       *
       * <code>repeated .common.TxRWSet txRWSets = 2;</code>
       */
      public Builder setTxRWSets(
          int index, org.chainmaker.pb.common.Rwset.TxRWSet.Builder builderForValue) {
        if (txRWSetsBuilder_ == null) {
          ensureTxRWSetsIsMutable();
          txRWSets_.set(index, builderForValue.build());
          onChanged();
        } else {
          txRWSetsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * transaction read/write set of blocks
       * </pre>
       *
       * <code>repeated .common.TxRWSet txRWSets = 2;</code>
       */
      public Builder addTxRWSets(org.chainmaker.pb.common.Rwset.TxRWSet value) {
        if (txRWSetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTxRWSetsIsMutable();
          txRWSets_.add(value);
          onChanged();
        } else {
          txRWSetsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * transaction read/write set of blocks
       * </pre>
       *
       * <code>repeated .common.TxRWSet txRWSets = 2;</code>
       */
      public Builder addTxRWSets(
          int index, org.chainmaker.pb.common.Rwset.TxRWSet value) {
        if (txRWSetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTxRWSetsIsMutable();
          txRWSets_.add(index, value);
          onChanged();
        } else {
          txRWSetsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * transaction read/write set of blocks
       * </pre>
       *
       * <code>repeated .common.TxRWSet txRWSets = 2;</code>
       */
      public Builder addTxRWSets(
          org.chainmaker.pb.common.Rwset.TxRWSet.Builder builderForValue) {
        if (txRWSetsBuilder_ == null) {
          ensureTxRWSetsIsMutable();
          txRWSets_.add(builderForValue.build());
          onChanged();
        } else {
          txRWSetsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * transaction read/write set of blocks
       * </pre>
       *
       * <code>repeated .common.TxRWSet txRWSets = 2;</code>
       */
      public Builder addTxRWSets(
          int index, org.chainmaker.pb.common.Rwset.TxRWSet.Builder builderForValue) {
        if (txRWSetsBuilder_ == null) {
          ensureTxRWSetsIsMutable();
          txRWSets_.add(index, builderForValue.build());
          onChanged();
        } else {
          txRWSetsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * transaction read/write set of blocks
       * </pre>
       *
       * <code>repeated .common.TxRWSet txRWSets = 2;</code>
       */
      public Builder addAllTxRWSets(
          java.lang.Iterable<? extends org.chainmaker.pb.common.Rwset.TxRWSet> values) {
        if (txRWSetsBuilder_ == null) {
          ensureTxRWSetsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, txRWSets_);
          onChanged();
        } else {
          txRWSetsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * transaction read/write set of blocks
       * </pre>
       *
       * <code>repeated .common.TxRWSet txRWSets = 2;</code>
       */
      public Builder clearTxRWSets() {
        if (txRWSetsBuilder_ == null) {
          txRWSets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          txRWSetsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * transaction read/write set of blocks
       * </pre>
       *
       * <code>repeated .common.TxRWSet txRWSets = 2;</code>
       */
      public Builder removeTxRWSets(int index) {
        if (txRWSetsBuilder_ == null) {
          ensureTxRWSetsIsMutable();
          txRWSets_.remove(index);
          onChanged();
        } else {
          txRWSetsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * transaction read/write set of blocks
       * </pre>
       *
       * <code>repeated .common.TxRWSet txRWSets = 2;</code>
       */
      public org.chainmaker.pb.common.Rwset.TxRWSet.Builder getTxRWSetsBuilder(
          int index) {
        return getTxRWSetsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * transaction read/write set of blocks
       * </pre>
       *
       * <code>repeated .common.TxRWSet txRWSets = 2;</code>
       */
      public org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder getTxRWSetsOrBuilder(
          int index) {
        if (txRWSetsBuilder_ == null) {
          return txRWSets_.get(index);  } else {
          return txRWSetsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * transaction read/write set of blocks
       * </pre>
       *
       * <code>repeated .common.TxRWSet txRWSets = 2;</code>
       */
      public java.util.List<? extends org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder> 
           getTxRWSetsOrBuilderList() {
        if (txRWSetsBuilder_ != null) {
          return txRWSetsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(txRWSets_);
        }
      }
      /**
       * <pre>
       * transaction read/write set of blocks
       * </pre>
       *
       * <code>repeated .common.TxRWSet txRWSets = 2;</code>
       */
      public org.chainmaker.pb.common.Rwset.TxRWSet.Builder addTxRWSetsBuilder() {
        return getTxRWSetsFieldBuilder().addBuilder(
            org.chainmaker.pb.common.Rwset.TxRWSet.getDefaultInstance());
      }
      /**
       * <pre>
       * transaction read/write set of blocks
       * </pre>
       *
       * <code>repeated .common.TxRWSet txRWSets = 2;</code>
       */
      public org.chainmaker.pb.common.Rwset.TxRWSet.Builder addTxRWSetsBuilder(
          int index) {
        return getTxRWSetsFieldBuilder().addBuilder(
            index, org.chainmaker.pb.common.Rwset.TxRWSet.getDefaultInstance());
      }
      /**
       * <pre>
       * transaction read/write set of blocks
       * </pre>
       *
       * <code>repeated .common.TxRWSet txRWSets = 2;</code>
       */
      public java.util.List<org.chainmaker.pb.common.Rwset.TxRWSet.Builder> 
           getTxRWSetsBuilderList() {
        return getTxRWSetsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.chainmaker.pb.common.Rwset.TxRWSet, org.chainmaker.pb.common.Rwset.TxRWSet.Builder, org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder> 
          getTxRWSetsFieldBuilder() {
        if (txRWSetsBuilder_ == null) {
          txRWSetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.chainmaker.pb.common.Rwset.TxRWSet, org.chainmaker.pb.common.Rwset.TxRWSet.Builder, org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder>(
                  txRWSets_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          txRWSets_ = null;
        }
        return txRWSetsBuilder_;
      }

      private java.util.List<org.chainmaker.pb.common.ResultOuterClass.ContractEvent> contractEvents_ =
        java.util.Collections.emptyList();
      private void ensureContractEventsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          contractEvents_ = new java.util.ArrayList<org.chainmaker.pb.common.ResultOuterClass.ContractEvent>(contractEvents_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.chainmaker.pb.common.ResultOuterClass.ContractEvent, org.chainmaker.pb.common.ResultOuterClass.ContractEvent.Builder, org.chainmaker.pb.common.ResultOuterClass.ContractEventOrBuilder> contractEventsBuilder_;

      /**
       * <pre>
       * contract event info
       * </pre>
       *
       * <code>repeated .common.ContractEvent contract_events = 3;</code>
       */
      public java.util.List<org.chainmaker.pb.common.ResultOuterClass.ContractEvent> getContractEventsList() {
        if (contractEventsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(contractEvents_);
        } else {
          return contractEventsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * contract event info
       * </pre>
       *
       * <code>repeated .common.ContractEvent contract_events = 3;</code>
       */
      public int getContractEventsCount() {
        if (contractEventsBuilder_ == null) {
          return contractEvents_.size();
        } else {
          return contractEventsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * contract event info
       * </pre>
       *
       * <code>repeated .common.ContractEvent contract_events = 3;</code>
       */
      public org.chainmaker.pb.common.ResultOuterClass.ContractEvent getContractEvents(int index) {
        if (contractEventsBuilder_ == null) {
          return contractEvents_.get(index);
        } else {
          return contractEventsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * contract event info
       * </pre>
       *
       * <code>repeated .common.ContractEvent contract_events = 3;</code>
       */
      public Builder setContractEvents(
          int index, org.chainmaker.pb.common.ResultOuterClass.ContractEvent value) {
        if (contractEventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContractEventsIsMutable();
          contractEvents_.set(index, value);
          onChanged();
        } else {
          contractEventsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * contract event info
       * </pre>
       *
       * <code>repeated .common.ContractEvent contract_events = 3;</code>
       */
      public Builder setContractEvents(
          int index, org.chainmaker.pb.common.ResultOuterClass.ContractEvent.Builder builderForValue) {
        if (contractEventsBuilder_ == null) {
          ensureContractEventsIsMutable();
          contractEvents_.set(index, builderForValue.build());
          onChanged();
        } else {
          contractEventsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * contract event info
       * </pre>
       *
       * <code>repeated .common.ContractEvent contract_events = 3;</code>
       */
      public Builder addContractEvents(org.chainmaker.pb.common.ResultOuterClass.ContractEvent value) {
        if (contractEventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContractEventsIsMutable();
          contractEvents_.add(value);
          onChanged();
        } else {
          contractEventsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * contract event info
       * </pre>
       *
       * <code>repeated .common.ContractEvent contract_events = 3;</code>
       */
      public Builder addContractEvents(
          int index, org.chainmaker.pb.common.ResultOuterClass.ContractEvent value) {
        if (contractEventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContractEventsIsMutable();
          contractEvents_.add(index, value);
          onChanged();
        } else {
          contractEventsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * contract event info
       * </pre>
       *
       * <code>repeated .common.ContractEvent contract_events = 3;</code>
       */
      public Builder addContractEvents(
          org.chainmaker.pb.common.ResultOuterClass.ContractEvent.Builder builderForValue) {
        if (contractEventsBuilder_ == null) {
          ensureContractEventsIsMutable();
          contractEvents_.add(builderForValue.build());
          onChanged();
        } else {
          contractEventsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * contract event info
       * </pre>
       *
       * <code>repeated .common.ContractEvent contract_events = 3;</code>
       */
      public Builder addContractEvents(
          int index, org.chainmaker.pb.common.ResultOuterClass.ContractEvent.Builder builderForValue) {
        if (contractEventsBuilder_ == null) {
          ensureContractEventsIsMutable();
          contractEvents_.add(index, builderForValue.build());
          onChanged();
        } else {
          contractEventsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * contract event info
       * </pre>
       *
       * <code>repeated .common.ContractEvent contract_events = 3;</code>
       */
      public Builder addAllContractEvents(
          java.lang.Iterable<? extends org.chainmaker.pb.common.ResultOuterClass.ContractEvent> values) {
        if (contractEventsBuilder_ == null) {
          ensureContractEventsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, contractEvents_);
          onChanged();
        } else {
          contractEventsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * contract event info
       * </pre>
       *
       * <code>repeated .common.ContractEvent contract_events = 3;</code>
       */
      public Builder clearContractEvents() {
        if (contractEventsBuilder_ == null) {
          contractEvents_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          contractEventsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * contract event info
       * </pre>
       *
       * <code>repeated .common.ContractEvent contract_events = 3;</code>
       */
      public Builder removeContractEvents(int index) {
        if (contractEventsBuilder_ == null) {
          ensureContractEventsIsMutable();
          contractEvents_.remove(index);
          onChanged();
        } else {
          contractEventsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * contract event info
       * </pre>
       *
       * <code>repeated .common.ContractEvent contract_events = 3;</code>
       */
      public org.chainmaker.pb.common.ResultOuterClass.ContractEvent.Builder getContractEventsBuilder(
          int index) {
        return getContractEventsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * contract event info
       * </pre>
       *
       * <code>repeated .common.ContractEvent contract_events = 3;</code>
       */
      public org.chainmaker.pb.common.ResultOuterClass.ContractEventOrBuilder getContractEventsOrBuilder(
          int index) {
        if (contractEventsBuilder_ == null) {
          return contractEvents_.get(index);  } else {
          return contractEventsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * contract event info
       * </pre>
       *
       * <code>repeated .common.ContractEvent contract_events = 3;</code>
       */
      public java.util.List<? extends org.chainmaker.pb.common.ResultOuterClass.ContractEventOrBuilder> 
           getContractEventsOrBuilderList() {
        if (contractEventsBuilder_ != null) {
          return contractEventsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(contractEvents_);
        }
      }
      /**
       * <pre>
       * contract event info
       * </pre>
       *
       * <code>repeated .common.ContractEvent contract_events = 3;</code>
       */
      public org.chainmaker.pb.common.ResultOuterClass.ContractEvent.Builder addContractEventsBuilder() {
        return getContractEventsFieldBuilder().addBuilder(
            org.chainmaker.pb.common.ResultOuterClass.ContractEvent.getDefaultInstance());
      }
      /**
       * <pre>
       * contract event info
       * </pre>
       *
       * <code>repeated .common.ContractEvent contract_events = 3;</code>
       */
      public org.chainmaker.pb.common.ResultOuterClass.ContractEvent.Builder addContractEventsBuilder(
          int index) {
        return getContractEventsFieldBuilder().addBuilder(
            index, org.chainmaker.pb.common.ResultOuterClass.ContractEvent.getDefaultInstance());
      }
      /**
       * <pre>
       * contract event info
       * </pre>
       *
       * <code>repeated .common.ContractEvent contract_events = 3;</code>
       */
      public java.util.List<org.chainmaker.pb.common.ResultOuterClass.ContractEvent.Builder> 
           getContractEventsBuilderList() {
        return getContractEventsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.chainmaker.pb.common.ResultOuterClass.ContractEvent, org.chainmaker.pb.common.ResultOuterClass.ContractEvent.Builder, org.chainmaker.pb.common.ResultOuterClass.ContractEventOrBuilder> 
          getContractEventsFieldBuilder() {
        if (contractEventsBuilder_ == null) {
          contractEventsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.chainmaker.pb.common.ResultOuterClass.ContractEvent, org.chainmaker.pb.common.ResultOuterClass.ContractEvent.Builder, org.chainmaker.pb.common.ResultOuterClass.ContractEventOrBuilder>(
                  contractEvents_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          contractEvents_ = null;
        }
        return contractEventsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:store.BlockWithRWSet)
    }

    // @@protoc_insertion_point(class_scope:store.BlockWithRWSet)
    private static final org.chainmaker.pb.store.Store.BlockWithRWSet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.store.Store.BlockWithRWSet();
    }

    public static org.chainmaker.pb.store.Store.BlockWithRWSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BlockWithRWSet>
        PARSER = new com.google.protobuf.AbstractParser<BlockWithRWSet>() {
      @java.lang.Override
      public BlockWithRWSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlockWithRWSet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BlockWithRWSet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BlockWithRWSet> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.store.Store.BlockWithRWSet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TransactionStoreInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:store.TransactionStoreInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     * @return Whether the transaction field is set.
     */
    boolean hasTransaction();
    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     * @return The transaction.
     */
    org.chainmaker.pb.common.ChainmakerTransaction.Transaction getTransaction();
    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     */
    org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder getTransactionOrBuilder();

    /**
     * <pre>
     * block height
     * </pre>
     *
     * <code>uint64 block_height = 2;</code>
     * @return The blockHeight.
     */
    long getBlockHeight();

    /**
     * <pre>
     * Deprecated, block hash
     * </pre>
     *
     * <code>bytes block_hash = 3;</code>
     * @return The blockHash.
     */
    com.google.protobuf.ByteString getBlockHash();

    /**
     * <pre>
     * transaction index in block
     * </pre>
     *
     * <code>uint32 tx_index = 4;</code>
     * @return The txIndex.
     */
    int getTxIndex();

    /**
     * <pre>
     * block header timestamp
     * </pre>
     *
     * <code>int64 block_timestamp = 5;</code>
     * @return The blockTimestamp.
     */
    long getBlockTimestamp();

    /**
     * <pre>
     * transaction offset index in file
     * </pre>
     *
     * <code>.store.StoreInfo transaction_store_info = 6;</code>
     * @return Whether the transactionStoreInfo field is set.
     */
    boolean hasTransactionStoreInfo();
    /**
     * <pre>
     * transaction offset index in file
     * </pre>
     *
     * <code>.store.StoreInfo transaction_store_info = 6;</code>
     * @return The transactionStoreInfo.
     */
    org.chainmaker.pb.store.Store.StoreInfo getTransactionStoreInfo();
    /**
     * <pre>
     * transaction offset index in file
     * </pre>
     *
     * <code>.store.StoreInfo transaction_store_info = 6;</code>
     */
    org.chainmaker.pb.store.Store.StoreInfoOrBuilder getTransactionStoreInfoOrBuilder();
  }
  /**
   * <pre>
   * transaction info include transaction and its block height hash and tx index
   * </pre>
   *
   * Protobuf type {@code store.TransactionStoreInfo}
   */
  public static final class TransactionStoreInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:store.TransactionStoreInfo)
      TransactionStoreInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TransactionStoreInfo.newBuilder() to construct.
    private TransactionStoreInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TransactionStoreInfo() {
      blockHash_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TransactionStoreInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TransactionStoreInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder subBuilder = null;
              if (transaction_ != null) {
                subBuilder = transaction_.toBuilder();
              }
              transaction_ = input.readMessage(org.chainmaker.pb.common.ChainmakerTransaction.Transaction.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(transaction_);
                transaction_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              blockHeight_ = input.readUInt64();
              break;
            }
            case 26: {

              blockHash_ = input.readBytes();
              break;
            }
            case 32: {

              txIndex_ = input.readUInt32();
              break;
            }
            case 40: {

              blockTimestamp_ = input.readInt64();
              break;
            }
            case 50: {
              org.chainmaker.pb.store.Store.StoreInfo.Builder subBuilder = null;
              if (transactionStoreInfo_ != null) {
                subBuilder = transactionStoreInfo_.toBuilder();
              }
              transactionStoreInfo_ = input.readMessage(org.chainmaker.pb.store.Store.StoreInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(transactionStoreInfo_);
                transactionStoreInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.store.Store.internal_static_store_TransactionStoreInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.store.Store.internal_static_store_TransactionStoreInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.store.Store.TransactionStoreInfo.class, org.chainmaker.pb.store.Store.TransactionStoreInfo.Builder.class);
    }

    public static final int TRANSACTION_FIELD_NUMBER = 1;
    private org.chainmaker.pb.common.ChainmakerTransaction.Transaction transaction_;
    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     * @return Whether the transaction field is set.
     */
    @java.lang.Override
    public boolean hasTransaction() {
      return transaction_ != null;
    }
    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     * @return The transaction.
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerTransaction.Transaction getTransaction() {
      return transaction_ == null ? org.chainmaker.pb.common.ChainmakerTransaction.Transaction.getDefaultInstance() : transaction_;
    }
    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder getTransactionOrBuilder() {
      return getTransaction();
    }

    public static final int BLOCK_HEIGHT_FIELD_NUMBER = 2;
    private long blockHeight_;
    /**
     * <pre>
     * block height
     * </pre>
     *
     * <code>uint64 block_height = 2;</code>
     * @return The blockHeight.
     */
    @java.lang.Override
    public long getBlockHeight() {
      return blockHeight_;
    }

    public static final int BLOCK_HASH_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString blockHash_;
    /**
     * <pre>
     * Deprecated, block hash
     * </pre>
     *
     * <code>bytes block_hash = 3;</code>
     * @return The blockHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBlockHash() {
      return blockHash_;
    }

    public static final int TX_INDEX_FIELD_NUMBER = 4;
    private int txIndex_;
    /**
     * <pre>
     * transaction index in block
     * </pre>
     *
     * <code>uint32 tx_index = 4;</code>
     * @return The txIndex.
     */
    @java.lang.Override
    public int getTxIndex() {
      return txIndex_;
    }

    public static final int BLOCK_TIMESTAMP_FIELD_NUMBER = 5;
    private long blockTimestamp_;
    /**
     * <pre>
     * block header timestamp
     * </pre>
     *
     * <code>int64 block_timestamp = 5;</code>
     * @return The blockTimestamp.
     */
    @java.lang.Override
    public long getBlockTimestamp() {
      return blockTimestamp_;
    }

    public static final int TRANSACTION_STORE_INFO_FIELD_NUMBER = 6;
    private org.chainmaker.pb.store.Store.StoreInfo transactionStoreInfo_;
    /**
     * <pre>
     * transaction offset index in file
     * </pre>
     *
     * <code>.store.StoreInfo transaction_store_info = 6;</code>
     * @return Whether the transactionStoreInfo field is set.
     */
    @java.lang.Override
    public boolean hasTransactionStoreInfo() {
      return transactionStoreInfo_ != null;
    }
    /**
     * <pre>
     * transaction offset index in file
     * </pre>
     *
     * <code>.store.StoreInfo transaction_store_info = 6;</code>
     * @return The transactionStoreInfo.
     */
    @java.lang.Override
    public org.chainmaker.pb.store.Store.StoreInfo getTransactionStoreInfo() {
      return transactionStoreInfo_ == null ? org.chainmaker.pb.store.Store.StoreInfo.getDefaultInstance() : transactionStoreInfo_;
    }
    /**
     * <pre>
     * transaction offset index in file
     * </pre>
     *
     * <code>.store.StoreInfo transaction_store_info = 6;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.store.Store.StoreInfoOrBuilder getTransactionStoreInfoOrBuilder() {
      return getTransactionStoreInfo();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (transaction_ != null) {
        output.writeMessage(1, getTransaction());
      }
      if (blockHeight_ != 0L) {
        output.writeUInt64(2, blockHeight_);
      }
      if (!blockHash_.isEmpty()) {
        output.writeBytes(3, blockHash_);
      }
      if (txIndex_ != 0) {
        output.writeUInt32(4, txIndex_);
      }
      if (blockTimestamp_ != 0L) {
        output.writeInt64(5, blockTimestamp_);
      }
      if (transactionStoreInfo_ != null) {
        output.writeMessage(6, getTransactionStoreInfo());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (transaction_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTransaction());
      }
      if (blockHeight_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, blockHeight_);
      }
      if (!blockHash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, blockHash_);
      }
      if (txIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, txIndex_);
      }
      if (blockTimestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, blockTimestamp_);
      }
      if (transactionStoreInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getTransactionStoreInfo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.store.Store.TransactionStoreInfo)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.store.Store.TransactionStoreInfo other = (org.chainmaker.pb.store.Store.TransactionStoreInfo) obj;

      if (hasTransaction() != other.hasTransaction()) return false;
      if (hasTransaction()) {
        if (!getTransaction()
            .equals(other.getTransaction())) return false;
      }
      if (getBlockHeight()
          != other.getBlockHeight()) return false;
      if (!getBlockHash()
          .equals(other.getBlockHash())) return false;
      if (getTxIndex()
          != other.getTxIndex()) return false;
      if (getBlockTimestamp()
          != other.getBlockTimestamp()) return false;
      if (hasTransactionStoreInfo() != other.hasTransactionStoreInfo()) return false;
      if (hasTransactionStoreInfo()) {
        if (!getTransactionStoreInfo()
            .equals(other.getTransactionStoreInfo())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTransaction()) {
        hash = (37 * hash) + TRANSACTION_FIELD_NUMBER;
        hash = (53 * hash) + getTransaction().hashCode();
      }
      hash = (37 * hash) + BLOCK_HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBlockHeight());
      hash = (37 * hash) + BLOCK_HASH_FIELD_NUMBER;
      hash = (53 * hash) + getBlockHash().hashCode();
      hash = (37 * hash) + TX_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getTxIndex();
      hash = (37 * hash) + BLOCK_TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBlockTimestamp());
      if (hasTransactionStoreInfo()) {
        hash = (37 * hash) + TRANSACTION_STORE_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getTransactionStoreInfo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.store.Store.TransactionStoreInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.store.Store.TransactionStoreInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.store.Store.TransactionStoreInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.store.Store.TransactionStoreInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.store.Store.TransactionStoreInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.store.Store.TransactionStoreInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.store.Store.TransactionStoreInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.store.Store.TransactionStoreInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.store.Store.TransactionStoreInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.store.Store.TransactionStoreInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.store.Store.TransactionStoreInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.store.Store.TransactionStoreInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.store.Store.TransactionStoreInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * transaction info include transaction and its block height hash and tx index
     * </pre>
     *
     * Protobuf type {@code store.TransactionStoreInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:store.TransactionStoreInfo)
        org.chainmaker.pb.store.Store.TransactionStoreInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.store.Store.internal_static_store_TransactionStoreInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.store.Store.internal_static_store_TransactionStoreInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.store.Store.TransactionStoreInfo.class, org.chainmaker.pb.store.Store.TransactionStoreInfo.Builder.class);
      }

      // Construct using org.chainmaker.pb.store.Store.TransactionStoreInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (transactionBuilder_ == null) {
          transaction_ = null;
        } else {
          transaction_ = null;
          transactionBuilder_ = null;
        }
        blockHeight_ = 0L;

        blockHash_ = com.google.protobuf.ByteString.EMPTY;

        txIndex_ = 0;

        blockTimestamp_ = 0L;

        if (transactionStoreInfoBuilder_ == null) {
          transactionStoreInfo_ = null;
        } else {
          transactionStoreInfo_ = null;
          transactionStoreInfoBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.store.Store.internal_static_store_TransactionStoreInfo_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.store.Store.TransactionStoreInfo getDefaultInstanceForType() {
        return org.chainmaker.pb.store.Store.TransactionStoreInfo.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.store.Store.TransactionStoreInfo build() {
        org.chainmaker.pb.store.Store.TransactionStoreInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.store.Store.TransactionStoreInfo buildPartial() {
        org.chainmaker.pb.store.Store.TransactionStoreInfo result = new org.chainmaker.pb.store.Store.TransactionStoreInfo(this);
        if (transactionBuilder_ == null) {
          result.transaction_ = transaction_;
        } else {
          result.transaction_ = transactionBuilder_.build();
        }
        result.blockHeight_ = blockHeight_;
        result.blockHash_ = blockHash_;
        result.txIndex_ = txIndex_;
        result.blockTimestamp_ = blockTimestamp_;
        if (transactionStoreInfoBuilder_ == null) {
          result.transactionStoreInfo_ = transactionStoreInfo_;
        } else {
          result.transactionStoreInfo_ = transactionStoreInfoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.store.Store.TransactionStoreInfo) {
          return mergeFrom((org.chainmaker.pb.store.Store.TransactionStoreInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.store.Store.TransactionStoreInfo other) {
        if (other == org.chainmaker.pb.store.Store.TransactionStoreInfo.getDefaultInstance()) return this;
        if (other.hasTransaction()) {
          mergeTransaction(other.getTransaction());
        }
        if (other.getBlockHeight() != 0L) {
          setBlockHeight(other.getBlockHeight());
        }
        if (other.getBlockHash() != com.google.protobuf.ByteString.EMPTY) {
          setBlockHash(other.getBlockHash());
        }
        if (other.getTxIndex() != 0) {
          setTxIndex(other.getTxIndex());
        }
        if (other.getBlockTimestamp() != 0L) {
          setBlockTimestamp(other.getBlockTimestamp());
        }
        if (other.hasTransactionStoreInfo()) {
          mergeTransactionStoreInfo(other.getTransactionStoreInfo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.store.Store.TransactionStoreInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.store.Store.TransactionStoreInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.chainmaker.pb.common.ChainmakerTransaction.Transaction transaction_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerTransaction.Transaction, org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder, org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder> transactionBuilder_;
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       * @return Whether the transaction field is set.
       */
      public boolean hasTransaction() {
        return transactionBuilder_ != null || transaction_ != null;
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       * @return The transaction.
       */
      public org.chainmaker.pb.common.ChainmakerTransaction.Transaction getTransaction() {
        if (transactionBuilder_ == null) {
          return transaction_ == null ? org.chainmaker.pb.common.ChainmakerTransaction.Transaction.getDefaultInstance() : transaction_;
        } else {
          return transactionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public Builder setTransaction(org.chainmaker.pb.common.ChainmakerTransaction.Transaction value) {
        if (transactionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          transaction_ = value;
          onChanged();
        } else {
          transactionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public Builder setTransaction(
          org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder builderForValue) {
        if (transactionBuilder_ == null) {
          transaction_ = builderForValue.build();
          onChanged();
        } else {
          transactionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public Builder mergeTransaction(org.chainmaker.pb.common.ChainmakerTransaction.Transaction value) {
        if (transactionBuilder_ == null) {
          if (transaction_ != null) {
            transaction_ =
              org.chainmaker.pb.common.ChainmakerTransaction.Transaction.newBuilder(transaction_).mergeFrom(value).buildPartial();
          } else {
            transaction_ = value;
          }
          onChanged();
        } else {
          transactionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public Builder clearTransaction() {
        if (transactionBuilder_ == null) {
          transaction_ = null;
          onChanged();
        } else {
          transaction_ = null;
          transactionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder getTransactionBuilder() {
        
        onChanged();
        return getTransactionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder getTransactionOrBuilder() {
        if (transactionBuilder_ != null) {
          return transactionBuilder_.getMessageOrBuilder();
        } else {
          return transaction_ == null ?
              org.chainmaker.pb.common.ChainmakerTransaction.Transaction.getDefaultInstance() : transaction_;
        }
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerTransaction.Transaction, org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder, org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder> 
          getTransactionFieldBuilder() {
        if (transactionBuilder_ == null) {
          transactionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.common.ChainmakerTransaction.Transaction, org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder, org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder>(
                  getTransaction(),
                  getParentForChildren(),
                  isClean());
          transaction_ = null;
        }
        return transactionBuilder_;
      }

      private long blockHeight_ ;
      /**
       * <pre>
       * block height
       * </pre>
       *
       * <code>uint64 block_height = 2;</code>
       * @return The blockHeight.
       */
      @java.lang.Override
      public long getBlockHeight() {
        return blockHeight_;
      }
      /**
       * <pre>
       * block height
       * </pre>
       *
       * <code>uint64 block_height = 2;</code>
       * @param value The blockHeight to set.
       * @return This builder for chaining.
       */
      public Builder setBlockHeight(long value) {
        
        blockHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * block height
       * </pre>
       *
       * <code>uint64 block_height = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockHeight() {
        
        blockHeight_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString blockHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Deprecated, block hash
       * </pre>
       *
       * <code>bytes block_hash = 3;</code>
       * @return The blockHash.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBlockHash() {
        return blockHash_;
      }
      /**
       * <pre>
       * Deprecated, block hash
       * </pre>
       *
       * <code>bytes block_hash = 3;</code>
       * @param value The blockHash to set.
       * @return This builder for chaining.
       */
      public Builder setBlockHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        blockHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Deprecated, block hash
       * </pre>
       *
       * <code>bytes block_hash = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockHash() {
        
        blockHash_ = getDefaultInstance().getBlockHash();
        onChanged();
        return this;
      }

      private int txIndex_ ;
      /**
       * <pre>
       * transaction index in block
       * </pre>
       *
       * <code>uint32 tx_index = 4;</code>
       * @return The txIndex.
       */
      @java.lang.Override
      public int getTxIndex() {
        return txIndex_;
      }
      /**
       * <pre>
       * transaction index in block
       * </pre>
       *
       * <code>uint32 tx_index = 4;</code>
       * @param value The txIndex to set.
       * @return This builder for chaining.
       */
      public Builder setTxIndex(int value) {
        
        txIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * transaction index in block
       * </pre>
       *
       * <code>uint32 tx_index = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTxIndex() {
        
        txIndex_ = 0;
        onChanged();
        return this;
      }

      private long blockTimestamp_ ;
      /**
       * <pre>
       * block header timestamp
       * </pre>
       *
       * <code>int64 block_timestamp = 5;</code>
       * @return The blockTimestamp.
       */
      @java.lang.Override
      public long getBlockTimestamp() {
        return blockTimestamp_;
      }
      /**
       * <pre>
       * block header timestamp
       * </pre>
       *
       * <code>int64 block_timestamp = 5;</code>
       * @param value The blockTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setBlockTimestamp(long value) {
        
        blockTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * block header timestamp
       * </pre>
       *
       * <code>int64 block_timestamp = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockTimestamp() {
        
        blockTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private org.chainmaker.pb.store.Store.StoreInfo transactionStoreInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.store.Store.StoreInfo, org.chainmaker.pb.store.Store.StoreInfo.Builder, org.chainmaker.pb.store.Store.StoreInfoOrBuilder> transactionStoreInfoBuilder_;
      /**
       * <pre>
       * transaction offset index in file
       * </pre>
       *
       * <code>.store.StoreInfo transaction_store_info = 6;</code>
       * @return Whether the transactionStoreInfo field is set.
       */
      public boolean hasTransactionStoreInfo() {
        return transactionStoreInfoBuilder_ != null || transactionStoreInfo_ != null;
      }
      /**
       * <pre>
       * transaction offset index in file
       * </pre>
       *
       * <code>.store.StoreInfo transaction_store_info = 6;</code>
       * @return The transactionStoreInfo.
       */
      public org.chainmaker.pb.store.Store.StoreInfo getTransactionStoreInfo() {
        if (transactionStoreInfoBuilder_ == null) {
          return transactionStoreInfo_ == null ? org.chainmaker.pb.store.Store.StoreInfo.getDefaultInstance() : transactionStoreInfo_;
        } else {
          return transactionStoreInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * transaction offset index in file
       * </pre>
       *
       * <code>.store.StoreInfo transaction_store_info = 6;</code>
       */
      public Builder setTransactionStoreInfo(org.chainmaker.pb.store.Store.StoreInfo value) {
        if (transactionStoreInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          transactionStoreInfo_ = value;
          onChanged();
        } else {
          transactionStoreInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * transaction offset index in file
       * </pre>
       *
       * <code>.store.StoreInfo transaction_store_info = 6;</code>
       */
      public Builder setTransactionStoreInfo(
          org.chainmaker.pb.store.Store.StoreInfo.Builder builderForValue) {
        if (transactionStoreInfoBuilder_ == null) {
          transactionStoreInfo_ = builderForValue.build();
          onChanged();
        } else {
          transactionStoreInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * transaction offset index in file
       * </pre>
       *
       * <code>.store.StoreInfo transaction_store_info = 6;</code>
       */
      public Builder mergeTransactionStoreInfo(org.chainmaker.pb.store.Store.StoreInfo value) {
        if (transactionStoreInfoBuilder_ == null) {
          if (transactionStoreInfo_ != null) {
            transactionStoreInfo_ =
              org.chainmaker.pb.store.Store.StoreInfo.newBuilder(transactionStoreInfo_).mergeFrom(value).buildPartial();
          } else {
            transactionStoreInfo_ = value;
          }
          onChanged();
        } else {
          transactionStoreInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * transaction offset index in file
       * </pre>
       *
       * <code>.store.StoreInfo transaction_store_info = 6;</code>
       */
      public Builder clearTransactionStoreInfo() {
        if (transactionStoreInfoBuilder_ == null) {
          transactionStoreInfo_ = null;
          onChanged();
        } else {
          transactionStoreInfo_ = null;
          transactionStoreInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * transaction offset index in file
       * </pre>
       *
       * <code>.store.StoreInfo transaction_store_info = 6;</code>
       */
      public org.chainmaker.pb.store.Store.StoreInfo.Builder getTransactionStoreInfoBuilder() {
        
        onChanged();
        return getTransactionStoreInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * transaction offset index in file
       * </pre>
       *
       * <code>.store.StoreInfo transaction_store_info = 6;</code>
       */
      public org.chainmaker.pb.store.Store.StoreInfoOrBuilder getTransactionStoreInfoOrBuilder() {
        if (transactionStoreInfoBuilder_ != null) {
          return transactionStoreInfoBuilder_.getMessageOrBuilder();
        } else {
          return transactionStoreInfo_ == null ?
              org.chainmaker.pb.store.Store.StoreInfo.getDefaultInstance() : transactionStoreInfo_;
        }
      }
      /**
       * <pre>
       * transaction offset index in file
       * </pre>
       *
       * <code>.store.StoreInfo transaction_store_info = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.store.Store.StoreInfo, org.chainmaker.pb.store.Store.StoreInfo.Builder, org.chainmaker.pb.store.Store.StoreInfoOrBuilder> 
          getTransactionStoreInfoFieldBuilder() {
        if (transactionStoreInfoBuilder_ == null) {
          transactionStoreInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.store.Store.StoreInfo, org.chainmaker.pb.store.Store.StoreInfo.Builder, org.chainmaker.pb.store.Store.StoreInfoOrBuilder>(
                  getTransactionStoreInfo(),
                  getParentForChildren(),
                  isClean());
          transactionStoreInfo_ = null;
        }
        return transactionStoreInfoBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:store.TransactionStoreInfo)
    }

    // @@protoc_insertion_point(class_scope:store.TransactionStoreInfo)
    private static final org.chainmaker.pb.store.Store.TransactionStoreInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.store.Store.TransactionStoreInfo();
    }

    public static org.chainmaker.pb.store.Store.TransactionStoreInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TransactionStoreInfo>
        PARSER = new com.google.protobuf.AbstractParser<TransactionStoreInfo>() {
      @java.lang.Override
      public TransactionStoreInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TransactionStoreInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TransactionStoreInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TransactionStoreInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.store.Store.TransactionStoreInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StoreInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:store.StoreInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *store type
     * </pre>
     *
     * <code>.store.DataStoreType store_type = 1;</code>
     * @return The enum numeric value on the wire for storeType.
     */
    int getStoreTypeValue();
    /**
     * <pre>
     *store type
     * </pre>
     *
     * <code>.store.DataStoreType store_type = 1;</code>
     * @return The storeType.
     */
    org.chainmaker.pb.store.Store.DataStoreType getStoreType();

    /**
     * <pre>
     * file name
     * </pre>
     *
     * <code>string file_name = 2;</code>
     * @return The fileName.
     */
    java.lang.String getFileName();
    /**
     * <pre>
     * file name
     * </pre>
     *
     * <code>string file_name = 2;</code>
     * @return The bytes for fileName.
     */
    com.google.protobuf.ByteString
        getFileNameBytes();

    /**
     * <pre>
     * offset in file
     * </pre>
     *
     * <code>uint64 offset = 3;</code>
     * @return The offset.
     */
    long getOffset();

    /**
     * <pre>
     * data length
     * </pre>
     *
     * <code>uint64 byte_len = 4;</code>
     * @return The byteLen.
     */
    long getByteLen();
  }
  /**
   * <pre>
   * store data information
   * </pre>
   *
   * Protobuf type {@code store.StoreInfo}
   */
  public static final class StoreInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:store.StoreInfo)
      StoreInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StoreInfo.newBuilder() to construct.
    private StoreInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StoreInfo() {
      storeType_ = 0;
      fileName_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StoreInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StoreInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              storeType_ = rawValue;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              fileName_ = s;
              break;
            }
            case 24: {

              offset_ = input.readUInt64();
              break;
            }
            case 32: {

              byteLen_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.store.Store.internal_static_store_StoreInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.store.Store.internal_static_store_StoreInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.store.Store.StoreInfo.class, org.chainmaker.pb.store.Store.StoreInfo.Builder.class);
    }

    public static final int STORE_TYPE_FIELD_NUMBER = 1;
    private int storeType_;
    /**
     * <pre>
     *store type
     * </pre>
     *
     * <code>.store.DataStoreType store_type = 1;</code>
     * @return The enum numeric value on the wire for storeType.
     */
    @java.lang.Override public int getStoreTypeValue() {
      return storeType_;
    }
    /**
     * <pre>
     *store type
     * </pre>
     *
     * <code>.store.DataStoreType store_type = 1;</code>
     * @return The storeType.
     */
    @java.lang.Override public org.chainmaker.pb.store.Store.DataStoreType getStoreType() {
      @SuppressWarnings("deprecation")
      org.chainmaker.pb.store.Store.DataStoreType result = org.chainmaker.pb.store.Store.DataStoreType.valueOf(storeType_);
      return result == null ? org.chainmaker.pb.store.Store.DataStoreType.UNRECOGNIZED : result;
    }

    public static final int FILE_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object fileName_;
    /**
     * <pre>
     * file name
     * </pre>
     *
     * <code>string file_name = 2;</code>
     * @return The fileName.
     */
    @java.lang.Override
    public java.lang.String getFileName() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * file name
     * </pre>
     *
     * <code>string file_name = 2;</code>
     * @return The bytes for fileName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OFFSET_FIELD_NUMBER = 3;
    private long offset_;
    /**
     * <pre>
     * offset in file
     * </pre>
     *
     * <code>uint64 offset = 3;</code>
     * @return The offset.
     */
    @java.lang.Override
    public long getOffset() {
      return offset_;
    }

    public static final int BYTE_LEN_FIELD_NUMBER = 4;
    private long byteLen_;
    /**
     * <pre>
     * data length
     * </pre>
     *
     * <code>uint64 byte_len = 4;</code>
     * @return The byteLen.
     */
    @java.lang.Override
    public long getByteLen() {
      return byteLen_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (storeType_ != org.chainmaker.pb.store.Store.DataStoreType.FILE_STORE.getNumber()) {
        output.writeEnum(1, storeType_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fileName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, fileName_);
      }
      if (offset_ != 0L) {
        output.writeUInt64(3, offset_);
      }
      if (byteLen_ != 0L) {
        output.writeUInt64(4, byteLen_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (storeType_ != org.chainmaker.pb.store.Store.DataStoreType.FILE_STORE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, storeType_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fileName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, fileName_);
      }
      if (offset_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, offset_);
      }
      if (byteLen_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, byteLen_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.store.Store.StoreInfo)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.store.Store.StoreInfo other = (org.chainmaker.pb.store.Store.StoreInfo) obj;

      if (storeType_ != other.storeType_) return false;
      if (!getFileName()
          .equals(other.getFileName())) return false;
      if (getOffset()
          != other.getOffset()) return false;
      if (getByteLen()
          != other.getByteLen()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STORE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + storeType_;
      hash = (37 * hash) + FILE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getFileName().hashCode();
      hash = (37 * hash) + OFFSET_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOffset());
      hash = (37 * hash) + BYTE_LEN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getByteLen());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.store.Store.StoreInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.store.Store.StoreInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.store.Store.StoreInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.store.Store.StoreInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.store.Store.StoreInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.store.Store.StoreInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.store.Store.StoreInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.store.Store.StoreInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.store.Store.StoreInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.store.Store.StoreInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.store.Store.StoreInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.store.Store.StoreInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.store.Store.StoreInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * store data information
     * </pre>
     *
     * Protobuf type {@code store.StoreInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:store.StoreInfo)
        org.chainmaker.pb.store.Store.StoreInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.store.Store.internal_static_store_StoreInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.store.Store.internal_static_store_StoreInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.store.Store.StoreInfo.class, org.chainmaker.pb.store.Store.StoreInfo.Builder.class);
      }

      // Construct using org.chainmaker.pb.store.Store.StoreInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        storeType_ = 0;

        fileName_ = "";

        offset_ = 0L;

        byteLen_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.store.Store.internal_static_store_StoreInfo_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.store.Store.StoreInfo getDefaultInstanceForType() {
        return org.chainmaker.pb.store.Store.StoreInfo.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.store.Store.StoreInfo build() {
        org.chainmaker.pb.store.Store.StoreInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.store.Store.StoreInfo buildPartial() {
        org.chainmaker.pb.store.Store.StoreInfo result = new org.chainmaker.pb.store.Store.StoreInfo(this);
        result.storeType_ = storeType_;
        result.fileName_ = fileName_;
        result.offset_ = offset_;
        result.byteLen_ = byteLen_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.store.Store.StoreInfo) {
          return mergeFrom((org.chainmaker.pb.store.Store.StoreInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.store.Store.StoreInfo other) {
        if (other == org.chainmaker.pb.store.Store.StoreInfo.getDefaultInstance()) return this;
        if (other.storeType_ != 0) {
          setStoreTypeValue(other.getStoreTypeValue());
        }
        if (!other.getFileName().isEmpty()) {
          fileName_ = other.fileName_;
          onChanged();
        }
        if (other.getOffset() != 0L) {
          setOffset(other.getOffset());
        }
        if (other.getByteLen() != 0L) {
          setByteLen(other.getByteLen());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.store.Store.StoreInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.store.Store.StoreInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int storeType_ = 0;
      /**
       * <pre>
       *store type
       * </pre>
       *
       * <code>.store.DataStoreType store_type = 1;</code>
       * @return The enum numeric value on the wire for storeType.
       */
      @java.lang.Override public int getStoreTypeValue() {
        return storeType_;
      }
      /**
       * <pre>
       *store type
       * </pre>
       *
       * <code>.store.DataStoreType store_type = 1;</code>
       * @param value The enum numeric value on the wire for storeType to set.
       * @return This builder for chaining.
       */
      public Builder setStoreTypeValue(int value) {
        
        storeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *store type
       * </pre>
       *
       * <code>.store.DataStoreType store_type = 1;</code>
       * @return The storeType.
       */
      @java.lang.Override
      public org.chainmaker.pb.store.Store.DataStoreType getStoreType() {
        @SuppressWarnings("deprecation")
        org.chainmaker.pb.store.Store.DataStoreType result = org.chainmaker.pb.store.Store.DataStoreType.valueOf(storeType_);
        return result == null ? org.chainmaker.pb.store.Store.DataStoreType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *store type
       * </pre>
       *
       * <code>.store.DataStoreType store_type = 1;</code>
       * @param value The storeType to set.
       * @return This builder for chaining.
       */
      public Builder setStoreType(org.chainmaker.pb.store.Store.DataStoreType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        storeType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *store type
       * </pre>
       *
       * <code>.store.DataStoreType store_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStoreType() {
        
        storeType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object fileName_ = "";
      /**
       * <pre>
       * file name
       * </pre>
       *
       * <code>string file_name = 2;</code>
       * @return The fileName.
       */
      public java.lang.String getFileName() {
        java.lang.Object ref = fileName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fileName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * file name
       * </pre>
       *
       * <code>string file_name = 2;</code>
       * @return The bytes for fileName.
       */
      public com.google.protobuf.ByteString
          getFileNameBytes() {
        java.lang.Object ref = fileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * file name
       * </pre>
       *
       * <code>string file_name = 2;</code>
       * @param value The fileName to set.
       * @return This builder for chaining.
       */
      public Builder setFileName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        fileName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * file name
       * </pre>
       *
       * <code>string file_name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFileName() {
        
        fileName_ = getDefaultInstance().getFileName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * file name
       * </pre>
       *
       * <code>string file_name = 2;</code>
       * @param value The bytes for fileName to set.
       * @return This builder for chaining.
       */
      public Builder setFileNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        fileName_ = value;
        onChanged();
        return this;
      }

      private long offset_ ;
      /**
       * <pre>
       * offset in file
       * </pre>
       *
       * <code>uint64 offset = 3;</code>
       * @return The offset.
       */
      @java.lang.Override
      public long getOffset() {
        return offset_;
      }
      /**
       * <pre>
       * offset in file
       * </pre>
       *
       * <code>uint64 offset = 3;</code>
       * @param value The offset to set.
       * @return This builder for chaining.
       */
      public Builder setOffset(long value) {
        
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * offset in file
       * </pre>
       *
       * <code>uint64 offset = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearOffset() {
        
        offset_ = 0L;
        onChanged();
        return this;
      }

      private long byteLen_ ;
      /**
       * <pre>
       * data length
       * </pre>
       *
       * <code>uint64 byte_len = 4;</code>
       * @return The byteLen.
       */
      @java.lang.Override
      public long getByteLen() {
        return byteLen_;
      }
      /**
       * <pre>
       * data length
       * </pre>
       *
       * <code>uint64 byte_len = 4;</code>
       * @param value The byteLen to set.
       * @return This builder for chaining.
       */
      public Builder setByteLen(long value) {
        
        byteLen_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * data length
       * </pre>
       *
       * <code>uint64 byte_len = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearByteLen() {
        
        byteLen_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:store.StoreInfo)
    }

    // @@protoc_insertion_point(class_scope:store.StoreInfo)
    private static final org.chainmaker.pb.store.Store.StoreInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.store.Store.StoreInfo();
    }

    public static org.chainmaker.pb.store.Store.StoreInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StoreInfo>
        PARSER = new com.google.protobuf.AbstractParser<StoreInfo>() {
      @java.lang.Override
      public StoreInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StoreInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StoreInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StoreInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.store.Store.StoreInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_store_SerializedBlock_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_store_SerializedBlock_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_store_BlockWithRWSet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_store_BlockWithRWSet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_store_TransactionStoreInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_store_TransactionStoreInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_store_StoreInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_store_StoreInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021store/store.proto\022\005store\032\022common/block" +
      ".proto\032\022common/rwset.proto\032\023common/resul" +
      "t.proto\032\030common/transaction.proto\"\221\001\n\017Se" +
      "rializedBlock\022#\n\006header\030\001 \001(\0132\023.common.B" +
      "lockHeader\022\030\n\003dag\030\002 \001(\0132\013.common.DAG\022\016\n\006" +
      "tx_ids\030\003 \003(\t\022/\n\017additional_data\030\004 \001(\0132\026." +
      "common.AdditionalData\"\201\001\n\016BlockWithRWSet" +
      "\022\034\n\005block\030\001 \001(\0132\r.common.Block\022!\n\010txRWSe" +
      "ts\030\002 \003(\0132\017.common.TxRWSet\022.\n\017contract_ev" +
      "ents\030\003 \003(\0132\025.common.ContractEvent\"\307\001\n\024Tr" +
      "ansactionStoreInfo\022(\n\013transaction\030\001 \001(\0132" +
      "\023.common.Transaction\022\024\n\014block_height\030\002 \001" +
      "(\004\022\022\n\nblock_hash\030\003 \001(\014\022\020\n\010tx_index\030\004 \001(\r" +
      "\022\027\n\017block_timestamp\030\005 \001(\003\0220\n\026transaction" +
      "_store_info\030\006 \001(\0132\020.store.StoreInfo\"j\n\tS" +
      "toreInfo\022(\n\nstore_type\030\001 \001(\0162\024.store.Dat" +
      "aStoreType\022\021\n\tfile_name\030\002 \001(\t\022\016\n\006offset\030" +
      "\003 \001(\004\022\020\n\010byte_len\030\004 \001(\004*\204\001\n\006DbType\022\016\n\nIN" +
      "VALID_DB\020\000\022\014\n\010BLOCK_DB\020\001\022\022\n\016BLOCK_INDEX_" +
      "DB\020\002\022\t\n\005TX_DB\020\003\022\017\n\013TX_INDEX_DB\020\004\022\013\n\007SOFT" +
      "_DB\020\005\022\014\n\010STATE_DB\020\006\022\021\n\rREAD_WRITE_DB\020\007*7" +
      "\n\rDataStoreType\022\016\n\nFILE_STORE\020\000\022\r\n\tSQL_S" +
      "TORE\020\001\022\007\n\003COS\020\002BC\n\027org.chainmaker.pb.sto" +
      "reZ(chainmaker.org/chainmaker/pb-go/v2/s" +
      "toreb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.chainmaker.pb.common.ChainmakerBlock.getDescriptor(),
          org.chainmaker.pb.common.Rwset.getDescriptor(),
          org.chainmaker.pb.common.ResultOuterClass.getDescriptor(),
          org.chainmaker.pb.common.ChainmakerTransaction.getDescriptor(),
        });
    internal_static_store_SerializedBlock_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_store_SerializedBlock_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_store_SerializedBlock_descriptor,
        new java.lang.String[] { "Header", "Dag", "TxIds", "AdditionalData", });
    internal_static_store_BlockWithRWSet_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_store_BlockWithRWSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_store_BlockWithRWSet_descriptor,
        new java.lang.String[] { "Block", "TxRWSets", "ContractEvents", });
    internal_static_store_TransactionStoreInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_store_TransactionStoreInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_store_TransactionStoreInfo_descriptor,
        new java.lang.String[] { "Transaction", "BlockHeight", "BlockHash", "TxIndex", "BlockTimestamp", "TransactionStoreInfo", });
    internal_static_store_StoreInfo_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_store_StoreInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_store_StoreInfo_descriptor,
        new java.lang.String[] { "StoreType", "FileName", "Offset", "ByteLen", });
    org.chainmaker.pb.common.ChainmakerBlock.getDescriptor();
    org.chainmaker.pb.common.Rwset.getDescriptor();
    org.chainmaker.pb.common.ResultOuterClass.getDescriptor();
    org.chainmaker.pb.common.ChainmakerTransaction.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
