// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/transaction.proto

package org.chainmaker.pb.common;

public final class ChainmakerTransaction {
  private ChainmakerTransaction() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TransactionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:common.Transaction)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * payload
     * </pre>
     *
     * <code>.common.Payload payload = 1;</code>
     * @return Whether the payload field is set.
     */
    boolean hasPayload();
    /**
     * <pre>
     * payload
     * </pre>
     *
     * <code>.common.Payload payload = 1;</code>
     * @return The payload.
     */
    org.chainmaker.pb.common.Request.Payload getPayload();
    /**
     * <pre>
     * payload
     * </pre>
     *
     * <code>.common.Payload payload = 1;</code>
     */
    org.chainmaker.pb.common.Request.PayloadOrBuilder getPayloadOrBuilder();

    /**
     * <pre>
     * sender account and signature
     * </pre>
     *
     * <code>.common.EndorsementEntry sender = 2;</code>
     * @return Whether the sender field is set.
     */
    boolean hasSender();
    /**
     * <pre>
     * sender account and signature
     * </pre>
     *
     * <code>.common.EndorsementEntry sender = 2;</code>
     * @return The sender.
     */
    org.chainmaker.pb.common.Request.EndorsementEntry getSender();
    /**
     * <pre>
     * sender account and signature
     * </pre>
     *
     * <code>.common.EndorsementEntry sender = 2;</code>
     */
    org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder getSenderOrBuilder();

    /**
     * <pre>
     * endorser accounts and signatures
     * </pre>
     *
     * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
     */
    java.util.List<org.chainmaker.pb.common.Request.EndorsementEntry> 
        getEndorsersList();
    /**
     * <pre>
     * endorser accounts and signatures
     * </pre>
     *
     * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
     */
    org.chainmaker.pb.common.Request.EndorsementEntry getEndorsers(int index);
    /**
     * <pre>
     * endorser accounts and signatures
     * </pre>
     *
     * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
     */
    int getEndorsersCount();
    /**
     * <pre>
     * endorser accounts and signatures
     * </pre>
     *
     * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
     */
    java.util.List<? extends org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder> 
        getEndorsersOrBuilderList();
    /**
     * <pre>
     * endorser accounts and signatures
     * </pre>
     *
     * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
     */
    org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder getEndorsersOrBuilder(
        int index);

    /**
     * <pre>
     * result of the transaction
     * </pre>
     *
     * <code>.common.Result result = 4;</code>
     * @return Whether the result field is set.
     */
    boolean hasResult();
    /**
     * <pre>
     * result of the transaction
     * </pre>
     *
     * <code>.common.Result result = 4;</code>
     * @return The result.
     */
    org.chainmaker.pb.common.ResultOuterClass.Result getResult();
    /**
     * <pre>
     * result of the transaction
     * </pre>
     *
     * <code>.common.Result result = 4;</code>
     */
    org.chainmaker.pb.common.ResultOuterClass.ResultOrBuilder getResultOrBuilder();
  }
  /**
   * <pre>
   * a transaction includes request and its result
   * </pre>
   *
   * Protobuf type {@code common.Transaction}
   */
  public static final class Transaction extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:common.Transaction)
      TransactionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Transaction.newBuilder() to construct.
    private Transaction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Transaction() {
      endorsers_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Transaction();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Transaction(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.chainmaker.pb.common.Request.Payload.Builder subBuilder = null;
              if (payload_ != null) {
                subBuilder = payload_.toBuilder();
              }
              payload_ = input.readMessage(org.chainmaker.pb.common.Request.Payload.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(payload_);
                payload_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.chainmaker.pb.common.Request.EndorsementEntry.Builder subBuilder = null;
              if (sender_ != null) {
                subBuilder = sender_.toBuilder();
              }
              sender_ = input.readMessage(org.chainmaker.pb.common.Request.EndorsementEntry.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sender_);
                sender_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                endorsers_ = new java.util.ArrayList<org.chainmaker.pb.common.Request.EndorsementEntry>();
                mutable_bitField0_ |= 0x00000001;
              }
              endorsers_.add(
                  input.readMessage(org.chainmaker.pb.common.Request.EndorsementEntry.parser(), extensionRegistry));
              break;
            }
            case 34: {
              org.chainmaker.pb.common.ResultOuterClass.Result.Builder subBuilder = null;
              if (result_ != null) {
                subBuilder = result_.toBuilder();
              }
              result_ = input.readMessage(org.chainmaker.pb.common.ResultOuterClass.Result.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(result_);
                result_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          endorsers_ = java.util.Collections.unmodifiableList(endorsers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.common.ChainmakerTransaction.internal_static_common_Transaction_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.common.ChainmakerTransaction.internal_static_common_Transaction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.common.ChainmakerTransaction.Transaction.class, org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder.class);
    }

    public static final int PAYLOAD_FIELD_NUMBER = 1;
    private org.chainmaker.pb.common.Request.Payload payload_;
    /**
     * <pre>
     * payload
     * </pre>
     *
     * <code>.common.Payload payload = 1;</code>
     * @return Whether the payload field is set.
     */
    @java.lang.Override
    public boolean hasPayload() {
      return payload_ != null;
    }
    /**
     * <pre>
     * payload
     * </pre>
     *
     * <code>.common.Payload payload = 1;</code>
     * @return The payload.
     */
    @java.lang.Override
    public org.chainmaker.pb.common.Request.Payload getPayload() {
      return payload_ == null ? org.chainmaker.pb.common.Request.Payload.getDefaultInstance() : payload_;
    }
    /**
     * <pre>
     * payload
     * </pre>
     *
     * <code>.common.Payload payload = 1;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.Request.PayloadOrBuilder getPayloadOrBuilder() {
      return getPayload();
    }

    public static final int SENDER_FIELD_NUMBER = 2;
    private org.chainmaker.pb.common.Request.EndorsementEntry sender_;
    /**
     * <pre>
     * sender account and signature
     * </pre>
     *
     * <code>.common.EndorsementEntry sender = 2;</code>
     * @return Whether the sender field is set.
     */
    @java.lang.Override
    public boolean hasSender() {
      return sender_ != null;
    }
    /**
     * <pre>
     * sender account and signature
     * </pre>
     *
     * <code>.common.EndorsementEntry sender = 2;</code>
     * @return The sender.
     */
    @java.lang.Override
    public org.chainmaker.pb.common.Request.EndorsementEntry getSender() {
      return sender_ == null ? org.chainmaker.pb.common.Request.EndorsementEntry.getDefaultInstance() : sender_;
    }
    /**
     * <pre>
     * sender account and signature
     * </pre>
     *
     * <code>.common.EndorsementEntry sender = 2;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder getSenderOrBuilder() {
      return getSender();
    }

    public static final int ENDORSERS_FIELD_NUMBER = 3;
    private java.util.List<org.chainmaker.pb.common.Request.EndorsementEntry> endorsers_;
    /**
     * <pre>
     * endorser accounts and signatures
     * </pre>
     *
     * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
     */
    @java.lang.Override
    public java.util.List<org.chainmaker.pb.common.Request.EndorsementEntry> getEndorsersList() {
      return endorsers_;
    }
    /**
     * <pre>
     * endorser accounts and signatures
     * </pre>
     *
     * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder> 
        getEndorsersOrBuilderList() {
      return endorsers_;
    }
    /**
     * <pre>
     * endorser accounts and signatures
     * </pre>
     *
     * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
     */
    @java.lang.Override
    public int getEndorsersCount() {
      return endorsers_.size();
    }
    /**
     * <pre>
     * endorser accounts and signatures
     * </pre>
     *
     * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.Request.EndorsementEntry getEndorsers(int index) {
      return endorsers_.get(index);
    }
    /**
     * <pre>
     * endorser accounts and signatures
     * </pre>
     *
     * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder getEndorsersOrBuilder(
        int index) {
      return endorsers_.get(index);
    }

    public static final int RESULT_FIELD_NUMBER = 4;
    private org.chainmaker.pb.common.ResultOuterClass.Result result_;
    /**
     * <pre>
     * result of the transaction
     * </pre>
     *
     * <code>.common.Result result = 4;</code>
     * @return Whether the result field is set.
     */
    @java.lang.Override
    public boolean hasResult() {
      return result_ != null;
    }
    /**
     * <pre>
     * result of the transaction
     * </pre>
     *
     * <code>.common.Result result = 4;</code>
     * @return The result.
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ResultOuterClass.Result getResult() {
      return result_ == null ? org.chainmaker.pb.common.ResultOuterClass.Result.getDefaultInstance() : result_;
    }
    /**
     * <pre>
     * result of the transaction
     * </pre>
     *
     * <code>.common.Result result = 4;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ResultOuterClass.ResultOrBuilder getResultOrBuilder() {
      return getResult();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (payload_ != null) {
        output.writeMessage(1, getPayload());
      }
      if (sender_ != null) {
        output.writeMessage(2, getSender());
      }
      for (int i = 0; i < endorsers_.size(); i++) {
        output.writeMessage(3, endorsers_.get(i));
      }
      if (result_ != null) {
        output.writeMessage(4, getResult());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (payload_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPayload());
      }
      if (sender_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSender());
      }
      for (int i = 0; i < endorsers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, endorsers_.get(i));
      }
      if (result_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getResult());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.common.ChainmakerTransaction.Transaction)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.common.ChainmakerTransaction.Transaction other = (org.chainmaker.pb.common.ChainmakerTransaction.Transaction) obj;

      if (hasPayload() != other.hasPayload()) return false;
      if (hasPayload()) {
        if (!getPayload()
            .equals(other.getPayload())) return false;
      }
      if (hasSender() != other.hasSender()) return false;
      if (hasSender()) {
        if (!getSender()
            .equals(other.getSender())) return false;
      }
      if (!getEndorsersList()
          .equals(other.getEndorsersList())) return false;
      if (hasResult() != other.hasResult()) return false;
      if (hasResult()) {
        if (!getResult()
            .equals(other.getResult())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPayload()) {
        hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
        hash = (53 * hash) + getPayload().hashCode();
      }
      if (hasSender()) {
        hash = (37 * hash) + SENDER_FIELD_NUMBER;
        hash = (53 * hash) + getSender().hashCode();
      }
      if (getEndorsersCount() > 0) {
        hash = (37 * hash) + ENDORSERS_FIELD_NUMBER;
        hash = (53 * hash) + getEndorsersList().hashCode();
      }
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + getResult().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.common.ChainmakerTransaction.Transaction parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.Transaction parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.Transaction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.Transaction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.Transaction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.Transaction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.Transaction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.Transaction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.Transaction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.Transaction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.Transaction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.Transaction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.common.ChainmakerTransaction.Transaction prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * a transaction includes request and its result
     * </pre>
     *
     * Protobuf type {@code common.Transaction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:common.Transaction)
        org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.common.ChainmakerTransaction.internal_static_common_Transaction_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.common.ChainmakerTransaction.internal_static_common_Transaction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.common.ChainmakerTransaction.Transaction.class, org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder.class);
      }

      // Construct using org.chainmaker.pb.common.ChainmakerTransaction.Transaction.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEndorsersFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (payloadBuilder_ == null) {
          payload_ = null;
        } else {
          payload_ = null;
          payloadBuilder_ = null;
        }
        if (senderBuilder_ == null) {
          sender_ = null;
        } else {
          sender_ = null;
          senderBuilder_ = null;
        }
        if (endorsersBuilder_ == null) {
          endorsers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          endorsersBuilder_.clear();
        }
        if (resultBuilder_ == null) {
          result_ = null;
        } else {
          result_ = null;
          resultBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.common.ChainmakerTransaction.internal_static_common_Transaction_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerTransaction.Transaction getDefaultInstanceForType() {
        return org.chainmaker.pb.common.ChainmakerTransaction.Transaction.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerTransaction.Transaction build() {
        org.chainmaker.pb.common.ChainmakerTransaction.Transaction result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerTransaction.Transaction buildPartial() {
        org.chainmaker.pb.common.ChainmakerTransaction.Transaction result = new org.chainmaker.pb.common.ChainmakerTransaction.Transaction(this);
        int from_bitField0_ = bitField0_;
        if (payloadBuilder_ == null) {
          result.payload_ = payload_;
        } else {
          result.payload_ = payloadBuilder_.build();
        }
        if (senderBuilder_ == null) {
          result.sender_ = sender_;
        } else {
          result.sender_ = senderBuilder_.build();
        }
        if (endorsersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            endorsers_ = java.util.Collections.unmodifiableList(endorsers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.endorsers_ = endorsers_;
        } else {
          result.endorsers_ = endorsersBuilder_.build();
        }
        if (resultBuilder_ == null) {
          result.result_ = result_;
        } else {
          result.result_ = resultBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.common.ChainmakerTransaction.Transaction) {
          return mergeFrom((org.chainmaker.pb.common.ChainmakerTransaction.Transaction)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.common.ChainmakerTransaction.Transaction other) {
        if (other == org.chainmaker.pb.common.ChainmakerTransaction.Transaction.getDefaultInstance()) return this;
        if (other.hasPayload()) {
          mergePayload(other.getPayload());
        }
        if (other.hasSender()) {
          mergeSender(other.getSender());
        }
        if (endorsersBuilder_ == null) {
          if (!other.endorsers_.isEmpty()) {
            if (endorsers_.isEmpty()) {
              endorsers_ = other.endorsers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureEndorsersIsMutable();
              endorsers_.addAll(other.endorsers_);
            }
            onChanged();
          }
        } else {
          if (!other.endorsers_.isEmpty()) {
            if (endorsersBuilder_.isEmpty()) {
              endorsersBuilder_.dispose();
              endorsersBuilder_ = null;
              endorsers_ = other.endorsers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              endorsersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEndorsersFieldBuilder() : null;
            } else {
              endorsersBuilder_.addAllMessages(other.endorsers_);
            }
          }
        }
        if (other.hasResult()) {
          mergeResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.common.ChainmakerTransaction.Transaction parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.common.ChainmakerTransaction.Transaction) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.chainmaker.pb.common.Request.Payload payload_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.Request.Payload, org.chainmaker.pb.common.Request.Payload.Builder, org.chainmaker.pb.common.Request.PayloadOrBuilder> payloadBuilder_;
      /**
       * <pre>
       * payload
       * </pre>
       *
       * <code>.common.Payload payload = 1;</code>
       * @return Whether the payload field is set.
       */
      public boolean hasPayload() {
        return payloadBuilder_ != null || payload_ != null;
      }
      /**
       * <pre>
       * payload
       * </pre>
       *
       * <code>.common.Payload payload = 1;</code>
       * @return The payload.
       */
      public org.chainmaker.pb.common.Request.Payload getPayload() {
        if (payloadBuilder_ == null) {
          return payload_ == null ? org.chainmaker.pb.common.Request.Payload.getDefaultInstance() : payload_;
        } else {
          return payloadBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * payload
       * </pre>
       *
       * <code>.common.Payload payload = 1;</code>
       */
      public Builder setPayload(org.chainmaker.pb.common.Request.Payload value) {
        if (payloadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          payloadBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * payload
       * </pre>
       *
       * <code>.common.Payload payload = 1;</code>
       */
      public Builder setPayload(
          org.chainmaker.pb.common.Request.Payload.Builder builderForValue) {
        if (payloadBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          payloadBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * payload
       * </pre>
       *
       * <code>.common.Payload payload = 1;</code>
       */
      public Builder mergePayload(org.chainmaker.pb.common.Request.Payload value) {
        if (payloadBuilder_ == null) {
          if (payload_ != null) {
            payload_ =
              org.chainmaker.pb.common.Request.Payload.newBuilder(payload_).mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          payloadBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * payload
       * </pre>
       *
       * <code>.common.Payload payload = 1;</code>
       */
      public Builder clearPayload() {
        if (payloadBuilder_ == null) {
          payload_ = null;
          onChanged();
        } else {
          payload_ = null;
          payloadBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * payload
       * </pre>
       *
       * <code>.common.Payload payload = 1;</code>
       */
      public org.chainmaker.pb.common.Request.Payload.Builder getPayloadBuilder() {
        
        onChanged();
        return getPayloadFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * payload
       * </pre>
       *
       * <code>.common.Payload payload = 1;</code>
       */
      public org.chainmaker.pb.common.Request.PayloadOrBuilder getPayloadOrBuilder() {
        if (payloadBuilder_ != null) {
          return payloadBuilder_.getMessageOrBuilder();
        } else {
          return payload_ == null ?
              org.chainmaker.pb.common.Request.Payload.getDefaultInstance() : payload_;
        }
      }
      /**
       * <pre>
       * payload
       * </pre>
       *
       * <code>.common.Payload payload = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.Request.Payload, org.chainmaker.pb.common.Request.Payload.Builder, org.chainmaker.pb.common.Request.PayloadOrBuilder> 
          getPayloadFieldBuilder() {
        if (payloadBuilder_ == null) {
          payloadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.common.Request.Payload, org.chainmaker.pb.common.Request.Payload.Builder, org.chainmaker.pb.common.Request.PayloadOrBuilder>(
                  getPayload(),
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        return payloadBuilder_;
      }

      private org.chainmaker.pb.common.Request.EndorsementEntry sender_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.Request.EndorsementEntry, org.chainmaker.pb.common.Request.EndorsementEntry.Builder, org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder> senderBuilder_;
      /**
       * <pre>
       * sender account and signature
       * </pre>
       *
       * <code>.common.EndorsementEntry sender = 2;</code>
       * @return Whether the sender field is set.
       */
      public boolean hasSender() {
        return senderBuilder_ != null || sender_ != null;
      }
      /**
       * <pre>
       * sender account and signature
       * </pre>
       *
       * <code>.common.EndorsementEntry sender = 2;</code>
       * @return The sender.
       */
      public org.chainmaker.pb.common.Request.EndorsementEntry getSender() {
        if (senderBuilder_ == null) {
          return sender_ == null ? org.chainmaker.pb.common.Request.EndorsementEntry.getDefaultInstance() : sender_;
        } else {
          return senderBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * sender account and signature
       * </pre>
       *
       * <code>.common.EndorsementEntry sender = 2;</code>
       */
      public Builder setSender(org.chainmaker.pb.common.Request.EndorsementEntry value) {
        if (senderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sender_ = value;
          onChanged();
        } else {
          senderBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * sender account and signature
       * </pre>
       *
       * <code>.common.EndorsementEntry sender = 2;</code>
       */
      public Builder setSender(
          org.chainmaker.pb.common.Request.EndorsementEntry.Builder builderForValue) {
        if (senderBuilder_ == null) {
          sender_ = builderForValue.build();
          onChanged();
        } else {
          senderBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * sender account and signature
       * </pre>
       *
       * <code>.common.EndorsementEntry sender = 2;</code>
       */
      public Builder mergeSender(org.chainmaker.pb.common.Request.EndorsementEntry value) {
        if (senderBuilder_ == null) {
          if (sender_ != null) {
            sender_ =
              org.chainmaker.pb.common.Request.EndorsementEntry.newBuilder(sender_).mergeFrom(value).buildPartial();
          } else {
            sender_ = value;
          }
          onChanged();
        } else {
          senderBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * sender account and signature
       * </pre>
       *
       * <code>.common.EndorsementEntry sender = 2;</code>
       */
      public Builder clearSender() {
        if (senderBuilder_ == null) {
          sender_ = null;
          onChanged();
        } else {
          sender_ = null;
          senderBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * sender account and signature
       * </pre>
       *
       * <code>.common.EndorsementEntry sender = 2;</code>
       */
      public org.chainmaker.pb.common.Request.EndorsementEntry.Builder getSenderBuilder() {
        
        onChanged();
        return getSenderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * sender account and signature
       * </pre>
       *
       * <code>.common.EndorsementEntry sender = 2;</code>
       */
      public org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder getSenderOrBuilder() {
        if (senderBuilder_ != null) {
          return senderBuilder_.getMessageOrBuilder();
        } else {
          return sender_ == null ?
              org.chainmaker.pb.common.Request.EndorsementEntry.getDefaultInstance() : sender_;
        }
      }
      /**
       * <pre>
       * sender account and signature
       * </pre>
       *
       * <code>.common.EndorsementEntry sender = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.Request.EndorsementEntry, org.chainmaker.pb.common.Request.EndorsementEntry.Builder, org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder> 
          getSenderFieldBuilder() {
        if (senderBuilder_ == null) {
          senderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.common.Request.EndorsementEntry, org.chainmaker.pb.common.Request.EndorsementEntry.Builder, org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder>(
                  getSender(),
                  getParentForChildren(),
                  isClean());
          sender_ = null;
        }
        return senderBuilder_;
      }

      private java.util.List<org.chainmaker.pb.common.Request.EndorsementEntry> endorsers_ =
        java.util.Collections.emptyList();
      private void ensureEndorsersIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          endorsers_ = new java.util.ArrayList<org.chainmaker.pb.common.Request.EndorsementEntry>(endorsers_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.chainmaker.pb.common.Request.EndorsementEntry, org.chainmaker.pb.common.Request.EndorsementEntry.Builder, org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder> endorsersBuilder_;

      /**
       * <pre>
       * endorser accounts and signatures
       * </pre>
       *
       * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
       */
      public java.util.List<org.chainmaker.pb.common.Request.EndorsementEntry> getEndorsersList() {
        if (endorsersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(endorsers_);
        } else {
          return endorsersBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * endorser accounts and signatures
       * </pre>
       *
       * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
       */
      public int getEndorsersCount() {
        if (endorsersBuilder_ == null) {
          return endorsers_.size();
        } else {
          return endorsersBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * endorser accounts and signatures
       * </pre>
       *
       * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
       */
      public org.chainmaker.pb.common.Request.EndorsementEntry getEndorsers(int index) {
        if (endorsersBuilder_ == null) {
          return endorsers_.get(index);
        } else {
          return endorsersBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * endorser accounts and signatures
       * </pre>
       *
       * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
       */
      public Builder setEndorsers(
          int index, org.chainmaker.pb.common.Request.EndorsementEntry value) {
        if (endorsersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEndorsersIsMutable();
          endorsers_.set(index, value);
          onChanged();
        } else {
          endorsersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * endorser accounts and signatures
       * </pre>
       *
       * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
       */
      public Builder setEndorsers(
          int index, org.chainmaker.pb.common.Request.EndorsementEntry.Builder builderForValue) {
        if (endorsersBuilder_ == null) {
          ensureEndorsersIsMutable();
          endorsers_.set(index, builderForValue.build());
          onChanged();
        } else {
          endorsersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * endorser accounts and signatures
       * </pre>
       *
       * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
       */
      public Builder addEndorsers(org.chainmaker.pb.common.Request.EndorsementEntry value) {
        if (endorsersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEndorsersIsMutable();
          endorsers_.add(value);
          onChanged();
        } else {
          endorsersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * endorser accounts and signatures
       * </pre>
       *
       * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
       */
      public Builder addEndorsers(
          int index, org.chainmaker.pb.common.Request.EndorsementEntry value) {
        if (endorsersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEndorsersIsMutable();
          endorsers_.add(index, value);
          onChanged();
        } else {
          endorsersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * endorser accounts and signatures
       * </pre>
       *
       * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
       */
      public Builder addEndorsers(
          org.chainmaker.pb.common.Request.EndorsementEntry.Builder builderForValue) {
        if (endorsersBuilder_ == null) {
          ensureEndorsersIsMutable();
          endorsers_.add(builderForValue.build());
          onChanged();
        } else {
          endorsersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * endorser accounts and signatures
       * </pre>
       *
       * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
       */
      public Builder addEndorsers(
          int index, org.chainmaker.pb.common.Request.EndorsementEntry.Builder builderForValue) {
        if (endorsersBuilder_ == null) {
          ensureEndorsersIsMutable();
          endorsers_.add(index, builderForValue.build());
          onChanged();
        } else {
          endorsersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * endorser accounts and signatures
       * </pre>
       *
       * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
       */
      public Builder addAllEndorsers(
          java.lang.Iterable<? extends org.chainmaker.pb.common.Request.EndorsementEntry> values) {
        if (endorsersBuilder_ == null) {
          ensureEndorsersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, endorsers_);
          onChanged();
        } else {
          endorsersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * endorser accounts and signatures
       * </pre>
       *
       * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
       */
      public Builder clearEndorsers() {
        if (endorsersBuilder_ == null) {
          endorsers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          endorsersBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * endorser accounts and signatures
       * </pre>
       *
       * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
       */
      public Builder removeEndorsers(int index) {
        if (endorsersBuilder_ == null) {
          ensureEndorsersIsMutable();
          endorsers_.remove(index);
          onChanged();
        } else {
          endorsersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * endorser accounts and signatures
       * </pre>
       *
       * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
       */
      public org.chainmaker.pb.common.Request.EndorsementEntry.Builder getEndorsersBuilder(
          int index) {
        return getEndorsersFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * endorser accounts and signatures
       * </pre>
       *
       * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
       */
      public org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder getEndorsersOrBuilder(
          int index) {
        if (endorsersBuilder_ == null) {
          return endorsers_.get(index);  } else {
          return endorsersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * endorser accounts and signatures
       * </pre>
       *
       * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
       */
      public java.util.List<? extends org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder> 
           getEndorsersOrBuilderList() {
        if (endorsersBuilder_ != null) {
          return endorsersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(endorsers_);
        }
      }
      /**
       * <pre>
       * endorser accounts and signatures
       * </pre>
       *
       * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
       */
      public org.chainmaker.pb.common.Request.EndorsementEntry.Builder addEndorsersBuilder() {
        return getEndorsersFieldBuilder().addBuilder(
            org.chainmaker.pb.common.Request.EndorsementEntry.getDefaultInstance());
      }
      /**
       * <pre>
       * endorser accounts and signatures
       * </pre>
       *
       * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
       */
      public org.chainmaker.pb.common.Request.EndorsementEntry.Builder addEndorsersBuilder(
          int index) {
        return getEndorsersFieldBuilder().addBuilder(
            index, org.chainmaker.pb.common.Request.EndorsementEntry.getDefaultInstance());
      }
      /**
       * <pre>
       * endorser accounts and signatures
       * </pre>
       *
       * <code>repeated .common.EndorsementEntry endorsers = 3;</code>
       */
      public java.util.List<org.chainmaker.pb.common.Request.EndorsementEntry.Builder> 
           getEndorsersBuilderList() {
        return getEndorsersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.chainmaker.pb.common.Request.EndorsementEntry, org.chainmaker.pb.common.Request.EndorsementEntry.Builder, org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder> 
          getEndorsersFieldBuilder() {
        if (endorsersBuilder_ == null) {
          endorsersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.chainmaker.pb.common.Request.EndorsementEntry, org.chainmaker.pb.common.Request.EndorsementEntry.Builder, org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder>(
                  endorsers_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          endorsers_ = null;
        }
        return endorsersBuilder_;
      }

      private org.chainmaker.pb.common.ResultOuterClass.Result result_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ResultOuterClass.Result, org.chainmaker.pb.common.ResultOuterClass.Result.Builder, org.chainmaker.pb.common.ResultOuterClass.ResultOrBuilder> resultBuilder_;
      /**
       * <pre>
       * result of the transaction
       * </pre>
       *
       * <code>.common.Result result = 4;</code>
       * @return Whether the result field is set.
       */
      public boolean hasResult() {
        return resultBuilder_ != null || result_ != null;
      }
      /**
       * <pre>
       * result of the transaction
       * </pre>
       *
       * <code>.common.Result result = 4;</code>
       * @return The result.
       */
      public org.chainmaker.pb.common.ResultOuterClass.Result getResult() {
        if (resultBuilder_ == null) {
          return result_ == null ? org.chainmaker.pb.common.ResultOuterClass.Result.getDefaultInstance() : result_;
        } else {
          return resultBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * result of the transaction
       * </pre>
       *
       * <code>.common.Result result = 4;</code>
       */
      public Builder setResult(org.chainmaker.pb.common.ResultOuterClass.Result value) {
        if (resultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          result_ = value;
          onChanged();
        } else {
          resultBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * result of the transaction
       * </pre>
       *
       * <code>.common.Result result = 4;</code>
       */
      public Builder setResult(
          org.chainmaker.pb.common.ResultOuterClass.Result.Builder builderForValue) {
        if (resultBuilder_ == null) {
          result_ = builderForValue.build();
          onChanged();
        } else {
          resultBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * result of the transaction
       * </pre>
       *
       * <code>.common.Result result = 4;</code>
       */
      public Builder mergeResult(org.chainmaker.pb.common.ResultOuterClass.Result value) {
        if (resultBuilder_ == null) {
          if (result_ != null) {
            result_ =
              org.chainmaker.pb.common.ResultOuterClass.Result.newBuilder(result_).mergeFrom(value).buildPartial();
          } else {
            result_ = value;
          }
          onChanged();
        } else {
          resultBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * result of the transaction
       * </pre>
       *
       * <code>.common.Result result = 4;</code>
       */
      public Builder clearResult() {
        if (resultBuilder_ == null) {
          result_ = null;
          onChanged();
        } else {
          result_ = null;
          resultBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * result of the transaction
       * </pre>
       *
       * <code>.common.Result result = 4;</code>
       */
      public org.chainmaker.pb.common.ResultOuterClass.Result.Builder getResultBuilder() {
        
        onChanged();
        return getResultFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * result of the transaction
       * </pre>
       *
       * <code>.common.Result result = 4;</code>
       */
      public org.chainmaker.pb.common.ResultOuterClass.ResultOrBuilder getResultOrBuilder() {
        if (resultBuilder_ != null) {
          return resultBuilder_.getMessageOrBuilder();
        } else {
          return result_ == null ?
              org.chainmaker.pb.common.ResultOuterClass.Result.getDefaultInstance() : result_;
        }
      }
      /**
       * <pre>
       * result of the transaction
       * </pre>
       *
       * <code>.common.Result result = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ResultOuterClass.Result, org.chainmaker.pb.common.ResultOuterClass.Result.Builder, org.chainmaker.pb.common.ResultOuterClass.ResultOrBuilder> 
          getResultFieldBuilder() {
        if (resultBuilder_ == null) {
          resultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.common.ResultOuterClass.Result, org.chainmaker.pb.common.ResultOuterClass.Result.Builder, org.chainmaker.pb.common.ResultOuterClass.ResultOrBuilder>(
                  getResult(),
                  getParentForChildren(),
                  isClean());
          result_ = null;
        }
        return resultBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:common.Transaction)
    }

    // @@protoc_insertion_point(class_scope:common.Transaction)
    private static final org.chainmaker.pb.common.ChainmakerTransaction.Transaction DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.common.ChainmakerTransaction.Transaction();
    }

    public static org.chainmaker.pb.common.ChainmakerTransaction.Transaction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Transaction>
        PARSER = new com.google.protobuf.AbstractParser<Transaction>() {
      @java.lang.Override
      public Transaction parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Transaction(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Transaction> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Transaction> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerTransaction.Transaction getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TransactionInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:common.TransactionInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     * @return Whether the transaction field is set.
     */
    boolean hasTransaction();
    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     * @return The transaction.
     */
    org.chainmaker.pb.common.ChainmakerTransaction.Transaction getTransaction();
    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     */
    org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder getTransactionOrBuilder();

    /**
     * <pre>
     * block height
     * </pre>
     *
     * <code>uint64 block_height = 2;</code>
     * @return The blockHeight.
     */
    long getBlockHeight();

    /**
     * <pre>
     * Deprecated, block hash
     * </pre>
     *
     * <code>bytes block_hash = 3;</code>
     * @return The blockHash.
     */
    com.google.protobuf.ByteString getBlockHash();

    /**
     * <pre>
     * transaction index in block
     * </pre>
     *
     * <code>uint32 tx_index = 4;</code>
     * @return The txIndex.
     */
    int getTxIndex();

    /**
     * <pre>
     * block header timestamp
     * </pre>
     *
     * <code>int64 block_timestamp = 5;</code>
     * @return The blockTimestamp.
     */
    long getBlockTimestamp();
  }
  /**
   * <pre>
   * transaction info include transaction and its block height hash and tx index
   * </pre>
   *
   * Protobuf type {@code common.TransactionInfo}
   */
  public static final class TransactionInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:common.TransactionInfo)
      TransactionInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TransactionInfo.newBuilder() to construct.
    private TransactionInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TransactionInfo() {
      blockHash_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TransactionInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TransactionInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder subBuilder = null;
              if (transaction_ != null) {
                subBuilder = transaction_.toBuilder();
              }
              transaction_ = input.readMessage(org.chainmaker.pb.common.ChainmakerTransaction.Transaction.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(transaction_);
                transaction_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              blockHeight_ = input.readUInt64();
              break;
            }
            case 26: {

              blockHash_ = input.readBytes();
              break;
            }
            case 32: {

              txIndex_ = input.readUInt32();
              break;
            }
            case 40: {

              blockTimestamp_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.common.ChainmakerTransaction.internal_static_common_TransactionInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.common.ChainmakerTransaction.internal_static_common_TransactionInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo.class, org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo.Builder.class);
    }

    public static final int TRANSACTION_FIELD_NUMBER = 1;
    private org.chainmaker.pb.common.ChainmakerTransaction.Transaction transaction_;
    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     * @return Whether the transaction field is set.
     */
    @java.lang.Override
    public boolean hasTransaction() {
      return transaction_ != null;
    }
    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     * @return The transaction.
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerTransaction.Transaction getTransaction() {
      return transaction_ == null ? org.chainmaker.pb.common.ChainmakerTransaction.Transaction.getDefaultInstance() : transaction_;
    }
    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder getTransactionOrBuilder() {
      return getTransaction();
    }

    public static final int BLOCK_HEIGHT_FIELD_NUMBER = 2;
    private long blockHeight_;
    /**
     * <pre>
     * block height
     * </pre>
     *
     * <code>uint64 block_height = 2;</code>
     * @return The blockHeight.
     */
    @java.lang.Override
    public long getBlockHeight() {
      return blockHeight_;
    }

    public static final int BLOCK_HASH_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString blockHash_;
    /**
     * <pre>
     * Deprecated, block hash
     * </pre>
     *
     * <code>bytes block_hash = 3;</code>
     * @return The blockHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBlockHash() {
      return blockHash_;
    }

    public static final int TX_INDEX_FIELD_NUMBER = 4;
    private int txIndex_;
    /**
     * <pre>
     * transaction index in block
     * </pre>
     *
     * <code>uint32 tx_index = 4;</code>
     * @return The txIndex.
     */
    @java.lang.Override
    public int getTxIndex() {
      return txIndex_;
    }

    public static final int BLOCK_TIMESTAMP_FIELD_NUMBER = 5;
    private long blockTimestamp_;
    /**
     * <pre>
     * block header timestamp
     * </pre>
     *
     * <code>int64 block_timestamp = 5;</code>
     * @return The blockTimestamp.
     */
    @java.lang.Override
    public long getBlockTimestamp() {
      return blockTimestamp_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (transaction_ != null) {
        output.writeMessage(1, getTransaction());
      }
      if (blockHeight_ != 0L) {
        output.writeUInt64(2, blockHeight_);
      }
      if (!blockHash_.isEmpty()) {
        output.writeBytes(3, blockHash_);
      }
      if (txIndex_ != 0) {
        output.writeUInt32(4, txIndex_);
      }
      if (blockTimestamp_ != 0L) {
        output.writeInt64(5, blockTimestamp_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (transaction_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTransaction());
      }
      if (blockHeight_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, blockHeight_);
      }
      if (!blockHash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, blockHash_);
      }
      if (txIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, txIndex_);
      }
      if (blockTimestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, blockTimestamp_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo other = (org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo) obj;

      if (hasTransaction() != other.hasTransaction()) return false;
      if (hasTransaction()) {
        if (!getTransaction()
            .equals(other.getTransaction())) return false;
      }
      if (getBlockHeight()
          != other.getBlockHeight()) return false;
      if (!getBlockHash()
          .equals(other.getBlockHash())) return false;
      if (getTxIndex()
          != other.getTxIndex()) return false;
      if (getBlockTimestamp()
          != other.getBlockTimestamp()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTransaction()) {
        hash = (37 * hash) + TRANSACTION_FIELD_NUMBER;
        hash = (53 * hash) + getTransaction().hashCode();
      }
      hash = (37 * hash) + BLOCK_HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBlockHeight());
      hash = (37 * hash) + BLOCK_HASH_FIELD_NUMBER;
      hash = (53 * hash) + getBlockHash().hashCode();
      hash = (37 * hash) + TX_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getTxIndex();
      hash = (37 * hash) + BLOCK_TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBlockTimestamp());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * transaction info include transaction and its block height hash and tx index
     * </pre>
     *
     * Protobuf type {@code common.TransactionInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:common.TransactionInfo)
        org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.common.ChainmakerTransaction.internal_static_common_TransactionInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.common.ChainmakerTransaction.internal_static_common_TransactionInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo.class, org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo.Builder.class);
      }

      // Construct using org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (transactionBuilder_ == null) {
          transaction_ = null;
        } else {
          transaction_ = null;
          transactionBuilder_ = null;
        }
        blockHeight_ = 0L;

        blockHash_ = com.google.protobuf.ByteString.EMPTY;

        txIndex_ = 0;

        blockTimestamp_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.common.ChainmakerTransaction.internal_static_common_TransactionInfo_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo getDefaultInstanceForType() {
        return org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo build() {
        org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo buildPartial() {
        org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo result = new org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo(this);
        if (transactionBuilder_ == null) {
          result.transaction_ = transaction_;
        } else {
          result.transaction_ = transactionBuilder_.build();
        }
        result.blockHeight_ = blockHeight_;
        result.blockHash_ = blockHash_;
        result.txIndex_ = txIndex_;
        result.blockTimestamp_ = blockTimestamp_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo) {
          return mergeFrom((org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo other) {
        if (other == org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo.getDefaultInstance()) return this;
        if (other.hasTransaction()) {
          mergeTransaction(other.getTransaction());
        }
        if (other.getBlockHeight() != 0L) {
          setBlockHeight(other.getBlockHeight());
        }
        if (other.getBlockHash() != com.google.protobuf.ByteString.EMPTY) {
          setBlockHash(other.getBlockHash());
        }
        if (other.getTxIndex() != 0) {
          setTxIndex(other.getTxIndex());
        }
        if (other.getBlockTimestamp() != 0L) {
          setBlockTimestamp(other.getBlockTimestamp());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.chainmaker.pb.common.ChainmakerTransaction.Transaction transaction_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerTransaction.Transaction, org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder, org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder> transactionBuilder_;
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       * @return Whether the transaction field is set.
       */
      public boolean hasTransaction() {
        return transactionBuilder_ != null || transaction_ != null;
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       * @return The transaction.
       */
      public org.chainmaker.pb.common.ChainmakerTransaction.Transaction getTransaction() {
        if (transactionBuilder_ == null) {
          return transaction_ == null ? org.chainmaker.pb.common.ChainmakerTransaction.Transaction.getDefaultInstance() : transaction_;
        } else {
          return transactionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public Builder setTransaction(org.chainmaker.pb.common.ChainmakerTransaction.Transaction value) {
        if (transactionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          transaction_ = value;
          onChanged();
        } else {
          transactionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public Builder setTransaction(
          org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder builderForValue) {
        if (transactionBuilder_ == null) {
          transaction_ = builderForValue.build();
          onChanged();
        } else {
          transactionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public Builder mergeTransaction(org.chainmaker.pb.common.ChainmakerTransaction.Transaction value) {
        if (transactionBuilder_ == null) {
          if (transaction_ != null) {
            transaction_ =
              org.chainmaker.pb.common.ChainmakerTransaction.Transaction.newBuilder(transaction_).mergeFrom(value).buildPartial();
          } else {
            transaction_ = value;
          }
          onChanged();
        } else {
          transactionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public Builder clearTransaction() {
        if (transactionBuilder_ == null) {
          transaction_ = null;
          onChanged();
        } else {
          transaction_ = null;
          transactionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder getTransactionBuilder() {
        
        onChanged();
        return getTransactionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder getTransactionOrBuilder() {
        if (transactionBuilder_ != null) {
          return transactionBuilder_.getMessageOrBuilder();
        } else {
          return transaction_ == null ?
              org.chainmaker.pb.common.ChainmakerTransaction.Transaction.getDefaultInstance() : transaction_;
        }
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerTransaction.Transaction, org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder, org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder> 
          getTransactionFieldBuilder() {
        if (transactionBuilder_ == null) {
          transactionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.common.ChainmakerTransaction.Transaction, org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder, org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder>(
                  getTransaction(),
                  getParentForChildren(),
                  isClean());
          transaction_ = null;
        }
        return transactionBuilder_;
      }

      private long blockHeight_ ;
      /**
       * <pre>
       * block height
       * </pre>
       *
       * <code>uint64 block_height = 2;</code>
       * @return The blockHeight.
       */
      @java.lang.Override
      public long getBlockHeight() {
        return blockHeight_;
      }
      /**
       * <pre>
       * block height
       * </pre>
       *
       * <code>uint64 block_height = 2;</code>
       * @param value The blockHeight to set.
       * @return This builder for chaining.
       */
      public Builder setBlockHeight(long value) {
        
        blockHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * block height
       * </pre>
       *
       * <code>uint64 block_height = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockHeight() {
        
        blockHeight_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString blockHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Deprecated, block hash
       * </pre>
       *
       * <code>bytes block_hash = 3;</code>
       * @return The blockHash.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBlockHash() {
        return blockHash_;
      }
      /**
       * <pre>
       * Deprecated, block hash
       * </pre>
       *
       * <code>bytes block_hash = 3;</code>
       * @param value The blockHash to set.
       * @return This builder for chaining.
       */
      public Builder setBlockHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        blockHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Deprecated, block hash
       * </pre>
       *
       * <code>bytes block_hash = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockHash() {
        
        blockHash_ = getDefaultInstance().getBlockHash();
        onChanged();
        return this;
      }

      private int txIndex_ ;
      /**
       * <pre>
       * transaction index in block
       * </pre>
       *
       * <code>uint32 tx_index = 4;</code>
       * @return The txIndex.
       */
      @java.lang.Override
      public int getTxIndex() {
        return txIndex_;
      }
      /**
       * <pre>
       * transaction index in block
       * </pre>
       *
       * <code>uint32 tx_index = 4;</code>
       * @param value The txIndex to set.
       * @return This builder for chaining.
       */
      public Builder setTxIndex(int value) {
        
        txIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * transaction index in block
       * </pre>
       *
       * <code>uint32 tx_index = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTxIndex() {
        
        txIndex_ = 0;
        onChanged();
        return this;
      }

      private long blockTimestamp_ ;
      /**
       * <pre>
       * block header timestamp
       * </pre>
       *
       * <code>int64 block_timestamp = 5;</code>
       * @return The blockTimestamp.
       */
      @java.lang.Override
      public long getBlockTimestamp() {
        return blockTimestamp_;
      }
      /**
       * <pre>
       * block header timestamp
       * </pre>
       *
       * <code>int64 block_timestamp = 5;</code>
       * @param value The blockTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setBlockTimestamp(long value) {
        
        blockTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * block header timestamp
       * </pre>
       *
       * <code>int64 block_timestamp = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockTimestamp() {
        
        blockTimestamp_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:common.TransactionInfo)
    }

    // @@protoc_insertion_point(class_scope:common.TransactionInfo)
    private static final org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo();
    }

    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TransactionInfo>
        PARSER = new com.google.protobuf.AbstractParser<TransactionInfo>() {
      @java.lang.Override
      public TransactionInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TransactionInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TransactionInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TransactionInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TransactionWithRWSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:common.TransactionWithRWSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     * @return Whether the transaction field is set.
     */
    boolean hasTransaction();
    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     * @return The transaction.
     */
    org.chainmaker.pb.common.ChainmakerTransaction.Transaction getTransaction();
    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     */
    org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder getTransactionOrBuilder();

    /**
     * <code>.common.TxRWSet rw_set = 2;</code>
     * @return Whether the rwSet field is set.
     */
    boolean hasRwSet();
    /**
     * <code>.common.TxRWSet rw_set = 2;</code>
     * @return The rwSet.
     */
    org.chainmaker.pb.common.Rwset.TxRWSet getRwSet();
    /**
     * <code>.common.TxRWSet rw_set = 2;</code>
     */
    org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder getRwSetOrBuilder();
  }
  /**
   * <pre>
   *transaction and read write set
   * </pre>
   *
   * Protobuf type {@code common.TransactionWithRWSet}
   */
  public static final class TransactionWithRWSet extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:common.TransactionWithRWSet)
      TransactionWithRWSetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TransactionWithRWSet.newBuilder() to construct.
    private TransactionWithRWSet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TransactionWithRWSet() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TransactionWithRWSet();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TransactionWithRWSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder subBuilder = null;
              if (transaction_ != null) {
                subBuilder = transaction_.toBuilder();
              }
              transaction_ = input.readMessage(org.chainmaker.pb.common.ChainmakerTransaction.Transaction.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(transaction_);
                transaction_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.chainmaker.pb.common.Rwset.TxRWSet.Builder subBuilder = null;
              if (rwSet_ != null) {
                subBuilder = rwSet_.toBuilder();
              }
              rwSet_ = input.readMessage(org.chainmaker.pb.common.Rwset.TxRWSet.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rwSet_);
                rwSet_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.common.ChainmakerTransaction.internal_static_common_TransactionWithRWSet_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.common.ChainmakerTransaction.internal_static_common_TransactionWithRWSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet.class, org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet.Builder.class);
    }

    public static final int TRANSACTION_FIELD_NUMBER = 1;
    private org.chainmaker.pb.common.ChainmakerTransaction.Transaction transaction_;
    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     * @return Whether the transaction field is set.
     */
    @java.lang.Override
    public boolean hasTransaction() {
      return transaction_ != null;
    }
    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     * @return The transaction.
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerTransaction.Transaction getTransaction() {
      return transaction_ == null ? org.chainmaker.pb.common.ChainmakerTransaction.Transaction.getDefaultInstance() : transaction_;
    }
    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder getTransactionOrBuilder() {
      return getTransaction();
    }

    public static final int RW_SET_FIELD_NUMBER = 2;
    private org.chainmaker.pb.common.Rwset.TxRWSet rwSet_;
    /**
     * <code>.common.TxRWSet rw_set = 2;</code>
     * @return Whether the rwSet field is set.
     */
    @java.lang.Override
    public boolean hasRwSet() {
      return rwSet_ != null;
    }
    /**
     * <code>.common.TxRWSet rw_set = 2;</code>
     * @return The rwSet.
     */
    @java.lang.Override
    public org.chainmaker.pb.common.Rwset.TxRWSet getRwSet() {
      return rwSet_ == null ? org.chainmaker.pb.common.Rwset.TxRWSet.getDefaultInstance() : rwSet_;
    }
    /**
     * <code>.common.TxRWSet rw_set = 2;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder getRwSetOrBuilder() {
      return getRwSet();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (transaction_ != null) {
        output.writeMessage(1, getTransaction());
      }
      if (rwSet_ != null) {
        output.writeMessage(2, getRwSet());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (transaction_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTransaction());
      }
      if (rwSet_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getRwSet());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet other = (org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet) obj;

      if (hasTransaction() != other.hasTransaction()) return false;
      if (hasTransaction()) {
        if (!getTransaction()
            .equals(other.getTransaction())) return false;
      }
      if (hasRwSet() != other.hasRwSet()) return false;
      if (hasRwSet()) {
        if (!getRwSet()
            .equals(other.getRwSet())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTransaction()) {
        hash = (37 * hash) + TRANSACTION_FIELD_NUMBER;
        hash = (53 * hash) + getTransaction().hashCode();
      }
      if (hasRwSet()) {
        hash = (37 * hash) + RW_SET_FIELD_NUMBER;
        hash = (53 * hash) + getRwSet().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *transaction and read write set
     * </pre>
     *
     * Protobuf type {@code common.TransactionWithRWSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:common.TransactionWithRWSet)
        org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.common.ChainmakerTransaction.internal_static_common_TransactionWithRWSet_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.common.ChainmakerTransaction.internal_static_common_TransactionWithRWSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet.class, org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet.Builder.class);
      }

      // Construct using org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (transactionBuilder_ == null) {
          transaction_ = null;
        } else {
          transaction_ = null;
          transactionBuilder_ = null;
        }
        if (rwSetBuilder_ == null) {
          rwSet_ = null;
        } else {
          rwSet_ = null;
          rwSetBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.common.ChainmakerTransaction.internal_static_common_TransactionWithRWSet_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet getDefaultInstanceForType() {
        return org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet build() {
        org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet buildPartial() {
        org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet result = new org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet(this);
        if (transactionBuilder_ == null) {
          result.transaction_ = transaction_;
        } else {
          result.transaction_ = transactionBuilder_.build();
        }
        if (rwSetBuilder_ == null) {
          result.rwSet_ = rwSet_;
        } else {
          result.rwSet_ = rwSetBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet) {
          return mergeFrom((org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet other) {
        if (other == org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet.getDefaultInstance()) return this;
        if (other.hasTransaction()) {
          mergeTransaction(other.getTransaction());
        }
        if (other.hasRwSet()) {
          mergeRwSet(other.getRwSet());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.chainmaker.pb.common.ChainmakerTransaction.Transaction transaction_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerTransaction.Transaction, org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder, org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder> transactionBuilder_;
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       * @return Whether the transaction field is set.
       */
      public boolean hasTransaction() {
        return transactionBuilder_ != null || transaction_ != null;
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       * @return The transaction.
       */
      public org.chainmaker.pb.common.ChainmakerTransaction.Transaction getTransaction() {
        if (transactionBuilder_ == null) {
          return transaction_ == null ? org.chainmaker.pb.common.ChainmakerTransaction.Transaction.getDefaultInstance() : transaction_;
        } else {
          return transactionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public Builder setTransaction(org.chainmaker.pb.common.ChainmakerTransaction.Transaction value) {
        if (transactionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          transaction_ = value;
          onChanged();
        } else {
          transactionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public Builder setTransaction(
          org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder builderForValue) {
        if (transactionBuilder_ == null) {
          transaction_ = builderForValue.build();
          onChanged();
        } else {
          transactionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public Builder mergeTransaction(org.chainmaker.pb.common.ChainmakerTransaction.Transaction value) {
        if (transactionBuilder_ == null) {
          if (transaction_ != null) {
            transaction_ =
              org.chainmaker.pb.common.ChainmakerTransaction.Transaction.newBuilder(transaction_).mergeFrom(value).buildPartial();
          } else {
            transaction_ = value;
          }
          onChanged();
        } else {
          transactionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public Builder clearTransaction() {
        if (transactionBuilder_ == null) {
          transaction_ = null;
          onChanged();
        } else {
          transaction_ = null;
          transactionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder getTransactionBuilder() {
        
        onChanged();
        return getTransactionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder getTransactionOrBuilder() {
        if (transactionBuilder_ != null) {
          return transactionBuilder_.getMessageOrBuilder();
        } else {
          return transaction_ == null ?
              org.chainmaker.pb.common.ChainmakerTransaction.Transaction.getDefaultInstance() : transaction_;
        }
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerTransaction.Transaction, org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder, org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder> 
          getTransactionFieldBuilder() {
        if (transactionBuilder_ == null) {
          transactionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.common.ChainmakerTransaction.Transaction, org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder, org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder>(
                  getTransaction(),
                  getParentForChildren(),
                  isClean());
          transaction_ = null;
        }
        return transactionBuilder_;
      }

      private org.chainmaker.pb.common.Rwset.TxRWSet rwSet_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.Rwset.TxRWSet, org.chainmaker.pb.common.Rwset.TxRWSet.Builder, org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder> rwSetBuilder_;
      /**
       * <code>.common.TxRWSet rw_set = 2;</code>
       * @return Whether the rwSet field is set.
       */
      public boolean hasRwSet() {
        return rwSetBuilder_ != null || rwSet_ != null;
      }
      /**
       * <code>.common.TxRWSet rw_set = 2;</code>
       * @return The rwSet.
       */
      public org.chainmaker.pb.common.Rwset.TxRWSet getRwSet() {
        if (rwSetBuilder_ == null) {
          return rwSet_ == null ? org.chainmaker.pb.common.Rwset.TxRWSet.getDefaultInstance() : rwSet_;
        } else {
          return rwSetBuilder_.getMessage();
        }
      }
      /**
       * <code>.common.TxRWSet rw_set = 2;</code>
       */
      public Builder setRwSet(org.chainmaker.pb.common.Rwset.TxRWSet value) {
        if (rwSetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rwSet_ = value;
          onChanged();
        } else {
          rwSetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.common.TxRWSet rw_set = 2;</code>
       */
      public Builder setRwSet(
          org.chainmaker.pb.common.Rwset.TxRWSet.Builder builderForValue) {
        if (rwSetBuilder_ == null) {
          rwSet_ = builderForValue.build();
          onChanged();
        } else {
          rwSetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.common.TxRWSet rw_set = 2;</code>
       */
      public Builder mergeRwSet(org.chainmaker.pb.common.Rwset.TxRWSet value) {
        if (rwSetBuilder_ == null) {
          if (rwSet_ != null) {
            rwSet_ =
              org.chainmaker.pb.common.Rwset.TxRWSet.newBuilder(rwSet_).mergeFrom(value).buildPartial();
          } else {
            rwSet_ = value;
          }
          onChanged();
        } else {
          rwSetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.common.TxRWSet rw_set = 2;</code>
       */
      public Builder clearRwSet() {
        if (rwSetBuilder_ == null) {
          rwSet_ = null;
          onChanged();
        } else {
          rwSet_ = null;
          rwSetBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.common.TxRWSet rw_set = 2;</code>
       */
      public org.chainmaker.pb.common.Rwset.TxRWSet.Builder getRwSetBuilder() {
        
        onChanged();
        return getRwSetFieldBuilder().getBuilder();
      }
      /**
       * <code>.common.TxRWSet rw_set = 2;</code>
       */
      public org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder getRwSetOrBuilder() {
        if (rwSetBuilder_ != null) {
          return rwSetBuilder_.getMessageOrBuilder();
        } else {
          return rwSet_ == null ?
              org.chainmaker.pb.common.Rwset.TxRWSet.getDefaultInstance() : rwSet_;
        }
      }
      /**
       * <code>.common.TxRWSet rw_set = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.Rwset.TxRWSet, org.chainmaker.pb.common.Rwset.TxRWSet.Builder, org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder> 
          getRwSetFieldBuilder() {
        if (rwSetBuilder_ == null) {
          rwSetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.common.Rwset.TxRWSet, org.chainmaker.pb.common.Rwset.TxRWSet.Builder, org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder>(
                  getRwSet(),
                  getParentForChildren(),
                  isClean());
          rwSet_ = null;
        }
        return rwSetBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:common.TransactionWithRWSet)
    }

    // @@protoc_insertion_point(class_scope:common.TransactionWithRWSet)
    private static final org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet();
    }

    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TransactionWithRWSet>
        PARSER = new com.google.protobuf.AbstractParser<TransactionWithRWSet>() {
      @java.lang.Override
      public TransactionWithRWSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TransactionWithRWSet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TransactionWithRWSet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TransactionWithRWSet> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerTransaction.TransactionWithRWSet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TransactionInfoWithRWSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:common.TransactionInfoWithRWSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     * @return Whether the transaction field is set.
     */
    boolean hasTransaction();
    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     * @return The transaction.
     */
    org.chainmaker.pb.common.ChainmakerTransaction.Transaction getTransaction();
    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     */
    org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder getTransactionOrBuilder();

    /**
     * <pre>
     * block height
     * </pre>
     *
     * <code>uint64 block_height = 2;</code>
     * @return The blockHeight.
     */
    long getBlockHeight();

    /**
     * <pre>
     * Deprecated, block hash
     * </pre>
     *
     * <code>bytes block_hash = 3;</code>
     * @return The blockHash.
     */
    com.google.protobuf.ByteString getBlockHash();

    /**
     * <pre>
     * transaction index in block
     * </pre>
     *
     * <code>uint32 tx_index = 4;</code>
     * @return The txIndex.
     */
    int getTxIndex();

    /**
     * <pre>
     * block header timestamp
     * </pre>
     *
     * <code>int64 block_timestamp = 5;</code>
     * @return The blockTimestamp.
     */
    long getBlockTimestamp();

    /**
     * <code>.common.TxRWSet rw_set = 6;</code>
     * @return Whether the rwSet field is set.
     */
    boolean hasRwSet();
    /**
     * <code>.common.TxRWSet rw_set = 6;</code>
     * @return The rwSet.
     */
    org.chainmaker.pb.common.Rwset.TxRWSet getRwSet();
    /**
     * <code>.common.TxRWSet rw_set = 6;</code>
     */
    org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder getRwSetOrBuilder();
  }
  /**
   * Protobuf type {@code common.TransactionInfoWithRWSet}
   */
  public static final class TransactionInfoWithRWSet extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:common.TransactionInfoWithRWSet)
      TransactionInfoWithRWSetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TransactionInfoWithRWSet.newBuilder() to construct.
    private TransactionInfoWithRWSet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TransactionInfoWithRWSet() {
      blockHash_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TransactionInfoWithRWSet();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TransactionInfoWithRWSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder subBuilder = null;
              if (transaction_ != null) {
                subBuilder = transaction_.toBuilder();
              }
              transaction_ = input.readMessage(org.chainmaker.pb.common.ChainmakerTransaction.Transaction.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(transaction_);
                transaction_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              blockHeight_ = input.readUInt64();
              break;
            }
            case 26: {

              blockHash_ = input.readBytes();
              break;
            }
            case 32: {

              txIndex_ = input.readUInt32();
              break;
            }
            case 40: {

              blockTimestamp_ = input.readInt64();
              break;
            }
            case 50: {
              org.chainmaker.pb.common.Rwset.TxRWSet.Builder subBuilder = null;
              if (rwSet_ != null) {
                subBuilder = rwSet_.toBuilder();
              }
              rwSet_ = input.readMessage(org.chainmaker.pb.common.Rwset.TxRWSet.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rwSet_);
                rwSet_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.common.ChainmakerTransaction.internal_static_common_TransactionInfoWithRWSet_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.common.ChainmakerTransaction.internal_static_common_TransactionInfoWithRWSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet.class, org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet.Builder.class);
    }

    public static final int TRANSACTION_FIELD_NUMBER = 1;
    private org.chainmaker.pb.common.ChainmakerTransaction.Transaction transaction_;
    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     * @return Whether the transaction field is set.
     */
    @java.lang.Override
    public boolean hasTransaction() {
      return transaction_ != null;
    }
    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     * @return The transaction.
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerTransaction.Transaction getTransaction() {
      return transaction_ == null ? org.chainmaker.pb.common.ChainmakerTransaction.Transaction.getDefaultInstance() : transaction_;
    }
    /**
     * <pre>
     * transaction raw data
     * </pre>
     *
     * <code>.common.Transaction transaction = 1;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder getTransactionOrBuilder() {
      return getTransaction();
    }

    public static final int BLOCK_HEIGHT_FIELD_NUMBER = 2;
    private long blockHeight_;
    /**
     * <pre>
     * block height
     * </pre>
     *
     * <code>uint64 block_height = 2;</code>
     * @return The blockHeight.
     */
    @java.lang.Override
    public long getBlockHeight() {
      return blockHeight_;
    }

    public static final int BLOCK_HASH_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString blockHash_;
    /**
     * <pre>
     * Deprecated, block hash
     * </pre>
     *
     * <code>bytes block_hash = 3;</code>
     * @return The blockHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBlockHash() {
      return blockHash_;
    }

    public static final int TX_INDEX_FIELD_NUMBER = 4;
    private int txIndex_;
    /**
     * <pre>
     * transaction index in block
     * </pre>
     *
     * <code>uint32 tx_index = 4;</code>
     * @return The txIndex.
     */
    @java.lang.Override
    public int getTxIndex() {
      return txIndex_;
    }

    public static final int BLOCK_TIMESTAMP_FIELD_NUMBER = 5;
    private long blockTimestamp_;
    /**
     * <pre>
     * block header timestamp
     * </pre>
     *
     * <code>int64 block_timestamp = 5;</code>
     * @return The blockTimestamp.
     */
    @java.lang.Override
    public long getBlockTimestamp() {
      return blockTimestamp_;
    }

    public static final int RW_SET_FIELD_NUMBER = 6;
    private org.chainmaker.pb.common.Rwset.TxRWSet rwSet_;
    /**
     * <code>.common.TxRWSet rw_set = 6;</code>
     * @return Whether the rwSet field is set.
     */
    @java.lang.Override
    public boolean hasRwSet() {
      return rwSet_ != null;
    }
    /**
     * <code>.common.TxRWSet rw_set = 6;</code>
     * @return The rwSet.
     */
    @java.lang.Override
    public org.chainmaker.pb.common.Rwset.TxRWSet getRwSet() {
      return rwSet_ == null ? org.chainmaker.pb.common.Rwset.TxRWSet.getDefaultInstance() : rwSet_;
    }
    /**
     * <code>.common.TxRWSet rw_set = 6;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder getRwSetOrBuilder() {
      return getRwSet();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (transaction_ != null) {
        output.writeMessage(1, getTransaction());
      }
      if (blockHeight_ != 0L) {
        output.writeUInt64(2, blockHeight_);
      }
      if (!blockHash_.isEmpty()) {
        output.writeBytes(3, blockHash_);
      }
      if (txIndex_ != 0) {
        output.writeUInt32(4, txIndex_);
      }
      if (blockTimestamp_ != 0L) {
        output.writeInt64(5, blockTimestamp_);
      }
      if (rwSet_ != null) {
        output.writeMessage(6, getRwSet());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (transaction_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTransaction());
      }
      if (blockHeight_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, blockHeight_);
      }
      if (!blockHash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, blockHash_);
      }
      if (txIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, txIndex_);
      }
      if (blockTimestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, blockTimestamp_);
      }
      if (rwSet_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getRwSet());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet other = (org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet) obj;

      if (hasTransaction() != other.hasTransaction()) return false;
      if (hasTransaction()) {
        if (!getTransaction()
            .equals(other.getTransaction())) return false;
      }
      if (getBlockHeight()
          != other.getBlockHeight()) return false;
      if (!getBlockHash()
          .equals(other.getBlockHash())) return false;
      if (getTxIndex()
          != other.getTxIndex()) return false;
      if (getBlockTimestamp()
          != other.getBlockTimestamp()) return false;
      if (hasRwSet() != other.hasRwSet()) return false;
      if (hasRwSet()) {
        if (!getRwSet()
            .equals(other.getRwSet())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTransaction()) {
        hash = (37 * hash) + TRANSACTION_FIELD_NUMBER;
        hash = (53 * hash) + getTransaction().hashCode();
      }
      hash = (37 * hash) + BLOCK_HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBlockHeight());
      hash = (37 * hash) + BLOCK_HASH_FIELD_NUMBER;
      hash = (53 * hash) + getBlockHash().hashCode();
      hash = (37 * hash) + TX_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getTxIndex();
      hash = (37 * hash) + BLOCK_TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBlockTimestamp());
      if (hasRwSet()) {
        hash = (37 * hash) + RW_SET_FIELD_NUMBER;
        hash = (53 * hash) + getRwSet().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code common.TransactionInfoWithRWSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:common.TransactionInfoWithRWSet)
        org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.common.ChainmakerTransaction.internal_static_common_TransactionInfoWithRWSet_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.common.ChainmakerTransaction.internal_static_common_TransactionInfoWithRWSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet.class, org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet.Builder.class);
      }

      // Construct using org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (transactionBuilder_ == null) {
          transaction_ = null;
        } else {
          transaction_ = null;
          transactionBuilder_ = null;
        }
        blockHeight_ = 0L;

        blockHash_ = com.google.protobuf.ByteString.EMPTY;

        txIndex_ = 0;

        blockTimestamp_ = 0L;

        if (rwSetBuilder_ == null) {
          rwSet_ = null;
        } else {
          rwSet_ = null;
          rwSetBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.common.ChainmakerTransaction.internal_static_common_TransactionInfoWithRWSet_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet getDefaultInstanceForType() {
        return org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet build() {
        org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet buildPartial() {
        org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet result = new org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet(this);
        if (transactionBuilder_ == null) {
          result.transaction_ = transaction_;
        } else {
          result.transaction_ = transactionBuilder_.build();
        }
        result.blockHeight_ = blockHeight_;
        result.blockHash_ = blockHash_;
        result.txIndex_ = txIndex_;
        result.blockTimestamp_ = blockTimestamp_;
        if (rwSetBuilder_ == null) {
          result.rwSet_ = rwSet_;
        } else {
          result.rwSet_ = rwSetBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet) {
          return mergeFrom((org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet other) {
        if (other == org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet.getDefaultInstance()) return this;
        if (other.hasTransaction()) {
          mergeTransaction(other.getTransaction());
        }
        if (other.getBlockHeight() != 0L) {
          setBlockHeight(other.getBlockHeight());
        }
        if (other.getBlockHash() != com.google.protobuf.ByteString.EMPTY) {
          setBlockHash(other.getBlockHash());
        }
        if (other.getTxIndex() != 0) {
          setTxIndex(other.getTxIndex());
        }
        if (other.getBlockTimestamp() != 0L) {
          setBlockTimestamp(other.getBlockTimestamp());
        }
        if (other.hasRwSet()) {
          mergeRwSet(other.getRwSet());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.chainmaker.pb.common.ChainmakerTransaction.Transaction transaction_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerTransaction.Transaction, org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder, org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder> transactionBuilder_;
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       * @return Whether the transaction field is set.
       */
      public boolean hasTransaction() {
        return transactionBuilder_ != null || transaction_ != null;
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       * @return The transaction.
       */
      public org.chainmaker.pb.common.ChainmakerTransaction.Transaction getTransaction() {
        if (transactionBuilder_ == null) {
          return transaction_ == null ? org.chainmaker.pb.common.ChainmakerTransaction.Transaction.getDefaultInstance() : transaction_;
        } else {
          return transactionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public Builder setTransaction(org.chainmaker.pb.common.ChainmakerTransaction.Transaction value) {
        if (transactionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          transaction_ = value;
          onChanged();
        } else {
          transactionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public Builder setTransaction(
          org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder builderForValue) {
        if (transactionBuilder_ == null) {
          transaction_ = builderForValue.build();
          onChanged();
        } else {
          transactionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public Builder mergeTransaction(org.chainmaker.pb.common.ChainmakerTransaction.Transaction value) {
        if (transactionBuilder_ == null) {
          if (transaction_ != null) {
            transaction_ =
              org.chainmaker.pb.common.ChainmakerTransaction.Transaction.newBuilder(transaction_).mergeFrom(value).buildPartial();
          } else {
            transaction_ = value;
          }
          onChanged();
        } else {
          transactionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public Builder clearTransaction() {
        if (transactionBuilder_ == null) {
          transaction_ = null;
          onChanged();
        } else {
          transaction_ = null;
          transactionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder getTransactionBuilder() {
        
        onChanged();
        return getTransactionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder getTransactionOrBuilder() {
        if (transactionBuilder_ != null) {
          return transactionBuilder_.getMessageOrBuilder();
        } else {
          return transaction_ == null ?
              org.chainmaker.pb.common.ChainmakerTransaction.Transaction.getDefaultInstance() : transaction_;
        }
      }
      /**
       * <pre>
       * transaction raw data
       * </pre>
       *
       * <code>.common.Transaction transaction = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerTransaction.Transaction, org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder, org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder> 
          getTransactionFieldBuilder() {
        if (transactionBuilder_ == null) {
          transactionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.common.ChainmakerTransaction.Transaction, org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder, org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder>(
                  getTransaction(),
                  getParentForChildren(),
                  isClean());
          transaction_ = null;
        }
        return transactionBuilder_;
      }

      private long blockHeight_ ;
      /**
       * <pre>
       * block height
       * </pre>
       *
       * <code>uint64 block_height = 2;</code>
       * @return The blockHeight.
       */
      @java.lang.Override
      public long getBlockHeight() {
        return blockHeight_;
      }
      /**
       * <pre>
       * block height
       * </pre>
       *
       * <code>uint64 block_height = 2;</code>
       * @param value The blockHeight to set.
       * @return This builder for chaining.
       */
      public Builder setBlockHeight(long value) {
        
        blockHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * block height
       * </pre>
       *
       * <code>uint64 block_height = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockHeight() {
        
        blockHeight_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString blockHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Deprecated, block hash
       * </pre>
       *
       * <code>bytes block_hash = 3;</code>
       * @return The blockHash.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBlockHash() {
        return blockHash_;
      }
      /**
       * <pre>
       * Deprecated, block hash
       * </pre>
       *
       * <code>bytes block_hash = 3;</code>
       * @param value The blockHash to set.
       * @return This builder for chaining.
       */
      public Builder setBlockHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        blockHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Deprecated, block hash
       * </pre>
       *
       * <code>bytes block_hash = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockHash() {
        
        blockHash_ = getDefaultInstance().getBlockHash();
        onChanged();
        return this;
      }

      private int txIndex_ ;
      /**
       * <pre>
       * transaction index in block
       * </pre>
       *
       * <code>uint32 tx_index = 4;</code>
       * @return The txIndex.
       */
      @java.lang.Override
      public int getTxIndex() {
        return txIndex_;
      }
      /**
       * <pre>
       * transaction index in block
       * </pre>
       *
       * <code>uint32 tx_index = 4;</code>
       * @param value The txIndex to set.
       * @return This builder for chaining.
       */
      public Builder setTxIndex(int value) {
        
        txIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * transaction index in block
       * </pre>
       *
       * <code>uint32 tx_index = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTxIndex() {
        
        txIndex_ = 0;
        onChanged();
        return this;
      }

      private long blockTimestamp_ ;
      /**
       * <pre>
       * block header timestamp
       * </pre>
       *
       * <code>int64 block_timestamp = 5;</code>
       * @return The blockTimestamp.
       */
      @java.lang.Override
      public long getBlockTimestamp() {
        return blockTimestamp_;
      }
      /**
       * <pre>
       * block header timestamp
       * </pre>
       *
       * <code>int64 block_timestamp = 5;</code>
       * @param value The blockTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setBlockTimestamp(long value) {
        
        blockTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * block header timestamp
       * </pre>
       *
       * <code>int64 block_timestamp = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockTimestamp() {
        
        blockTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private org.chainmaker.pb.common.Rwset.TxRWSet rwSet_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.Rwset.TxRWSet, org.chainmaker.pb.common.Rwset.TxRWSet.Builder, org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder> rwSetBuilder_;
      /**
       * <code>.common.TxRWSet rw_set = 6;</code>
       * @return Whether the rwSet field is set.
       */
      public boolean hasRwSet() {
        return rwSetBuilder_ != null || rwSet_ != null;
      }
      /**
       * <code>.common.TxRWSet rw_set = 6;</code>
       * @return The rwSet.
       */
      public org.chainmaker.pb.common.Rwset.TxRWSet getRwSet() {
        if (rwSetBuilder_ == null) {
          return rwSet_ == null ? org.chainmaker.pb.common.Rwset.TxRWSet.getDefaultInstance() : rwSet_;
        } else {
          return rwSetBuilder_.getMessage();
        }
      }
      /**
       * <code>.common.TxRWSet rw_set = 6;</code>
       */
      public Builder setRwSet(org.chainmaker.pb.common.Rwset.TxRWSet value) {
        if (rwSetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rwSet_ = value;
          onChanged();
        } else {
          rwSetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.common.TxRWSet rw_set = 6;</code>
       */
      public Builder setRwSet(
          org.chainmaker.pb.common.Rwset.TxRWSet.Builder builderForValue) {
        if (rwSetBuilder_ == null) {
          rwSet_ = builderForValue.build();
          onChanged();
        } else {
          rwSetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.common.TxRWSet rw_set = 6;</code>
       */
      public Builder mergeRwSet(org.chainmaker.pb.common.Rwset.TxRWSet value) {
        if (rwSetBuilder_ == null) {
          if (rwSet_ != null) {
            rwSet_ =
              org.chainmaker.pb.common.Rwset.TxRWSet.newBuilder(rwSet_).mergeFrom(value).buildPartial();
          } else {
            rwSet_ = value;
          }
          onChanged();
        } else {
          rwSetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.common.TxRWSet rw_set = 6;</code>
       */
      public Builder clearRwSet() {
        if (rwSetBuilder_ == null) {
          rwSet_ = null;
          onChanged();
        } else {
          rwSet_ = null;
          rwSetBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.common.TxRWSet rw_set = 6;</code>
       */
      public org.chainmaker.pb.common.Rwset.TxRWSet.Builder getRwSetBuilder() {
        
        onChanged();
        return getRwSetFieldBuilder().getBuilder();
      }
      /**
       * <code>.common.TxRWSet rw_set = 6;</code>
       */
      public org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder getRwSetOrBuilder() {
        if (rwSetBuilder_ != null) {
          return rwSetBuilder_.getMessageOrBuilder();
        } else {
          return rwSet_ == null ?
              org.chainmaker.pb.common.Rwset.TxRWSet.getDefaultInstance() : rwSet_;
        }
      }
      /**
       * <code>.common.TxRWSet rw_set = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.Rwset.TxRWSet, org.chainmaker.pb.common.Rwset.TxRWSet.Builder, org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder> 
          getRwSetFieldBuilder() {
        if (rwSetBuilder_ == null) {
          rwSetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.common.Rwset.TxRWSet, org.chainmaker.pb.common.Rwset.TxRWSet.Builder, org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder>(
                  getRwSet(),
                  getParentForChildren(),
                  isClean());
          rwSet_ = null;
        }
        return rwSetBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:common.TransactionInfoWithRWSet)
    }

    // @@protoc_insertion_point(class_scope:common.TransactionInfoWithRWSet)
    private static final org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet();
    }

    public static org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TransactionInfoWithRWSet>
        PARSER = new com.google.protobuf.AbstractParser<TransactionInfoWithRWSet>() {
      @java.lang.Override
      public TransactionInfoWithRWSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TransactionInfoWithRWSet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TransactionInfoWithRWSet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TransactionInfoWithRWSet> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerTransaction.TransactionInfoWithRWSet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_common_Transaction_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_common_Transaction_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_common_TransactionInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_common_TransactionInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_common_TransactionWithRWSet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_common_TransactionWithRWSet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_common_TransactionInfoWithRWSet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_common_TransactionInfoWithRWSet_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030common/transaction.proto\022\006common\032\024comm" +
      "on/request.proto\032\023common/result.proto\032\022c" +
      "ommon/rwset.proto\"\246\001\n\013Transaction\022 \n\007pay" +
      "load\030\001 \001(\0132\017.common.Payload\022(\n\006sender\030\002 " +
      "\001(\0132\030.common.EndorsementEntry\022+\n\tendorse" +
      "rs\030\003 \003(\0132\030.common.EndorsementEntry\022\036\n\006re" +
      "sult\030\004 \001(\0132\016.common.Result\"\220\001\n\017Transacti" +
      "onInfo\022(\n\013transaction\030\001 \001(\0132\023.common.Tra" +
      "nsaction\022\024\n\014block_height\030\002 \001(\004\022\022\n\nblock_" +
      "hash\030\003 \001(\014\022\020\n\010tx_index\030\004 \001(\r\022\027\n\017block_ti" +
      "mestamp\030\005 \001(\003\"a\n\024TransactionWithRWSet\022(\n" +
      "\013transaction\030\001 \001(\0132\023.common.Transaction\022" +
      "\037\n\006rw_set\030\002 \001(\0132\017.common.TxRWSet\"\272\001\n\030Tra" +
      "nsactionInfoWithRWSet\022(\n\013transaction\030\001 \001" +
      "(\0132\023.common.Transaction\022\024\n\014block_height\030" +
      "\002 \001(\004\022\022\n\nblock_hash\030\003 \001(\014\022\020\n\010tx_index\030\004 " +
      "\001(\r\022\027\n\017block_timestamp\030\005 \001(\003\022\037\n\006rw_set\030\006" +
      " \001(\0132\017.common.TxRWSetB\\\n\030org.chainmaker." +
      "pb.commonB\025ChainmakerTransactionZ)chainm" +
      "aker.org/chainmaker/pb-go/v2/commonb\006pro" +
      "to3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.chainmaker.pb.common.Request.getDescriptor(),
          org.chainmaker.pb.common.ResultOuterClass.getDescriptor(),
          org.chainmaker.pb.common.Rwset.getDescriptor(),
        });
    internal_static_common_Transaction_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_common_Transaction_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_common_Transaction_descriptor,
        new java.lang.String[] { "Payload", "Sender", "Endorsers", "Result", });
    internal_static_common_TransactionInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_common_TransactionInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_common_TransactionInfo_descriptor,
        new java.lang.String[] { "Transaction", "BlockHeight", "BlockHash", "TxIndex", "BlockTimestamp", });
    internal_static_common_TransactionWithRWSet_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_common_TransactionWithRWSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_common_TransactionWithRWSet_descriptor,
        new java.lang.String[] { "Transaction", "RwSet", });
    internal_static_common_TransactionInfoWithRWSet_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_common_TransactionInfoWithRWSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_common_TransactionInfoWithRWSet_descriptor,
        new java.lang.String[] { "Transaction", "BlockHeight", "BlockHash", "TxIndex", "BlockTimestamp", "RwSet", });
    org.chainmaker.pb.common.Request.getDescriptor();
    org.chainmaker.pb.common.ResultOuterClass.getDescriptor();
    org.chainmaker.pb.common.Rwset.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
