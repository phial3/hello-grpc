// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/block.proto

package org.chainmaker.pb.common;

public final class ChainmakerBlock {
  private ChainmakerBlock() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * BlockType specify block pack txs type
   * </pre>
   *
   * Protobuf enum {@code common.BlockType}
   */
  public enum BlockType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Normal block, pack multi txs into one block
     * </pre>
     *
     * <code>NORMAL_BLOCK = 0;</code>
     */
    NORMAL_BLOCK(0),
    /**
     * <pre>
     * Config block, only include 1 chain config update tx in this block
     * </pre>
     *
     * <code>CONFIG_BLOCK = 1;</code>
     */
    CONFIG_BLOCK(1),
    /**
     * <pre>
     * Sql Contract init or upgrade block, only include 1 sql contract init or upgrade tx in this block
     * </pre>
     *
     * <code>CONTRACT_MGR_BLOCK = 2;</code>
     */
    CONTRACT_MGR_BLOCK(2),
    /**
     * <pre>
     * block.Txs[0] is a coinbase tx
     * </pre>
     *
     * <code>HAS_COINBASE = 4;</code>
     */
    HAS_COINBASE(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Normal block, pack multi txs into one block
     * </pre>
     *
     * <code>NORMAL_BLOCK = 0;</code>
     */
    public static final int NORMAL_BLOCK_VALUE = 0;
    /**
     * <pre>
     * Config block, only include 1 chain config update tx in this block
     * </pre>
     *
     * <code>CONFIG_BLOCK = 1;</code>
     */
    public static final int CONFIG_BLOCK_VALUE = 1;
    /**
     * <pre>
     * Sql Contract init or upgrade block, only include 1 sql contract init or upgrade tx in this block
     * </pre>
     *
     * <code>CONTRACT_MGR_BLOCK = 2;</code>
     */
    public static final int CONTRACT_MGR_BLOCK_VALUE = 2;
    /**
     * <pre>
     * block.Txs[0] is a coinbase tx
     * </pre>
     *
     * <code>HAS_COINBASE = 4;</code>
     */
    public static final int HAS_COINBASE_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BlockType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BlockType forNumber(int value) {
      switch (value) {
        case 0: return NORMAL_BLOCK;
        case 1: return CONFIG_BLOCK;
        case 2: return CONTRACT_MGR_BLOCK;
        case 4: return HAS_COINBASE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BlockType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BlockType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BlockType>() {
            public BlockType findValueByNumber(int number) {
              return BlockType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.chainmaker.pb.common.ChainmakerBlock.getDescriptor().getEnumTypes().get(0);
    }

    private static final BlockType[] VALUES = values();

    public static BlockType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BlockType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:common.BlockType)
  }

  public interface BlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:common.Block)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * header of the block
     * </pre>
     *
     * <code>.common.BlockHeader header = 1;</code>
     * @return Whether the header field is set.
     */
    boolean hasHeader();
    /**
     * <pre>
     * header of the block
     * </pre>
     *
     * <code>.common.BlockHeader header = 1;</code>
     * @return The header.
     */
    org.chainmaker.pb.common.ChainmakerBlock.BlockHeader getHeader();
    /**
     * <pre>
     * header of the block
     * </pre>
     *
     * <code>.common.BlockHeader header = 1;</code>
     */
    org.chainmaker.pb.common.ChainmakerBlock.BlockHeaderOrBuilder getHeaderOrBuilder();

    /**
     * <pre>
     * execution sequence of intra block transactions, generated by proposer
     * </pre>
     *
     * <code>.common.DAG dag = 2;</code>
     * @return Whether the dag field is set.
     */
    boolean hasDag();
    /**
     * <pre>
     * execution sequence of intra block transactions, generated by proposer
     * </pre>
     *
     * <code>.common.DAG dag = 2;</code>
     * @return The dag.
     */
    org.chainmaker.pb.common.ChainmakerBlock.DAG getDag();
    /**
     * <pre>
     * execution sequence of intra block transactions, generated by proposer
     * </pre>
     *
     * <code>.common.DAG dag = 2;</code>
     */
    org.chainmaker.pb.common.ChainmakerBlock.DAGOrBuilder getDagOrBuilder();

    /**
     * <pre>
     * transaction list in this block
     * </pre>
     *
     * <code>repeated .common.Transaction txs = 3;</code>
     */
    java.util.List<org.chainmaker.pb.common.ChainmakerTransaction.Transaction> 
        getTxsList();
    /**
     * <pre>
     * transaction list in this block
     * </pre>
     *
     * <code>repeated .common.Transaction txs = 3;</code>
     */
    org.chainmaker.pb.common.ChainmakerTransaction.Transaction getTxs(int index);
    /**
     * <pre>
     * transaction list in this block
     * </pre>
     *
     * <code>repeated .common.Transaction txs = 3;</code>
     */
    int getTxsCount();
    /**
     * <pre>
     * transaction list in this block
     * </pre>
     *
     * <code>repeated .common.Transaction txs = 3;</code>
     */
    java.util.List<? extends org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder> 
        getTxsOrBuilderList();
    /**
     * <pre>
     * transaction list in this block
     * </pre>
     *
     * <code>repeated .common.Transaction txs = 3;</code>
     */
    org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder getTxsOrBuilder(
        int index);

    /**
     * <pre>
     * stores the voting information of the current block
     * not included in block hash value calculation
     * </pre>
     *
     * <code>.common.AdditionalData additional_data = 4;</code>
     * @return Whether the additionalData field is set.
     */
    boolean hasAdditionalData();
    /**
     * <pre>
     * stores the voting information of the current block
     * not included in block hash value calculation
     * </pre>
     *
     * <code>.common.AdditionalData additional_data = 4;</code>
     * @return The additionalData.
     */
    org.chainmaker.pb.common.ChainmakerBlock.AdditionalData getAdditionalData();
    /**
     * <pre>
     * stores the voting information of the current block
     * not included in block hash value calculation
     * </pre>
     *
     * <code>.common.AdditionalData additional_data = 4;</code>
     */
    org.chainmaker.pb.common.ChainmakerBlock.AdditionalDataOrBuilder getAdditionalDataOrBuilder();
  }
  /**
   * <pre>
   * Block definition
   * </pre>
   *
   * Protobuf type {@code common.Block}
   */
  public static final class Block extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:common.Block)
      BlockOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Block.newBuilder() to construct.
    private Block(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Block() {
      txs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Block();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Block(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.chainmaker.pb.common.ChainmakerBlock.DAG.Builder subBuilder = null;
              if (dag_ != null) {
                subBuilder = dag_.toBuilder();
              }
              dag_ = input.readMessage(org.chainmaker.pb.common.ChainmakerBlock.DAG.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dag_);
                dag_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                txs_ = new java.util.ArrayList<org.chainmaker.pb.common.ChainmakerTransaction.Transaction>();
                mutable_bitField0_ |= 0x00000001;
              }
              txs_.add(
                  input.readMessage(org.chainmaker.pb.common.ChainmakerTransaction.Transaction.parser(), extensionRegistry));
              break;
            }
            case 34: {
              org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.Builder subBuilder = null;
              if (additionalData_ != null) {
                subBuilder = additionalData_.toBuilder();
              }
              additionalData_ = input.readMessage(org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(additionalData_);
                additionalData_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          txs_ = java.util.Collections.unmodifiableList(txs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_Block_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_Block_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.common.ChainmakerBlock.Block.class, org.chainmaker.pb.common.ChainmakerBlock.Block.Builder.class);
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private org.chainmaker.pb.common.ChainmakerBlock.BlockHeader header_;
    /**
     * <pre>
     * header of the block
     * </pre>
     *
     * <code>.common.BlockHeader header = 1;</code>
     * @return Whether the header field is set.
     */
    @java.lang.Override
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <pre>
     * header of the block
     * </pre>
     *
     * <code>.common.BlockHeader header = 1;</code>
     * @return The header.
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.BlockHeader getHeader() {
      return header_ == null ? org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.getDefaultInstance() : header_;
    }
    /**
     * <pre>
     * header of the block
     * </pre>
     *
     * <code>.common.BlockHeader header = 1;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.BlockHeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int DAG_FIELD_NUMBER = 2;
    private org.chainmaker.pb.common.ChainmakerBlock.DAG dag_;
    /**
     * <pre>
     * execution sequence of intra block transactions, generated by proposer
     * </pre>
     *
     * <code>.common.DAG dag = 2;</code>
     * @return Whether the dag field is set.
     */
    @java.lang.Override
    public boolean hasDag() {
      return dag_ != null;
    }
    /**
     * <pre>
     * execution sequence of intra block transactions, generated by proposer
     * </pre>
     *
     * <code>.common.DAG dag = 2;</code>
     * @return The dag.
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.DAG getDag() {
      return dag_ == null ? org.chainmaker.pb.common.ChainmakerBlock.DAG.getDefaultInstance() : dag_;
    }
    /**
     * <pre>
     * execution sequence of intra block transactions, generated by proposer
     * </pre>
     *
     * <code>.common.DAG dag = 2;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.DAGOrBuilder getDagOrBuilder() {
      return getDag();
    }

    public static final int TXS_FIELD_NUMBER = 3;
    private java.util.List<org.chainmaker.pb.common.ChainmakerTransaction.Transaction> txs_;
    /**
     * <pre>
     * transaction list in this block
     * </pre>
     *
     * <code>repeated .common.Transaction txs = 3;</code>
     */
    @java.lang.Override
    public java.util.List<org.chainmaker.pb.common.ChainmakerTransaction.Transaction> getTxsList() {
      return txs_;
    }
    /**
     * <pre>
     * transaction list in this block
     * </pre>
     *
     * <code>repeated .common.Transaction txs = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder> 
        getTxsOrBuilderList() {
      return txs_;
    }
    /**
     * <pre>
     * transaction list in this block
     * </pre>
     *
     * <code>repeated .common.Transaction txs = 3;</code>
     */
    @java.lang.Override
    public int getTxsCount() {
      return txs_.size();
    }
    /**
     * <pre>
     * transaction list in this block
     * </pre>
     *
     * <code>repeated .common.Transaction txs = 3;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerTransaction.Transaction getTxs(int index) {
      return txs_.get(index);
    }
    /**
     * <pre>
     * transaction list in this block
     * </pre>
     *
     * <code>repeated .common.Transaction txs = 3;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder getTxsOrBuilder(
        int index) {
      return txs_.get(index);
    }

    public static final int ADDITIONAL_DATA_FIELD_NUMBER = 4;
    private org.chainmaker.pb.common.ChainmakerBlock.AdditionalData additionalData_;
    /**
     * <pre>
     * stores the voting information of the current block
     * not included in block hash value calculation
     * </pre>
     *
     * <code>.common.AdditionalData additional_data = 4;</code>
     * @return Whether the additionalData field is set.
     */
    @java.lang.Override
    public boolean hasAdditionalData() {
      return additionalData_ != null;
    }
    /**
     * <pre>
     * stores the voting information of the current block
     * not included in block hash value calculation
     * </pre>
     *
     * <code>.common.AdditionalData additional_data = 4;</code>
     * @return The additionalData.
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.AdditionalData getAdditionalData() {
      return additionalData_ == null ? org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.getDefaultInstance() : additionalData_;
    }
    /**
     * <pre>
     * stores the voting information of the current block
     * not included in block hash value calculation
     * </pre>
     *
     * <code>.common.AdditionalData additional_data = 4;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.AdditionalDataOrBuilder getAdditionalDataOrBuilder() {
      return getAdditionalData();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (dag_ != null) {
        output.writeMessage(2, getDag());
      }
      for (int i = 0; i < txs_.size(); i++) {
        output.writeMessage(3, txs_.get(i));
      }
      if (additionalData_ != null) {
        output.writeMessage(4, getAdditionalData());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (dag_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDag());
      }
      for (int i = 0; i < txs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, txs_.get(i));
      }
      if (additionalData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getAdditionalData());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.common.ChainmakerBlock.Block)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.common.ChainmakerBlock.Block other = (org.chainmaker.pb.common.ChainmakerBlock.Block) obj;

      if (hasHeader() != other.hasHeader()) return false;
      if (hasHeader()) {
        if (!getHeader()
            .equals(other.getHeader())) return false;
      }
      if (hasDag() != other.hasDag()) return false;
      if (hasDag()) {
        if (!getDag()
            .equals(other.getDag())) return false;
      }
      if (!getTxsList()
          .equals(other.getTxsList())) return false;
      if (hasAdditionalData() != other.hasAdditionalData()) return false;
      if (hasAdditionalData()) {
        if (!getAdditionalData()
            .equals(other.getAdditionalData())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (hasDag()) {
        hash = (37 * hash) + DAG_FIELD_NUMBER;
        hash = (53 * hash) + getDag().hashCode();
      }
      if (getTxsCount() > 0) {
        hash = (37 * hash) + TXS_FIELD_NUMBER;
        hash = (53 * hash) + getTxsList().hashCode();
      }
      if (hasAdditionalData()) {
        hash = (37 * hash) + ADDITIONAL_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getAdditionalData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.common.ChainmakerBlock.Block parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.Block parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.Block parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.Block parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.Block parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.Block parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.Block parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.Block parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.Block parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.Block parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.Block parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.Block parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.common.ChainmakerBlock.Block prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Block definition
     * </pre>
     *
     * Protobuf type {@code common.Block}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:common.Block)
        org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_Block_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_Block_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.common.ChainmakerBlock.Block.class, org.chainmaker.pb.common.ChainmakerBlock.Block.Builder.class);
      }

      // Construct using org.chainmaker.pb.common.ChainmakerBlock.Block.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTxsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (dagBuilder_ == null) {
          dag_ = null;
        } else {
          dag_ = null;
          dagBuilder_ = null;
        }
        if (txsBuilder_ == null) {
          txs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          txsBuilder_.clear();
        }
        if (additionalDataBuilder_ == null) {
          additionalData_ = null;
        } else {
          additionalData_ = null;
          additionalDataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_Block_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerBlock.Block getDefaultInstanceForType() {
        return org.chainmaker.pb.common.ChainmakerBlock.Block.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerBlock.Block build() {
        org.chainmaker.pb.common.ChainmakerBlock.Block result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerBlock.Block buildPartial() {
        org.chainmaker.pb.common.ChainmakerBlock.Block result = new org.chainmaker.pb.common.ChainmakerBlock.Block(this);
        int from_bitField0_ = bitField0_;
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (dagBuilder_ == null) {
          result.dag_ = dag_;
        } else {
          result.dag_ = dagBuilder_.build();
        }
        if (txsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            txs_ = java.util.Collections.unmodifiableList(txs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.txs_ = txs_;
        } else {
          result.txs_ = txsBuilder_.build();
        }
        if (additionalDataBuilder_ == null) {
          result.additionalData_ = additionalData_;
        } else {
          result.additionalData_ = additionalDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.common.ChainmakerBlock.Block) {
          return mergeFrom((org.chainmaker.pb.common.ChainmakerBlock.Block)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.common.ChainmakerBlock.Block other) {
        if (other == org.chainmaker.pb.common.ChainmakerBlock.Block.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasDag()) {
          mergeDag(other.getDag());
        }
        if (txsBuilder_ == null) {
          if (!other.txs_.isEmpty()) {
            if (txs_.isEmpty()) {
              txs_ = other.txs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTxsIsMutable();
              txs_.addAll(other.txs_);
            }
            onChanged();
          }
        } else {
          if (!other.txs_.isEmpty()) {
            if (txsBuilder_.isEmpty()) {
              txsBuilder_.dispose();
              txsBuilder_ = null;
              txs_ = other.txs_;
              bitField0_ = (bitField0_ & ~0x00000001);
              txsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTxsFieldBuilder() : null;
            } else {
              txsBuilder_.addAllMessages(other.txs_);
            }
          }
        }
        if (other.hasAdditionalData()) {
          mergeAdditionalData(other.getAdditionalData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.common.ChainmakerBlock.Block parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.common.ChainmakerBlock.Block) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.chainmaker.pb.common.ChainmakerBlock.BlockHeader header_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.BlockHeader, org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockHeaderOrBuilder> headerBuilder_;
      /**
       * <pre>
       * header of the block
       * </pre>
       *
       * <code>.common.BlockHeader header = 1;</code>
       * @return Whether the header field is set.
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <pre>
       * header of the block
       * </pre>
       *
       * <code>.common.BlockHeader header = 1;</code>
       * @return The header.
       */
      public org.chainmaker.pb.common.ChainmakerBlock.BlockHeader getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * header of the block
       * </pre>
       *
       * <code>.common.BlockHeader header = 1;</code>
       */
      public Builder setHeader(org.chainmaker.pb.common.ChainmakerBlock.BlockHeader value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * header of the block
       * </pre>
       *
       * <code>.common.BlockHeader header = 1;</code>
       */
      public Builder setHeader(
          org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * header of the block
       * </pre>
       *
       * <code>.common.BlockHeader header = 1;</code>
       */
      public Builder mergeHeader(org.chainmaker.pb.common.ChainmakerBlock.BlockHeader value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * header of the block
       * </pre>
       *
       * <code>.common.BlockHeader header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * header of the block
       * </pre>
       *
       * <code>.common.BlockHeader header = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * header of the block
       * </pre>
       *
       * <code>.common.BlockHeader header = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.BlockHeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.getDefaultInstance() : header_;
        }
      }
      /**
       * <pre>
       * header of the block
       * </pre>
       *
       * <code>.common.BlockHeader header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.BlockHeader, org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockHeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.common.ChainmakerBlock.BlockHeader, org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockHeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private org.chainmaker.pb.common.ChainmakerBlock.DAG dag_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.DAG, org.chainmaker.pb.common.ChainmakerBlock.DAG.Builder, org.chainmaker.pb.common.ChainmakerBlock.DAGOrBuilder> dagBuilder_;
      /**
       * <pre>
       * execution sequence of intra block transactions, generated by proposer
       * </pre>
       *
       * <code>.common.DAG dag = 2;</code>
       * @return Whether the dag field is set.
       */
      public boolean hasDag() {
        return dagBuilder_ != null || dag_ != null;
      }
      /**
       * <pre>
       * execution sequence of intra block transactions, generated by proposer
       * </pre>
       *
       * <code>.common.DAG dag = 2;</code>
       * @return The dag.
       */
      public org.chainmaker.pb.common.ChainmakerBlock.DAG getDag() {
        if (dagBuilder_ == null) {
          return dag_ == null ? org.chainmaker.pb.common.ChainmakerBlock.DAG.getDefaultInstance() : dag_;
        } else {
          return dagBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * execution sequence of intra block transactions, generated by proposer
       * </pre>
       *
       * <code>.common.DAG dag = 2;</code>
       */
      public Builder setDag(org.chainmaker.pb.common.ChainmakerBlock.DAG value) {
        if (dagBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dag_ = value;
          onChanged();
        } else {
          dagBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * execution sequence of intra block transactions, generated by proposer
       * </pre>
       *
       * <code>.common.DAG dag = 2;</code>
       */
      public Builder setDag(
          org.chainmaker.pb.common.ChainmakerBlock.DAG.Builder builderForValue) {
        if (dagBuilder_ == null) {
          dag_ = builderForValue.build();
          onChanged();
        } else {
          dagBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * execution sequence of intra block transactions, generated by proposer
       * </pre>
       *
       * <code>.common.DAG dag = 2;</code>
       */
      public Builder mergeDag(org.chainmaker.pb.common.ChainmakerBlock.DAG value) {
        if (dagBuilder_ == null) {
          if (dag_ != null) {
            dag_ =
              org.chainmaker.pb.common.ChainmakerBlock.DAG.newBuilder(dag_).mergeFrom(value).buildPartial();
          } else {
            dag_ = value;
          }
          onChanged();
        } else {
          dagBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * execution sequence of intra block transactions, generated by proposer
       * </pre>
       *
       * <code>.common.DAG dag = 2;</code>
       */
      public Builder clearDag() {
        if (dagBuilder_ == null) {
          dag_ = null;
          onChanged();
        } else {
          dag_ = null;
          dagBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * execution sequence of intra block transactions, generated by proposer
       * </pre>
       *
       * <code>.common.DAG dag = 2;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.DAG.Builder getDagBuilder() {
        
        onChanged();
        return getDagFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * execution sequence of intra block transactions, generated by proposer
       * </pre>
       *
       * <code>.common.DAG dag = 2;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.DAGOrBuilder getDagOrBuilder() {
        if (dagBuilder_ != null) {
          return dagBuilder_.getMessageOrBuilder();
        } else {
          return dag_ == null ?
              org.chainmaker.pb.common.ChainmakerBlock.DAG.getDefaultInstance() : dag_;
        }
      }
      /**
       * <pre>
       * execution sequence of intra block transactions, generated by proposer
       * </pre>
       *
       * <code>.common.DAG dag = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.DAG, org.chainmaker.pb.common.ChainmakerBlock.DAG.Builder, org.chainmaker.pb.common.ChainmakerBlock.DAGOrBuilder> 
          getDagFieldBuilder() {
        if (dagBuilder_ == null) {
          dagBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.common.ChainmakerBlock.DAG, org.chainmaker.pb.common.ChainmakerBlock.DAG.Builder, org.chainmaker.pb.common.ChainmakerBlock.DAGOrBuilder>(
                  getDag(),
                  getParentForChildren(),
                  isClean());
          dag_ = null;
        }
        return dagBuilder_;
      }

      private java.util.List<org.chainmaker.pb.common.ChainmakerTransaction.Transaction> txs_ =
        java.util.Collections.emptyList();
      private void ensureTxsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          txs_ = new java.util.ArrayList<org.chainmaker.pb.common.ChainmakerTransaction.Transaction>(txs_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerTransaction.Transaction, org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder, org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder> txsBuilder_;

      /**
       * <pre>
       * transaction list in this block
       * </pre>
       *
       * <code>repeated .common.Transaction txs = 3;</code>
       */
      public java.util.List<org.chainmaker.pb.common.ChainmakerTransaction.Transaction> getTxsList() {
        if (txsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(txs_);
        } else {
          return txsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * transaction list in this block
       * </pre>
       *
       * <code>repeated .common.Transaction txs = 3;</code>
       */
      public int getTxsCount() {
        if (txsBuilder_ == null) {
          return txs_.size();
        } else {
          return txsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * transaction list in this block
       * </pre>
       *
       * <code>repeated .common.Transaction txs = 3;</code>
       */
      public org.chainmaker.pb.common.ChainmakerTransaction.Transaction getTxs(int index) {
        if (txsBuilder_ == null) {
          return txs_.get(index);
        } else {
          return txsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * transaction list in this block
       * </pre>
       *
       * <code>repeated .common.Transaction txs = 3;</code>
       */
      public Builder setTxs(
          int index, org.chainmaker.pb.common.ChainmakerTransaction.Transaction value) {
        if (txsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTxsIsMutable();
          txs_.set(index, value);
          onChanged();
        } else {
          txsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * transaction list in this block
       * </pre>
       *
       * <code>repeated .common.Transaction txs = 3;</code>
       */
      public Builder setTxs(
          int index, org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder builderForValue) {
        if (txsBuilder_ == null) {
          ensureTxsIsMutable();
          txs_.set(index, builderForValue.build());
          onChanged();
        } else {
          txsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * transaction list in this block
       * </pre>
       *
       * <code>repeated .common.Transaction txs = 3;</code>
       */
      public Builder addTxs(org.chainmaker.pb.common.ChainmakerTransaction.Transaction value) {
        if (txsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTxsIsMutable();
          txs_.add(value);
          onChanged();
        } else {
          txsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * transaction list in this block
       * </pre>
       *
       * <code>repeated .common.Transaction txs = 3;</code>
       */
      public Builder addTxs(
          int index, org.chainmaker.pb.common.ChainmakerTransaction.Transaction value) {
        if (txsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTxsIsMutable();
          txs_.add(index, value);
          onChanged();
        } else {
          txsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * transaction list in this block
       * </pre>
       *
       * <code>repeated .common.Transaction txs = 3;</code>
       */
      public Builder addTxs(
          org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder builderForValue) {
        if (txsBuilder_ == null) {
          ensureTxsIsMutable();
          txs_.add(builderForValue.build());
          onChanged();
        } else {
          txsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * transaction list in this block
       * </pre>
       *
       * <code>repeated .common.Transaction txs = 3;</code>
       */
      public Builder addTxs(
          int index, org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder builderForValue) {
        if (txsBuilder_ == null) {
          ensureTxsIsMutable();
          txs_.add(index, builderForValue.build());
          onChanged();
        } else {
          txsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * transaction list in this block
       * </pre>
       *
       * <code>repeated .common.Transaction txs = 3;</code>
       */
      public Builder addAllTxs(
          java.lang.Iterable<? extends org.chainmaker.pb.common.ChainmakerTransaction.Transaction> values) {
        if (txsBuilder_ == null) {
          ensureTxsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, txs_);
          onChanged();
        } else {
          txsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * transaction list in this block
       * </pre>
       *
       * <code>repeated .common.Transaction txs = 3;</code>
       */
      public Builder clearTxs() {
        if (txsBuilder_ == null) {
          txs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          txsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * transaction list in this block
       * </pre>
       *
       * <code>repeated .common.Transaction txs = 3;</code>
       */
      public Builder removeTxs(int index) {
        if (txsBuilder_ == null) {
          ensureTxsIsMutable();
          txs_.remove(index);
          onChanged();
        } else {
          txsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * transaction list in this block
       * </pre>
       *
       * <code>repeated .common.Transaction txs = 3;</code>
       */
      public org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder getTxsBuilder(
          int index) {
        return getTxsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * transaction list in this block
       * </pre>
       *
       * <code>repeated .common.Transaction txs = 3;</code>
       */
      public org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder getTxsOrBuilder(
          int index) {
        if (txsBuilder_ == null) {
          return txs_.get(index);  } else {
          return txsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * transaction list in this block
       * </pre>
       *
       * <code>repeated .common.Transaction txs = 3;</code>
       */
      public java.util.List<? extends org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder> 
           getTxsOrBuilderList() {
        if (txsBuilder_ != null) {
          return txsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(txs_);
        }
      }
      /**
       * <pre>
       * transaction list in this block
       * </pre>
       *
       * <code>repeated .common.Transaction txs = 3;</code>
       */
      public org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder addTxsBuilder() {
        return getTxsFieldBuilder().addBuilder(
            org.chainmaker.pb.common.ChainmakerTransaction.Transaction.getDefaultInstance());
      }
      /**
       * <pre>
       * transaction list in this block
       * </pre>
       *
       * <code>repeated .common.Transaction txs = 3;</code>
       */
      public org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder addTxsBuilder(
          int index) {
        return getTxsFieldBuilder().addBuilder(
            index, org.chainmaker.pb.common.ChainmakerTransaction.Transaction.getDefaultInstance());
      }
      /**
       * <pre>
       * transaction list in this block
       * </pre>
       *
       * <code>repeated .common.Transaction txs = 3;</code>
       */
      public java.util.List<org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder> 
           getTxsBuilderList() {
        return getTxsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerTransaction.Transaction, org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder, org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder> 
          getTxsFieldBuilder() {
        if (txsBuilder_ == null) {
          txsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.chainmaker.pb.common.ChainmakerTransaction.Transaction, org.chainmaker.pb.common.ChainmakerTransaction.Transaction.Builder, org.chainmaker.pb.common.ChainmakerTransaction.TransactionOrBuilder>(
                  txs_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          txs_ = null;
        }
        return txsBuilder_;
      }

      private org.chainmaker.pb.common.ChainmakerBlock.AdditionalData additionalData_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.AdditionalData, org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.Builder, org.chainmaker.pb.common.ChainmakerBlock.AdditionalDataOrBuilder> additionalDataBuilder_;
      /**
       * <pre>
       * stores the voting information of the current block
       * not included in block hash value calculation
       * </pre>
       *
       * <code>.common.AdditionalData additional_data = 4;</code>
       * @return Whether the additionalData field is set.
       */
      public boolean hasAdditionalData() {
        return additionalDataBuilder_ != null || additionalData_ != null;
      }
      /**
       * <pre>
       * stores the voting information of the current block
       * not included in block hash value calculation
       * </pre>
       *
       * <code>.common.AdditionalData additional_data = 4;</code>
       * @return The additionalData.
       */
      public org.chainmaker.pb.common.ChainmakerBlock.AdditionalData getAdditionalData() {
        if (additionalDataBuilder_ == null) {
          return additionalData_ == null ? org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.getDefaultInstance() : additionalData_;
        } else {
          return additionalDataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * stores the voting information of the current block
       * not included in block hash value calculation
       * </pre>
       *
       * <code>.common.AdditionalData additional_data = 4;</code>
       */
      public Builder setAdditionalData(org.chainmaker.pb.common.ChainmakerBlock.AdditionalData value) {
        if (additionalDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          additionalData_ = value;
          onChanged();
        } else {
          additionalDataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * stores the voting information of the current block
       * not included in block hash value calculation
       * </pre>
       *
       * <code>.common.AdditionalData additional_data = 4;</code>
       */
      public Builder setAdditionalData(
          org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.Builder builderForValue) {
        if (additionalDataBuilder_ == null) {
          additionalData_ = builderForValue.build();
          onChanged();
        } else {
          additionalDataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * stores the voting information of the current block
       * not included in block hash value calculation
       * </pre>
       *
       * <code>.common.AdditionalData additional_data = 4;</code>
       */
      public Builder mergeAdditionalData(org.chainmaker.pb.common.ChainmakerBlock.AdditionalData value) {
        if (additionalDataBuilder_ == null) {
          if (additionalData_ != null) {
            additionalData_ =
              org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.newBuilder(additionalData_).mergeFrom(value).buildPartial();
          } else {
            additionalData_ = value;
          }
          onChanged();
        } else {
          additionalDataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * stores the voting information of the current block
       * not included in block hash value calculation
       * </pre>
       *
       * <code>.common.AdditionalData additional_data = 4;</code>
       */
      public Builder clearAdditionalData() {
        if (additionalDataBuilder_ == null) {
          additionalData_ = null;
          onChanged();
        } else {
          additionalData_ = null;
          additionalDataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * stores the voting information of the current block
       * not included in block hash value calculation
       * </pre>
       *
       * <code>.common.AdditionalData additional_data = 4;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.Builder getAdditionalDataBuilder() {
        
        onChanged();
        return getAdditionalDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * stores the voting information of the current block
       * not included in block hash value calculation
       * </pre>
       *
       * <code>.common.AdditionalData additional_data = 4;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.AdditionalDataOrBuilder getAdditionalDataOrBuilder() {
        if (additionalDataBuilder_ != null) {
          return additionalDataBuilder_.getMessageOrBuilder();
        } else {
          return additionalData_ == null ?
              org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.getDefaultInstance() : additionalData_;
        }
      }
      /**
       * <pre>
       * stores the voting information of the current block
       * not included in block hash value calculation
       * </pre>
       *
       * <code>.common.AdditionalData additional_data = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.AdditionalData, org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.Builder, org.chainmaker.pb.common.ChainmakerBlock.AdditionalDataOrBuilder> 
          getAdditionalDataFieldBuilder() {
        if (additionalDataBuilder_ == null) {
          additionalDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.common.ChainmakerBlock.AdditionalData, org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.Builder, org.chainmaker.pb.common.ChainmakerBlock.AdditionalDataOrBuilder>(
                  getAdditionalData(),
                  getParentForChildren(),
                  isClean());
          additionalData_ = null;
        }
        return additionalDataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:common.Block)
    }

    // @@protoc_insertion_point(class_scope:common.Block)
    private static final org.chainmaker.pb.common.ChainmakerBlock.Block DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.common.ChainmakerBlock.Block();
    }

    public static org.chainmaker.pb.common.ChainmakerBlock.Block getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Block>
        PARSER = new com.google.protobuf.AbstractParser<Block>() {
      @java.lang.Override
      public Block parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Block(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Block> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Block> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.Block getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BlockInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:common.BlockInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * block
     * </pre>
     *
     * <code>.common.Block block = 1;</code>
     * @return Whether the block field is set.
     */
    boolean hasBlock();
    /**
     * <pre>
     * block
     * </pre>
     *
     * <code>.common.Block block = 1;</code>
     * @return The block.
     */
    org.chainmaker.pb.common.ChainmakerBlock.Block getBlock();
    /**
     * <pre>
     * block
     * </pre>
     *
     * <code>.common.Block block = 1;</code>
     */
    org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder getBlockOrBuilder();

    /**
     * <pre>
     * The read/write set list corresponding to the transaction included in the block
     * </pre>
     *
     * <code>repeated .common.TxRWSet rwset_list = 2;</code>
     */
    java.util.List<org.chainmaker.pb.common.Rwset.TxRWSet> 
        getRwsetListList();
    /**
     * <pre>
     * The read/write set list corresponding to the transaction included in the block
     * </pre>
     *
     * <code>repeated .common.TxRWSet rwset_list = 2;</code>
     */
    org.chainmaker.pb.common.Rwset.TxRWSet getRwsetList(int index);
    /**
     * <pre>
     * The read/write set list corresponding to the transaction included in the block
     * </pre>
     *
     * <code>repeated .common.TxRWSet rwset_list = 2;</code>
     */
    int getRwsetListCount();
    /**
     * <pre>
     * The read/write set list corresponding to the transaction included in the block
     * </pre>
     *
     * <code>repeated .common.TxRWSet rwset_list = 2;</code>
     */
    java.util.List<? extends org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder> 
        getRwsetListOrBuilderList();
    /**
     * <pre>
     * The read/write set list corresponding to the transaction included in the block
     * </pre>
     *
     * <code>repeated .common.TxRWSet rwset_list = 2;</code>
     */
    org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder getRwsetListOrBuilder(
        int index);
  }
  /**
   * <pre>
   * block information
   * </pre>
   *
   * Protobuf type {@code common.BlockInfo}
   */
  public static final class BlockInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:common.BlockInfo)
      BlockInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BlockInfo.newBuilder() to construct.
    private BlockInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BlockInfo() {
      rwsetList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BlockInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BlockInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.chainmaker.pb.common.ChainmakerBlock.Block.Builder subBuilder = null;
              if (block_ != null) {
                subBuilder = block_.toBuilder();
              }
              block_ = input.readMessage(org.chainmaker.pb.common.ChainmakerBlock.Block.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(block_);
                block_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                rwsetList_ = new java.util.ArrayList<org.chainmaker.pb.common.Rwset.TxRWSet>();
                mutable_bitField0_ |= 0x00000001;
              }
              rwsetList_.add(
                  input.readMessage(org.chainmaker.pb.common.Rwset.TxRWSet.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          rwsetList_ = java.util.Collections.unmodifiableList(rwsetList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_BlockInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_BlockInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.common.ChainmakerBlock.BlockInfo.class, org.chainmaker.pb.common.ChainmakerBlock.BlockInfo.Builder.class);
    }

    public static final int BLOCK_FIELD_NUMBER = 1;
    private org.chainmaker.pb.common.ChainmakerBlock.Block block_;
    /**
     * <pre>
     * block
     * </pre>
     *
     * <code>.common.Block block = 1;</code>
     * @return Whether the block field is set.
     */
    @java.lang.Override
    public boolean hasBlock() {
      return block_ != null;
    }
    /**
     * <pre>
     * block
     * </pre>
     *
     * <code>.common.Block block = 1;</code>
     * @return The block.
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.Block getBlock() {
      return block_ == null ? org.chainmaker.pb.common.ChainmakerBlock.Block.getDefaultInstance() : block_;
    }
    /**
     * <pre>
     * block
     * </pre>
     *
     * <code>.common.Block block = 1;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder getBlockOrBuilder() {
      return getBlock();
    }

    public static final int RWSET_LIST_FIELD_NUMBER = 2;
    private java.util.List<org.chainmaker.pb.common.Rwset.TxRWSet> rwsetList_;
    /**
     * <pre>
     * The read/write set list corresponding to the transaction included in the block
     * </pre>
     *
     * <code>repeated .common.TxRWSet rwset_list = 2;</code>
     */
    @java.lang.Override
    public java.util.List<org.chainmaker.pb.common.Rwset.TxRWSet> getRwsetListList() {
      return rwsetList_;
    }
    /**
     * <pre>
     * The read/write set list corresponding to the transaction included in the block
     * </pre>
     *
     * <code>repeated .common.TxRWSet rwset_list = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder> 
        getRwsetListOrBuilderList() {
      return rwsetList_;
    }
    /**
     * <pre>
     * The read/write set list corresponding to the transaction included in the block
     * </pre>
     *
     * <code>repeated .common.TxRWSet rwset_list = 2;</code>
     */
    @java.lang.Override
    public int getRwsetListCount() {
      return rwsetList_.size();
    }
    /**
     * <pre>
     * The read/write set list corresponding to the transaction included in the block
     * </pre>
     *
     * <code>repeated .common.TxRWSet rwset_list = 2;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.Rwset.TxRWSet getRwsetList(int index) {
      return rwsetList_.get(index);
    }
    /**
     * <pre>
     * The read/write set list corresponding to the transaction included in the block
     * </pre>
     *
     * <code>repeated .common.TxRWSet rwset_list = 2;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder getRwsetListOrBuilder(
        int index) {
      return rwsetList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (block_ != null) {
        output.writeMessage(1, getBlock());
      }
      for (int i = 0; i < rwsetList_.size(); i++) {
        output.writeMessage(2, rwsetList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (block_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBlock());
      }
      for (int i = 0; i < rwsetList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, rwsetList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.common.ChainmakerBlock.BlockInfo)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.common.ChainmakerBlock.BlockInfo other = (org.chainmaker.pb.common.ChainmakerBlock.BlockInfo) obj;

      if (hasBlock() != other.hasBlock()) return false;
      if (hasBlock()) {
        if (!getBlock()
            .equals(other.getBlock())) return false;
      }
      if (!getRwsetListList()
          .equals(other.getRwsetListList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBlock()) {
        hash = (37 * hash) + BLOCK_FIELD_NUMBER;
        hash = (53 * hash) + getBlock().hashCode();
      }
      if (getRwsetListCount() > 0) {
        hash = (37 * hash) + RWSET_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getRwsetListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.common.ChainmakerBlock.BlockInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.BlockInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.BlockInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.BlockInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.BlockInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.BlockInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.BlockInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.BlockInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.BlockInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.BlockInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.BlockInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.BlockInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.common.ChainmakerBlock.BlockInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * block information
     * </pre>
     *
     * Protobuf type {@code common.BlockInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:common.BlockInfo)
        org.chainmaker.pb.common.ChainmakerBlock.BlockInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_BlockInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_BlockInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.common.ChainmakerBlock.BlockInfo.class, org.chainmaker.pb.common.ChainmakerBlock.BlockInfo.Builder.class);
      }

      // Construct using org.chainmaker.pb.common.ChainmakerBlock.BlockInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRwsetListFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (blockBuilder_ == null) {
          block_ = null;
        } else {
          block_ = null;
          blockBuilder_ = null;
        }
        if (rwsetListBuilder_ == null) {
          rwsetList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          rwsetListBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_BlockInfo_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerBlock.BlockInfo getDefaultInstanceForType() {
        return org.chainmaker.pb.common.ChainmakerBlock.BlockInfo.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerBlock.BlockInfo build() {
        org.chainmaker.pb.common.ChainmakerBlock.BlockInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerBlock.BlockInfo buildPartial() {
        org.chainmaker.pb.common.ChainmakerBlock.BlockInfo result = new org.chainmaker.pb.common.ChainmakerBlock.BlockInfo(this);
        int from_bitField0_ = bitField0_;
        if (blockBuilder_ == null) {
          result.block_ = block_;
        } else {
          result.block_ = blockBuilder_.build();
        }
        if (rwsetListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            rwsetList_ = java.util.Collections.unmodifiableList(rwsetList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.rwsetList_ = rwsetList_;
        } else {
          result.rwsetList_ = rwsetListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.common.ChainmakerBlock.BlockInfo) {
          return mergeFrom((org.chainmaker.pb.common.ChainmakerBlock.BlockInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.common.ChainmakerBlock.BlockInfo other) {
        if (other == org.chainmaker.pb.common.ChainmakerBlock.BlockInfo.getDefaultInstance()) return this;
        if (other.hasBlock()) {
          mergeBlock(other.getBlock());
        }
        if (rwsetListBuilder_ == null) {
          if (!other.rwsetList_.isEmpty()) {
            if (rwsetList_.isEmpty()) {
              rwsetList_ = other.rwsetList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRwsetListIsMutable();
              rwsetList_.addAll(other.rwsetList_);
            }
            onChanged();
          }
        } else {
          if (!other.rwsetList_.isEmpty()) {
            if (rwsetListBuilder_.isEmpty()) {
              rwsetListBuilder_.dispose();
              rwsetListBuilder_ = null;
              rwsetList_ = other.rwsetList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              rwsetListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRwsetListFieldBuilder() : null;
            } else {
              rwsetListBuilder_.addAllMessages(other.rwsetList_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.common.ChainmakerBlock.BlockInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.common.ChainmakerBlock.BlockInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.chainmaker.pb.common.ChainmakerBlock.Block block_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.Block, org.chainmaker.pb.common.ChainmakerBlock.Block.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder> blockBuilder_;
      /**
       * <pre>
       * block
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       * @return Whether the block field is set.
       */
      public boolean hasBlock() {
        return blockBuilder_ != null || block_ != null;
      }
      /**
       * <pre>
       * block
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       * @return The block.
       */
      public org.chainmaker.pb.common.ChainmakerBlock.Block getBlock() {
        if (blockBuilder_ == null) {
          return block_ == null ? org.chainmaker.pb.common.ChainmakerBlock.Block.getDefaultInstance() : block_;
        } else {
          return blockBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * block
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       */
      public Builder setBlock(org.chainmaker.pb.common.ChainmakerBlock.Block value) {
        if (blockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          block_ = value;
          onChanged();
        } else {
          blockBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * block
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       */
      public Builder setBlock(
          org.chainmaker.pb.common.ChainmakerBlock.Block.Builder builderForValue) {
        if (blockBuilder_ == null) {
          block_ = builderForValue.build();
          onChanged();
        } else {
          blockBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * block
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       */
      public Builder mergeBlock(org.chainmaker.pb.common.ChainmakerBlock.Block value) {
        if (blockBuilder_ == null) {
          if (block_ != null) {
            block_ =
              org.chainmaker.pb.common.ChainmakerBlock.Block.newBuilder(block_).mergeFrom(value).buildPartial();
          } else {
            block_ = value;
          }
          onChanged();
        } else {
          blockBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * block
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       */
      public Builder clearBlock() {
        if (blockBuilder_ == null) {
          block_ = null;
          onChanged();
        } else {
          block_ = null;
          blockBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * block
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.Block.Builder getBlockBuilder() {
        
        onChanged();
        return getBlockFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * block
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder getBlockOrBuilder() {
        if (blockBuilder_ != null) {
          return blockBuilder_.getMessageOrBuilder();
        } else {
          return block_ == null ?
              org.chainmaker.pb.common.ChainmakerBlock.Block.getDefaultInstance() : block_;
        }
      }
      /**
       * <pre>
       * block
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.Block, org.chainmaker.pb.common.ChainmakerBlock.Block.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder> 
          getBlockFieldBuilder() {
        if (blockBuilder_ == null) {
          blockBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.common.ChainmakerBlock.Block, org.chainmaker.pb.common.ChainmakerBlock.Block.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder>(
                  getBlock(),
                  getParentForChildren(),
                  isClean());
          block_ = null;
        }
        return blockBuilder_;
      }

      private java.util.List<org.chainmaker.pb.common.Rwset.TxRWSet> rwsetList_ =
        java.util.Collections.emptyList();
      private void ensureRwsetListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          rwsetList_ = new java.util.ArrayList<org.chainmaker.pb.common.Rwset.TxRWSet>(rwsetList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.chainmaker.pb.common.Rwset.TxRWSet, org.chainmaker.pb.common.Rwset.TxRWSet.Builder, org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder> rwsetListBuilder_;

      /**
       * <pre>
       * The read/write set list corresponding to the transaction included in the block
       * </pre>
       *
       * <code>repeated .common.TxRWSet rwset_list = 2;</code>
       */
      public java.util.List<org.chainmaker.pb.common.Rwset.TxRWSet> getRwsetListList() {
        if (rwsetListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rwsetList_);
        } else {
          return rwsetListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The read/write set list corresponding to the transaction included in the block
       * </pre>
       *
       * <code>repeated .common.TxRWSet rwset_list = 2;</code>
       */
      public int getRwsetListCount() {
        if (rwsetListBuilder_ == null) {
          return rwsetList_.size();
        } else {
          return rwsetListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The read/write set list corresponding to the transaction included in the block
       * </pre>
       *
       * <code>repeated .common.TxRWSet rwset_list = 2;</code>
       */
      public org.chainmaker.pb.common.Rwset.TxRWSet getRwsetList(int index) {
        if (rwsetListBuilder_ == null) {
          return rwsetList_.get(index);
        } else {
          return rwsetListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The read/write set list corresponding to the transaction included in the block
       * </pre>
       *
       * <code>repeated .common.TxRWSet rwset_list = 2;</code>
       */
      public Builder setRwsetList(
          int index, org.chainmaker.pb.common.Rwset.TxRWSet value) {
        if (rwsetListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRwsetListIsMutable();
          rwsetList_.set(index, value);
          onChanged();
        } else {
          rwsetListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The read/write set list corresponding to the transaction included in the block
       * </pre>
       *
       * <code>repeated .common.TxRWSet rwset_list = 2;</code>
       */
      public Builder setRwsetList(
          int index, org.chainmaker.pb.common.Rwset.TxRWSet.Builder builderForValue) {
        if (rwsetListBuilder_ == null) {
          ensureRwsetListIsMutable();
          rwsetList_.set(index, builderForValue.build());
          onChanged();
        } else {
          rwsetListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The read/write set list corresponding to the transaction included in the block
       * </pre>
       *
       * <code>repeated .common.TxRWSet rwset_list = 2;</code>
       */
      public Builder addRwsetList(org.chainmaker.pb.common.Rwset.TxRWSet value) {
        if (rwsetListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRwsetListIsMutable();
          rwsetList_.add(value);
          onChanged();
        } else {
          rwsetListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The read/write set list corresponding to the transaction included in the block
       * </pre>
       *
       * <code>repeated .common.TxRWSet rwset_list = 2;</code>
       */
      public Builder addRwsetList(
          int index, org.chainmaker.pb.common.Rwset.TxRWSet value) {
        if (rwsetListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRwsetListIsMutable();
          rwsetList_.add(index, value);
          onChanged();
        } else {
          rwsetListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The read/write set list corresponding to the transaction included in the block
       * </pre>
       *
       * <code>repeated .common.TxRWSet rwset_list = 2;</code>
       */
      public Builder addRwsetList(
          org.chainmaker.pb.common.Rwset.TxRWSet.Builder builderForValue) {
        if (rwsetListBuilder_ == null) {
          ensureRwsetListIsMutable();
          rwsetList_.add(builderForValue.build());
          onChanged();
        } else {
          rwsetListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The read/write set list corresponding to the transaction included in the block
       * </pre>
       *
       * <code>repeated .common.TxRWSet rwset_list = 2;</code>
       */
      public Builder addRwsetList(
          int index, org.chainmaker.pb.common.Rwset.TxRWSet.Builder builderForValue) {
        if (rwsetListBuilder_ == null) {
          ensureRwsetListIsMutable();
          rwsetList_.add(index, builderForValue.build());
          onChanged();
        } else {
          rwsetListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The read/write set list corresponding to the transaction included in the block
       * </pre>
       *
       * <code>repeated .common.TxRWSet rwset_list = 2;</code>
       */
      public Builder addAllRwsetList(
          java.lang.Iterable<? extends org.chainmaker.pb.common.Rwset.TxRWSet> values) {
        if (rwsetListBuilder_ == null) {
          ensureRwsetListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rwsetList_);
          onChanged();
        } else {
          rwsetListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The read/write set list corresponding to the transaction included in the block
       * </pre>
       *
       * <code>repeated .common.TxRWSet rwset_list = 2;</code>
       */
      public Builder clearRwsetList() {
        if (rwsetListBuilder_ == null) {
          rwsetList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          rwsetListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The read/write set list corresponding to the transaction included in the block
       * </pre>
       *
       * <code>repeated .common.TxRWSet rwset_list = 2;</code>
       */
      public Builder removeRwsetList(int index) {
        if (rwsetListBuilder_ == null) {
          ensureRwsetListIsMutable();
          rwsetList_.remove(index);
          onChanged();
        } else {
          rwsetListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The read/write set list corresponding to the transaction included in the block
       * </pre>
       *
       * <code>repeated .common.TxRWSet rwset_list = 2;</code>
       */
      public org.chainmaker.pb.common.Rwset.TxRWSet.Builder getRwsetListBuilder(
          int index) {
        return getRwsetListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The read/write set list corresponding to the transaction included in the block
       * </pre>
       *
       * <code>repeated .common.TxRWSet rwset_list = 2;</code>
       */
      public org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder getRwsetListOrBuilder(
          int index) {
        if (rwsetListBuilder_ == null) {
          return rwsetList_.get(index);  } else {
          return rwsetListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The read/write set list corresponding to the transaction included in the block
       * </pre>
       *
       * <code>repeated .common.TxRWSet rwset_list = 2;</code>
       */
      public java.util.List<? extends org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder> 
           getRwsetListOrBuilderList() {
        if (rwsetListBuilder_ != null) {
          return rwsetListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rwsetList_);
        }
      }
      /**
       * <pre>
       * The read/write set list corresponding to the transaction included in the block
       * </pre>
       *
       * <code>repeated .common.TxRWSet rwset_list = 2;</code>
       */
      public org.chainmaker.pb.common.Rwset.TxRWSet.Builder addRwsetListBuilder() {
        return getRwsetListFieldBuilder().addBuilder(
            org.chainmaker.pb.common.Rwset.TxRWSet.getDefaultInstance());
      }
      /**
       * <pre>
       * The read/write set list corresponding to the transaction included in the block
       * </pre>
       *
       * <code>repeated .common.TxRWSet rwset_list = 2;</code>
       */
      public org.chainmaker.pb.common.Rwset.TxRWSet.Builder addRwsetListBuilder(
          int index) {
        return getRwsetListFieldBuilder().addBuilder(
            index, org.chainmaker.pb.common.Rwset.TxRWSet.getDefaultInstance());
      }
      /**
       * <pre>
       * The read/write set list corresponding to the transaction included in the block
       * </pre>
       *
       * <code>repeated .common.TxRWSet rwset_list = 2;</code>
       */
      public java.util.List<org.chainmaker.pb.common.Rwset.TxRWSet.Builder> 
           getRwsetListBuilderList() {
        return getRwsetListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.chainmaker.pb.common.Rwset.TxRWSet, org.chainmaker.pb.common.Rwset.TxRWSet.Builder, org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder> 
          getRwsetListFieldBuilder() {
        if (rwsetListBuilder_ == null) {
          rwsetListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.chainmaker.pb.common.Rwset.TxRWSet, org.chainmaker.pb.common.Rwset.TxRWSet.Builder, org.chainmaker.pb.common.Rwset.TxRWSetOrBuilder>(
                  rwsetList_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          rwsetList_ = null;
        }
        return rwsetListBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:common.BlockInfo)
    }

    // @@protoc_insertion_point(class_scope:common.BlockInfo)
    private static final org.chainmaker.pb.common.ChainmakerBlock.BlockInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.common.ChainmakerBlock.BlockInfo();
    }

    public static org.chainmaker.pb.common.ChainmakerBlock.BlockInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BlockInfo>
        PARSER = new com.google.protobuf.AbstractParser<BlockInfo>() {
      @java.lang.Override
      public BlockInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlockInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BlockInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BlockInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.BlockInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AdditionalDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:common.AdditionalData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * extra data, with map type, excluded in hash calculation
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; extra_data = 1;</code>
     */
    int getExtraDataCount();
    /**
     * <pre>
     * extra data, with map type, excluded in hash calculation
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; extra_data = 1;</code>
     */
    boolean containsExtraData(
        java.lang.String key);
    /**
     * Use {@link #getExtraDataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getExtraData();
    /**
     * <pre>
     * extra data, with map type, excluded in hash calculation
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; extra_data = 1;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getExtraDataMap();
    /**
     * <pre>
     * extra data, with map type, excluded in hash calculation
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; extra_data = 1;</code>
     */

    /* nullable */
com.google.protobuf.ByteString getExtraDataOrDefault(
        java.lang.String key,
        /* nullable */
com.google.protobuf.ByteString defaultValue);
    /**
     * <pre>
     * extra data, with map type, excluded in hash calculation
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; extra_data = 1;</code>
     */

    com.google.protobuf.ByteString getExtraDataOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * block additional data
   * </pre>
   *
   * Protobuf type {@code common.AdditionalData}
   */
  public static final class AdditionalData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:common.AdditionalData)
      AdditionalDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AdditionalData.newBuilder() to construct.
    private AdditionalData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AdditionalData() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AdditionalData();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AdditionalData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                extraData_ = com.google.protobuf.MapField.newMapField(
                    ExtraDataDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
              extraData__ = input.readMessage(
                  ExtraDataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              extraData_.getMutableMap().put(
                  extraData__.getKey(), extraData__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_AdditionalData_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetExtraData();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_AdditionalData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.class, org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.Builder.class);
    }

    public static final int EXTRA_DATA_FIELD_NUMBER = 1;
    private static final class ExtraDataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.ByteString>newDefaultInstance(
                  org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_AdditionalData_ExtraDataEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ByteString> extraData_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
    internalGetExtraData() {
      if (extraData_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ExtraDataDefaultEntryHolder.defaultEntry);
      }
      return extraData_;
    }

    public int getExtraDataCount() {
      return internalGetExtraData().getMap().size();
    }
    /**
     * <pre>
     * extra data, with map type, excluded in hash calculation
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; extra_data = 1;</code>
     */

    @java.lang.Override
    public boolean containsExtraData(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetExtraData().getMap().containsKey(key);
    }
    /**
     * Use {@link #getExtraDataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getExtraData() {
      return getExtraDataMap();
    }
    /**
     * <pre>
     * extra data, with map type, excluded in hash calculation
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; extra_data = 1;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getExtraDataMap() {
      return internalGetExtraData().getMap();
    }
    /**
     * <pre>
     * extra data, with map type, excluded in hash calculation
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; extra_data = 1;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getExtraDataOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetExtraData().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * extra data, with map type, excluded in hash calculation
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; extra_data = 1;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getExtraDataOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetExtraData().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetExtraData(),
          ExtraDataDefaultEntryHolder.defaultEntry,
          1);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
           : internalGetExtraData().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
        extraData__ = ExtraDataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, extraData__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.common.ChainmakerBlock.AdditionalData)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.common.ChainmakerBlock.AdditionalData other = (org.chainmaker.pb.common.ChainmakerBlock.AdditionalData) obj;

      if (!internalGetExtraData().equals(
          other.internalGetExtraData())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetExtraData().getMap().isEmpty()) {
        hash = (37 * hash) + EXTRA_DATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetExtraData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.common.ChainmakerBlock.AdditionalData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.AdditionalData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.AdditionalData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.AdditionalData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.AdditionalData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.AdditionalData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.AdditionalData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.AdditionalData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.AdditionalData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.AdditionalData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.AdditionalData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.AdditionalData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.common.ChainmakerBlock.AdditionalData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * block additional data
     * </pre>
     *
     * Protobuf type {@code common.AdditionalData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:common.AdditionalData)
        org.chainmaker.pb.common.ChainmakerBlock.AdditionalDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_AdditionalData_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetExtraData();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableExtraData();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_AdditionalData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.class, org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.Builder.class);
      }

      // Construct using org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableExtraData().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_AdditionalData_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerBlock.AdditionalData getDefaultInstanceForType() {
        return org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerBlock.AdditionalData build() {
        org.chainmaker.pb.common.ChainmakerBlock.AdditionalData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerBlock.AdditionalData buildPartial() {
        org.chainmaker.pb.common.ChainmakerBlock.AdditionalData result = new org.chainmaker.pb.common.ChainmakerBlock.AdditionalData(this);
        int from_bitField0_ = bitField0_;
        result.extraData_ = internalGetExtraData();
        result.extraData_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.common.ChainmakerBlock.AdditionalData) {
          return mergeFrom((org.chainmaker.pb.common.ChainmakerBlock.AdditionalData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.common.ChainmakerBlock.AdditionalData other) {
        if (other == org.chainmaker.pb.common.ChainmakerBlock.AdditionalData.getDefaultInstance()) return this;
        internalGetMutableExtraData().mergeFrom(
            other.internalGetExtraData());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.common.ChainmakerBlock.AdditionalData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.common.ChainmakerBlock.AdditionalData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.ByteString> extraData_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetExtraData() {
        if (extraData_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ExtraDataDefaultEntryHolder.defaultEntry);
        }
        return extraData_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetMutableExtraData() {
        onChanged();;
        if (extraData_ == null) {
          extraData_ = com.google.protobuf.MapField.newMapField(
              ExtraDataDefaultEntryHolder.defaultEntry);
        }
        if (!extraData_.isMutable()) {
          extraData_ = extraData_.copy();
        }
        return extraData_;
      }

      public int getExtraDataCount() {
        return internalGetExtraData().getMap().size();
      }
      /**
       * <pre>
       * extra data, with map type, excluded in hash calculation
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; extra_data = 1;</code>
       */

      @java.lang.Override
      public boolean containsExtraData(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetExtraData().getMap().containsKey(key);
      }
      /**
       * Use {@link #getExtraDataMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getExtraData() {
        return getExtraDataMap();
      }
      /**
       * <pre>
       * extra data, with map type, excluded in hash calculation
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; extra_data = 1;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getExtraDataMap() {
        return internalGetExtraData().getMap();
      }
      /**
       * <pre>
       * extra data, with map type, excluded in hash calculation
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; extra_data = 1;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getExtraDataOrDefault(
          java.lang.String key,
          com.google.protobuf.ByteString defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetExtraData().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * extra data, with map type, excluded in hash calculation
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; extra_data = 1;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getExtraDataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetExtraData().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearExtraData() {
        internalGetMutableExtraData().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * extra data, with map type, excluded in hash calculation
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; extra_data = 1;</code>
       */

      public Builder removeExtraData(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableExtraData().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString>
      getMutableExtraData() {
        return internalGetMutableExtraData().getMutableMap();
      }
      /**
       * <pre>
       * extra data, with map type, excluded in hash calculation
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; extra_data = 1;</code>
       */
      public Builder putExtraData(
          java.lang.String key,
          com.google.protobuf.ByteString value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableExtraData().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * extra data, with map type, excluded in hash calculation
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; extra_data = 1;</code>
       */

      public Builder putAllExtraData(
          java.util.Map<java.lang.String, com.google.protobuf.ByteString> values) {
        internalGetMutableExtraData().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:common.AdditionalData)
    }

    // @@protoc_insertion_point(class_scope:common.AdditionalData)
    private static final org.chainmaker.pb.common.ChainmakerBlock.AdditionalData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.common.ChainmakerBlock.AdditionalData();
    }

    public static org.chainmaker.pb.common.ChainmakerBlock.AdditionalData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AdditionalData>
        PARSER = new com.google.protobuf.AbstractParser<AdditionalData>() {
      @java.lang.Override
      public AdditionalData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AdditionalData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AdditionalData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AdditionalData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.AdditionalData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BlockHeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:common.BlockHeader)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * block version
     * </pre>
     *
     * <code>uint32 block_version = 1;</code>
     * @return The blockVersion.
     */
    int getBlockVersion();

    /**
     * <pre>
     * config block or normal block or other else
     * </pre>
     *
     * <code>.common.BlockType block_type = 2;</code>
     * @return The enum numeric value on the wire for blockType.
     */
    int getBlockTypeValue();
    /**
     * <pre>
     * config block or normal block or other else
     * </pre>
     *
     * <code>.common.BlockType block_type = 2;</code>
     * @return The blockType.
     */
    org.chainmaker.pb.common.ChainmakerBlock.BlockType getBlockType();

    /**
     * <pre>
     * blockchain identifier
     * </pre>
     *
     * <code>string chain_id = 3;</code>
     * @return The chainId.
     */
    java.lang.String getChainId();
    /**
     * <pre>
     * blockchain identifier
     * </pre>
     *
     * <code>string chain_id = 3;</code>
     * @return The bytes for chainId.
     */
    com.google.protobuf.ByteString
        getChainIdBytes();

    /**
     * <pre>
     * block height
     * </pre>
     *
     * <code>uint64 block_height = 4;</code>
     * @return The blockHeight.
     */
    long getBlockHeight();

    /**
     * <pre>
     * block hash (block identifier)
     * </pre>
     *
     * <code>bytes block_hash = 5;</code>
     * @return The blockHash.
     */
    com.google.protobuf.ByteString getBlockHash();

    /**
     * <pre>
     * previous block hash
     * </pre>
     *
     * <code>bytes pre_block_hash = 6;</code>
     * @return The preBlockHash.
     */
    com.google.protobuf.ByteString getPreBlockHash();

    /**
     * <pre>
     * previous config block height, used to trace and check if chain config is valid
     * </pre>
     *
     * <code>uint64 pre_conf_height = 7;</code>
     * @return The preConfHeight.
     */
    long getPreConfHeight();

    /**
     * <pre>
     * count of transactions
     * </pre>
     *
     * <code>uint32 tx_count = 8;</code>
     * @return The txCount.
     */
    int getTxCount();

    /**
     * <pre>
     * merkle root of transactions
     * used to verify the existence of this transactions
     * </pre>
     *
     * <code>bytes tx_root = 9;</code>
     * @return The txRoot.
     */
    com.google.protobuf.ByteString getTxRoot();

    /**
     * <pre>
     * Save the DAG feature summary, and hash the DAG after Pb serialization
     * hash of serialized DAG
     * </pre>
     *
     * <code>bytes dag_hash = 10;</code>
     * @return The dagHash.
     */
    com.google.protobuf.ByteString getDagHash();

    /**
     * <pre>
     * The root hash of Merkle tree generated by read_write_set_digest in the result of each transaction in the block
     * used to verify the read-write set of the block
     * </pre>
     *
     * <code>bytes rw_set_root = 11;</code>
     * @return The rwSetRoot.
     */
    com.google.protobuf.ByteString getRwSetRoot();

    /**
     * <pre>
     * the time stamp of the block
     * </pre>
     *
     * <code>int64 block_timestamp = 12;</code>
     * @return The blockTimestamp.
     */
    long getBlockTimestamp();

    /**
     * <pre>
     * consensus parameters
     * used to store information, include in block hash calculation
     * </pre>
     *
     * <code>bytes consensus_args = 13;</code>
     * @return The consensusArgs.
     */
    com.google.protobuf.ByteString getConsensusArgs();

    /**
     * <pre>
     * proposal node identifier
     * </pre>
     *
     * <code>.accesscontrol.Member proposer = 14;</code>
     * @return Whether the proposer field is set.
     */
    boolean hasProposer();
    /**
     * <pre>
     * proposal node identifier
     * </pre>
     *
     * <code>.accesscontrol.Member proposer = 14;</code>
     * @return The proposer.
     */
    org.chainmaker.pb.accesscontrol.MemberOuterClass.Member getProposer();
    /**
     * <pre>
     * proposal node identifier
     * </pre>
     *
     * <code>.accesscontrol.Member proposer = 14;</code>
     */
    org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberOrBuilder getProposerOrBuilder();

    /**
     * <pre>
     * signature of proposer
     * </pre>
     *
     * <code>bytes signature = 15;</code>
     * @return The signature.
     */
    com.google.protobuf.ByteString getSignature();
  }
  /**
   * <pre>
   * header of the block
   * </pre>
   *
   * Protobuf type {@code common.BlockHeader}
   */
  public static final class BlockHeader extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:common.BlockHeader)
      BlockHeaderOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BlockHeader.newBuilder() to construct.
    private BlockHeader(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BlockHeader() {
      blockType_ = 0;
      chainId_ = "";
      blockHash_ = com.google.protobuf.ByteString.EMPTY;
      preBlockHash_ = com.google.protobuf.ByteString.EMPTY;
      txRoot_ = com.google.protobuf.ByteString.EMPTY;
      dagHash_ = com.google.protobuf.ByteString.EMPTY;
      rwSetRoot_ = com.google.protobuf.ByteString.EMPTY;
      consensusArgs_ = com.google.protobuf.ByteString.EMPTY;
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BlockHeader();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BlockHeader(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              blockVersion_ = input.readUInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              blockType_ = rawValue;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              chainId_ = s;
              break;
            }
            case 32: {

              blockHeight_ = input.readUInt64();
              break;
            }
            case 42: {

              blockHash_ = input.readBytes();
              break;
            }
            case 50: {

              preBlockHash_ = input.readBytes();
              break;
            }
            case 56: {

              preConfHeight_ = input.readUInt64();
              break;
            }
            case 64: {

              txCount_ = input.readUInt32();
              break;
            }
            case 74: {

              txRoot_ = input.readBytes();
              break;
            }
            case 82: {

              dagHash_ = input.readBytes();
              break;
            }
            case 90: {

              rwSetRoot_ = input.readBytes();
              break;
            }
            case 96: {

              blockTimestamp_ = input.readInt64();
              break;
            }
            case 106: {

              consensusArgs_ = input.readBytes();
              break;
            }
            case 114: {
              org.chainmaker.pb.accesscontrol.MemberOuterClass.Member.Builder subBuilder = null;
              if (proposer_ != null) {
                subBuilder = proposer_.toBuilder();
              }
              proposer_ = input.readMessage(org.chainmaker.pb.accesscontrol.MemberOuterClass.Member.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(proposer_);
                proposer_ = subBuilder.buildPartial();
              }

              break;
            }
            case 122: {

              signature_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_BlockHeader_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_BlockHeader_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.class, org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.Builder.class);
    }

    public static final int BLOCK_VERSION_FIELD_NUMBER = 1;
    private int blockVersion_;
    /**
     * <pre>
     * block version
     * </pre>
     *
     * <code>uint32 block_version = 1;</code>
     * @return The blockVersion.
     */
    @java.lang.Override
    public int getBlockVersion() {
      return blockVersion_;
    }

    public static final int BLOCK_TYPE_FIELD_NUMBER = 2;
    private int blockType_;
    /**
     * <pre>
     * config block or normal block or other else
     * </pre>
     *
     * <code>.common.BlockType block_type = 2;</code>
     * @return The enum numeric value on the wire for blockType.
     */
    @java.lang.Override public int getBlockTypeValue() {
      return blockType_;
    }
    /**
     * <pre>
     * config block or normal block or other else
     * </pre>
     *
     * <code>.common.BlockType block_type = 2;</code>
     * @return The blockType.
     */
    @java.lang.Override public org.chainmaker.pb.common.ChainmakerBlock.BlockType getBlockType() {
      @SuppressWarnings("deprecation")
      org.chainmaker.pb.common.ChainmakerBlock.BlockType result = org.chainmaker.pb.common.ChainmakerBlock.BlockType.valueOf(blockType_);
      return result == null ? org.chainmaker.pb.common.ChainmakerBlock.BlockType.UNRECOGNIZED : result;
    }

    public static final int CHAIN_ID_FIELD_NUMBER = 3;
    private volatile java.lang.Object chainId_;
    /**
     * <pre>
     * blockchain identifier
     * </pre>
     *
     * <code>string chain_id = 3;</code>
     * @return The chainId.
     */
    @java.lang.Override
    public java.lang.String getChainId() {
      java.lang.Object ref = chainId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        chainId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * blockchain identifier
     * </pre>
     *
     * <code>string chain_id = 3;</code>
     * @return The bytes for chainId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChainIdBytes() {
      java.lang.Object ref = chainId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        chainId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BLOCK_HEIGHT_FIELD_NUMBER = 4;
    private long blockHeight_;
    /**
     * <pre>
     * block height
     * </pre>
     *
     * <code>uint64 block_height = 4;</code>
     * @return The blockHeight.
     */
    @java.lang.Override
    public long getBlockHeight() {
      return blockHeight_;
    }

    public static final int BLOCK_HASH_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString blockHash_;
    /**
     * <pre>
     * block hash (block identifier)
     * </pre>
     *
     * <code>bytes block_hash = 5;</code>
     * @return The blockHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBlockHash() {
      return blockHash_;
    }

    public static final int PRE_BLOCK_HASH_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString preBlockHash_;
    /**
     * <pre>
     * previous block hash
     * </pre>
     *
     * <code>bytes pre_block_hash = 6;</code>
     * @return The preBlockHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPreBlockHash() {
      return preBlockHash_;
    }

    public static final int PRE_CONF_HEIGHT_FIELD_NUMBER = 7;
    private long preConfHeight_;
    /**
     * <pre>
     * previous config block height, used to trace and check if chain config is valid
     * </pre>
     *
     * <code>uint64 pre_conf_height = 7;</code>
     * @return The preConfHeight.
     */
    @java.lang.Override
    public long getPreConfHeight() {
      return preConfHeight_;
    }

    public static final int TX_COUNT_FIELD_NUMBER = 8;
    private int txCount_;
    /**
     * <pre>
     * count of transactions
     * </pre>
     *
     * <code>uint32 tx_count = 8;</code>
     * @return The txCount.
     */
    @java.lang.Override
    public int getTxCount() {
      return txCount_;
    }

    public static final int TX_ROOT_FIELD_NUMBER = 9;
    private com.google.protobuf.ByteString txRoot_;
    /**
     * <pre>
     * merkle root of transactions
     * used to verify the existence of this transactions
     * </pre>
     *
     * <code>bytes tx_root = 9;</code>
     * @return The txRoot.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTxRoot() {
      return txRoot_;
    }

    public static final int DAG_HASH_FIELD_NUMBER = 10;
    private com.google.protobuf.ByteString dagHash_;
    /**
     * <pre>
     * Save the DAG feature summary, and hash the DAG after Pb serialization
     * hash of serialized DAG
     * </pre>
     *
     * <code>bytes dag_hash = 10;</code>
     * @return The dagHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getDagHash() {
      return dagHash_;
    }

    public static final int RW_SET_ROOT_FIELD_NUMBER = 11;
    private com.google.protobuf.ByteString rwSetRoot_;
    /**
     * <pre>
     * The root hash of Merkle tree generated by read_write_set_digest in the result of each transaction in the block
     * used to verify the read-write set of the block
     * </pre>
     *
     * <code>bytes rw_set_root = 11;</code>
     * @return The rwSetRoot.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getRwSetRoot() {
      return rwSetRoot_;
    }

    public static final int BLOCK_TIMESTAMP_FIELD_NUMBER = 12;
    private long blockTimestamp_;
    /**
     * <pre>
     * the time stamp of the block
     * </pre>
     *
     * <code>int64 block_timestamp = 12;</code>
     * @return The blockTimestamp.
     */
    @java.lang.Override
    public long getBlockTimestamp() {
      return blockTimestamp_;
    }

    public static final int CONSENSUS_ARGS_FIELD_NUMBER = 13;
    private com.google.protobuf.ByteString consensusArgs_;
    /**
     * <pre>
     * consensus parameters
     * used to store information, include in block hash calculation
     * </pre>
     *
     * <code>bytes consensus_args = 13;</code>
     * @return The consensusArgs.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getConsensusArgs() {
      return consensusArgs_;
    }

    public static final int PROPOSER_FIELD_NUMBER = 14;
    private org.chainmaker.pb.accesscontrol.MemberOuterClass.Member proposer_;
    /**
     * <pre>
     * proposal node identifier
     * </pre>
     *
     * <code>.accesscontrol.Member proposer = 14;</code>
     * @return Whether the proposer field is set.
     */
    @java.lang.Override
    public boolean hasProposer() {
      return proposer_ != null;
    }
    /**
     * <pre>
     * proposal node identifier
     * </pre>
     *
     * <code>.accesscontrol.Member proposer = 14;</code>
     * @return The proposer.
     */
    @java.lang.Override
    public org.chainmaker.pb.accesscontrol.MemberOuterClass.Member getProposer() {
      return proposer_ == null ? org.chainmaker.pb.accesscontrol.MemberOuterClass.Member.getDefaultInstance() : proposer_;
    }
    /**
     * <pre>
     * proposal node identifier
     * </pre>
     *
     * <code>.accesscontrol.Member proposer = 14;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberOrBuilder getProposerOrBuilder() {
      return getProposer();
    }

    public static final int SIGNATURE_FIELD_NUMBER = 15;
    private com.google.protobuf.ByteString signature_;
    /**
     * <pre>
     * signature of proposer
     * </pre>
     *
     * <code>bytes signature = 15;</code>
     * @return The signature.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (blockVersion_ != 0) {
        output.writeUInt32(1, blockVersion_);
      }
      if (blockType_ != org.chainmaker.pb.common.ChainmakerBlock.BlockType.NORMAL_BLOCK.getNumber()) {
        output.writeEnum(2, blockType_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(chainId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, chainId_);
      }
      if (blockHeight_ != 0L) {
        output.writeUInt64(4, blockHeight_);
      }
      if (!blockHash_.isEmpty()) {
        output.writeBytes(5, blockHash_);
      }
      if (!preBlockHash_.isEmpty()) {
        output.writeBytes(6, preBlockHash_);
      }
      if (preConfHeight_ != 0L) {
        output.writeUInt64(7, preConfHeight_);
      }
      if (txCount_ != 0) {
        output.writeUInt32(8, txCount_);
      }
      if (!txRoot_.isEmpty()) {
        output.writeBytes(9, txRoot_);
      }
      if (!dagHash_.isEmpty()) {
        output.writeBytes(10, dagHash_);
      }
      if (!rwSetRoot_.isEmpty()) {
        output.writeBytes(11, rwSetRoot_);
      }
      if (blockTimestamp_ != 0L) {
        output.writeInt64(12, blockTimestamp_);
      }
      if (!consensusArgs_.isEmpty()) {
        output.writeBytes(13, consensusArgs_);
      }
      if (proposer_ != null) {
        output.writeMessage(14, getProposer());
      }
      if (!signature_.isEmpty()) {
        output.writeBytes(15, signature_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (blockVersion_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, blockVersion_);
      }
      if (blockType_ != org.chainmaker.pb.common.ChainmakerBlock.BlockType.NORMAL_BLOCK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, blockType_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(chainId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, chainId_);
      }
      if (blockHeight_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, blockHeight_);
      }
      if (!blockHash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, blockHash_);
      }
      if (!preBlockHash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, preBlockHash_);
      }
      if (preConfHeight_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, preConfHeight_);
      }
      if (txCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, txCount_);
      }
      if (!txRoot_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, txRoot_);
      }
      if (!dagHash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, dagHash_);
      }
      if (!rwSetRoot_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, rwSetRoot_);
      }
      if (blockTimestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, blockTimestamp_);
      }
      if (!consensusArgs_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, consensusArgs_);
      }
      if (proposer_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getProposer());
      }
      if (!signature_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, signature_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.common.ChainmakerBlock.BlockHeader)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.common.ChainmakerBlock.BlockHeader other = (org.chainmaker.pb.common.ChainmakerBlock.BlockHeader) obj;

      if (getBlockVersion()
          != other.getBlockVersion()) return false;
      if (blockType_ != other.blockType_) return false;
      if (!getChainId()
          .equals(other.getChainId())) return false;
      if (getBlockHeight()
          != other.getBlockHeight()) return false;
      if (!getBlockHash()
          .equals(other.getBlockHash())) return false;
      if (!getPreBlockHash()
          .equals(other.getPreBlockHash())) return false;
      if (getPreConfHeight()
          != other.getPreConfHeight()) return false;
      if (getTxCount()
          != other.getTxCount()) return false;
      if (!getTxRoot()
          .equals(other.getTxRoot())) return false;
      if (!getDagHash()
          .equals(other.getDagHash())) return false;
      if (!getRwSetRoot()
          .equals(other.getRwSetRoot())) return false;
      if (getBlockTimestamp()
          != other.getBlockTimestamp()) return false;
      if (!getConsensusArgs()
          .equals(other.getConsensusArgs())) return false;
      if (hasProposer() != other.hasProposer()) return false;
      if (hasProposer()) {
        if (!getProposer()
            .equals(other.getProposer())) return false;
      }
      if (!getSignature()
          .equals(other.getSignature())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BLOCK_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getBlockVersion();
      hash = (37 * hash) + BLOCK_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + blockType_;
      hash = (37 * hash) + CHAIN_ID_FIELD_NUMBER;
      hash = (53 * hash) + getChainId().hashCode();
      hash = (37 * hash) + BLOCK_HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBlockHeight());
      hash = (37 * hash) + BLOCK_HASH_FIELD_NUMBER;
      hash = (53 * hash) + getBlockHash().hashCode();
      hash = (37 * hash) + PRE_BLOCK_HASH_FIELD_NUMBER;
      hash = (53 * hash) + getPreBlockHash().hashCode();
      hash = (37 * hash) + PRE_CONF_HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPreConfHeight());
      hash = (37 * hash) + TX_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getTxCount();
      hash = (37 * hash) + TX_ROOT_FIELD_NUMBER;
      hash = (53 * hash) + getTxRoot().hashCode();
      hash = (37 * hash) + DAG_HASH_FIELD_NUMBER;
      hash = (53 * hash) + getDagHash().hashCode();
      hash = (37 * hash) + RW_SET_ROOT_FIELD_NUMBER;
      hash = (53 * hash) + getRwSetRoot().hashCode();
      hash = (37 * hash) + BLOCK_TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBlockTimestamp());
      hash = (37 * hash) + CONSENSUS_ARGS_FIELD_NUMBER;
      hash = (53 * hash) + getConsensusArgs().hashCode();
      if (hasProposer()) {
        hash = (37 * hash) + PROPOSER_FIELD_NUMBER;
        hash = (53 * hash) + getProposer().hashCode();
      }
      hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getSignature().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.common.ChainmakerBlock.BlockHeader parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.BlockHeader parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.BlockHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.BlockHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.BlockHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.BlockHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.BlockHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.BlockHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.BlockHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.BlockHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.BlockHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.BlockHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.common.ChainmakerBlock.BlockHeader prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * header of the block
     * </pre>
     *
     * Protobuf type {@code common.BlockHeader}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:common.BlockHeader)
        org.chainmaker.pb.common.ChainmakerBlock.BlockHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_BlockHeader_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_BlockHeader_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.class, org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.Builder.class);
      }

      // Construct using org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        blockVersion_ = 0;

        blockType_ = 0;

        chainId_ = "";

        blockHeight_ = 0L;

        blockHash_ = com.google.protobuf.ByteString.EMPTY;

        preBlockHash_ = com.google.protobuf.ByteString.EMPTY;

        preConfHeight_ = 0L;

        txCount_ = 0;

        txRoot_ = com.google.protobuf.ByteString.EMPTY;

        dagHash_ = com.google.protobuf.ByteString.EMPTY;

        rwSetRoot_ = com.google.protobuf.ByteString.EMPTY;

        blockTimestamp_ = 0L;

        consensusArgs_ = com.google.protobuf.ByteString.EMPTY;

        if (proposerBuilder_ == null) {
          proposer_ = null;
        } else {
          proposer_ = null;
          proposerBuilder_ = null;
        }
        signature_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_BlockHeader_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerBlock.BlockHeader getDefaultInstanceForType() {
        return org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerBlock.BlockHeader build() {
        org.chainmaker.pb.common.ChainmakerBlock.BlockHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerBlock.BlockHeader buildPartial() {
        org.chainmaker.pb.common.ChainmakerBlock.BlockHeader result = new org.chainmaker.pb.common.ChainmakerBlock.BlockHeader(this);
        result.blockVersion_ = blockVersion_;
        result.blockType_ = blockType_;
        result.chainId_ = chainId_;
        result.blockHeight_ = blockHeight_;
        result.blockHash_ = blockHash_;
        result.preBlockHash_ = preBlockHash_;
        result.preConfHeight_ = preConfHeight_;
        result.txCount_ = txCount_;
        result.txRoot_ = txRoot_;
        result.dagHash_ = dagHash_;
        result.rwSetRoot_ = rwSetRoot_;
        result.blockTimestamp_ = blockTimestamp_;
        result.consensusArgs_ = consensusArgs_;
        if (proposerBuilder_ == null) {
          result.proposer_ = proposer_;
        } else {
          result.proposer_ = proposerBuilder_.build();
        }
        result.signature_ = signature_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.common.ChainmakerBlock.BlockHeader) {
          return mergeFrom((org.chainmaker.pb.common.ChainmakerBlock.BlockHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.common.ChainmakerBlock.BlockHeader other) {
        if (other == org.chainmaker.pb.common.ChainmakerBlock.BlockHeader.getDefaultInstance()) return this;
        if (other.getBlockVersion() != 0) {
          setBlockVersion(other.getBlockVersion());
        }
        if (other.blockType_ != 0) {
          setBlockTypeValue(other.getBlockTypeValue());
        }
        if (!other.getChainId().isEmpty()) {
          chainId_ = other.chainId_;
          onChanged();
        }
        if (other.getBlockHeight() != 0L) {
          setBlockHeight(other.getBlockHeight());
        }
        if (other.getBlockHash() != com.google.protobuf.ByteString.EMPTY) {
          setBlockHash(other.getBlockHash());
        }
        if (other.getPreBlockHash() != com.google.protobuf.ByteString.EMPTY) {
          setPreBlockHash(other.getPreBlockHash());
        }
        if (other.getPreConfHeight() != 0L) {
          setPreConfHeight(other.getPreConfHeight());
        }
        if (other.getTxCount() != 0) {
          setTxCount(other.getTxCount());
        }
        if (other.getTxRoot() != com.google.protobuf.ByteString.EMPTY) {
          setTxRoot(other.getTxRoot());
        }
        if (other.getDagHash() != com.google.protobuf.ByteString.EMPTY) {
          setDagHash(other.getDagHash());
        }
        if (other.getRwSetRoot() != com.google.protobuf.ByteString.EMPTY) {
          setRwSetRoot(other.getRwSetRoot());
        }
        if (other.getBlockTimestamp() != 0L) {
          setBlockTimestamp(other.getBlockTimestamp());
        }
        if (other.getConsensusArgs() != com.google.protobuf.ByteString.EMPTY) {
          setConsensusArgs(other.getConsensusArgs());
        }
        if (other.hasProposer()) {
          mergeProposer(other.getProposer());
        }
        if (other.getSignature() != com.google.protobuf.ByteString.EMPTY) {
          setSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.common.ChainmakerBlock.BlockHeader parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.common.ChainmakerBlock.BlockHeader) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int blockVersion_ ;
      /**
       * <pre>
       * block version
       * </pre>
       *
       * <code>uint32 block_version = 1;</code>
       * @return The blockVersion.
       */
      @java.lang.Override
      public int getBlockVersion() {
        return blockVersion_;
      }
      /**
       * <pre>
       * block version
       * </pre>
       *
       * <code>uint32 block_version = 1;</code>
       * @param value The blockVersion to set.
       * @return This builder for chaining.
       */
      public Builder setBlockVersion(int value) {
        
        blockVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * block version
       * </pre>
       *
       * <code>uint32 block_version = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockVersion() {
        
        blockVersion_ = 0;
        onChanged();
        return this;
      }

      private int blockType_ = 0;
      /**
       * <pre>
       * config block or normal block or other else
       * </pre>
       *
       * <code>.common.BlockType block_type = 2;</code>
       * @return The enum numeric value on the wire for blockType.
       */
      @java.lang.Override public int getBlockTypeValue() {
        return blockType_;
      }
      /**
       * <pre>
       * config block or normal block or other else
       * </pre>
       *
       * <code>.common.BlockType block_type = 2;</code>
       * @param value The enum numeric value on the wire for blockType to set.
       * @return This builder for chaining.
       */
      public Builder setBlockTypeValue(int value) {
        
        blockType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * config block or normal block or other else
       * </pre>
       *
       * <code>.common.BlockType block_type = 2;</code>
       * @return The blockType.
       */
      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerBlock.BlockType getBlockType() {
        @SuppressWarnings("deprecation")
        org.chainmaker.pb.common.ChainmakerBlock.BlockType result = org.chainmaker.pb.common.ChainmakerBlock.BlockType.valueOf(blockType_);
        return result == null ? org.chainmaker.pb.common.ChainmakerBlock.BlockType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * config block or normal block or other else
       * </pre>
       *
       * <code>.common.BlockType block_type = 2;</code>
       * @param value The blockType to set.
       * @return This builder for chaining.
       */
      public Builder setBlockType(org.chainmaker.pb.common.ChainmakerBlock.BlockType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        blockType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * config block or normal block or other else
       * </pre>
       *
       * <code>.common.BlockType block_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockType() {
        
        blockType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object chainId_ = "";
      /**
       * <pre>
       * blockchain identifier
       * </pre>
       *
       * <code>string chain_id = 3;</code>
       * @return The chainId.
       */
      public java.lang.String getChainId() {
        java.lang.Object ref = chainId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          chainId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * blockchain identifier
       * </pre>
       *
       * <code>string chain_id = 3;</code>
       * @return The bytes for chainId.
       */
      public com.google.protobuf.ByteString
          getChainIdBytes() {
        java.lang.Object ref = chainId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          chainId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * blockchain identifier
       * </pre>
       *
       * <code>string chain_id = 3;</code>
       * @param value The chainId to set.
       * @return This builder for chaining.
       */
      public Builder setChainId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        chainId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * blockchain identifier
       * </pre>
       *
       * <code>string chain_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearChainId() {
        
        chainId_ = getDefaultInstance().getChainId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * blockchain identifier
       * </pre>
       *
       * <code>string chain_id = 3;</code>
       * @param value The bytes for chainId to set.
       * @return This builder for chaining.
       */
      public Builder setChainIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        chainId_ = value;
        onChanged();
        return this;
      }

      private long blockHeight_ ;
      /**
       * <pre>
       * block height
       * </pre>
       *
       * <code>uint64 block_height = 4;</code>
       * @return The blockHeight.
       */
      @java.lang.Override
      public long getBlockHeight() {
        return blockHeight_;
      }
      /**
       * <pre>
       * block height
       * </pre>
       *
       * <code>uint64 block_height = 4;</code>
       * @param value The blockHeight to set.
       * @return This builder for chaining.
       */
      public Builder setBlockHeight(long value) {
        
        blockHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * block height
       * </pre>
       *
       * <code>uint64 block_height = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockHeight() {
        
        blockHeight_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString blockHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * block hash (block identifier)
       * </pre>
       *
       * <code>bytes block_hash = 5;</code>
       * @return The blockHash.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBlockHash() {
        return blockHash_;
      }
      /**
       * <pre>
       * block hash (block identifier)
       * </pre>
       *
       * <code>bytes block_hash = 5;</code>
       * @param value The blockHash to set.
       * @return This builder for chaining.
       */
      public Builder setBlockHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        blockHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * block hash (block identifier)
       * </pre>
       *
       * <code>bytes block_hash = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockHash() {
        
        blockHash_ = getDefaultInstance().getBlockHash();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString preBlockHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * previous block hash
       * </pre>
       *
       * <code>bytes pre_block_hash = 6;</code>
       * @return The preBlockHash.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPreBlockHash() {
        return preBlockHash_;
      }
      /**
       * <pre>
       * previous block hash
       * </pre>
       *
       * <code>bytes pre_block_hash = 6;</code>
       * @param value The preBlockHash to set.
       * @return This builder for chaining.
       */
      public Builder setPreBlockHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        preBlockHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * previous block hash
       * </pre>
       *
       * <code>bytes pre_block_hash = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearPreBlockHash() {
        
        preBlockHash_ = getDefaultInstance().getPreBlockHash();
        onChanged();
        return this;
      }

      private long preConfHeight_ ;
      /**
       * <pre>
       * previous config block height, used to trace and check if chain config is valid
       * </pre>
       *
       * <code>uint64 pre_conf_height = 7;</code>
       * @return The preConfHeight.
       */
      @java.lang.Override
      public long getPreConfHeight() {
        return preConfHeight_;
      }
      /**
       * <pre>
       * previous config block height, used to trace and check if chain config is valid
       * </pre>
       *
       * <code>uint64 pre_conf_height = 7;</code>
       * @param value The preConfHeight to set.
       * @return This builder for chaining.
       */
      public Builder setPreConfHeight(long value) {
        
        preConfHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * previous config block height, used to trace and check if chain config is valid
       * </pre>
       *
       * <code>uint64 pre_conf_height = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearPreConfHeight() {
        
        preConfHeight_ = 0L;
        onChanged();
        return this;
      }

      private int txCount_ ;
      /**
       * <pre>
       * count of transactions
       * </pre>
       *
       * <code>uint32 tx_count = 8;</code>
       * @return The txCount.
       */
      @java.lang.Override
      public int getTxCount() {
        return txCount_;
      }
      /**
       * <pre>
       * count of transactions
       * </pre>
       *
       * <code>uint32 tx_count = 8;</code>
       * @param value The txCount to set.
       * @return This builder for chaining.
       */
      public Builder setTxCount(int value) {
        
        txCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * count of transactions
       * </pre>
       *
       * <code>uint32 tx_count = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTxCount() {
        
        txCount_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString txRoot_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * merkle root of transactions
       * used to verify the existence of this transactions
       * </pre>
       *
       * <code>bytes tx_root = 9;</code>
       * @return The txRoot.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getTxRoot() {
        return txRoot_;
      }
      /**
       * <pre>
       * merkle root of transactions
       * used to verify the existence of this transactions
       * </pre>
       *
       * <code>bytes tx_root = 9;</code>
       * @param value The txRoot to set.
       * @return This builder for chaining.
       */
      public Builder setTxRoot(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        txRoot_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * merkle root of transactions
       * used to verify the existence of this transactions
       * </pre>
       *
       * <code>bytes tx_root = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearTxRoot() {
        
        txRoot_ = getDefaultInstance().getTxRoot();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString dagHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Save the DAG feature summary, and hash the DAG after Pb serialization
       * hash of serialized DAG
       * </pre>
       *
       * <code>bytes dag_hash = 10;</code>
       * @return The dagHash.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getDagHash() {
        return dagHash_;
      }
      /**
       * <pre>
       * Save the DAG feature summary, and hash the DAG after Pb serialization
       * hash of serialized DAG
       * </pre>
       *
       * <code>bytes dag_hash = 10;</code>
       * @param value The dagHash to set.
       * @return This builder for chaining.
       */
      public Builder setDagHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dagHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Save the DAG feature summary, and hash the DAG after Pb serialization
       * hash of serialized DAG
       * </pre>
       *
       * <code>bytes dag_hash = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearDagHash() {
        
        dagHash_ = getDefaultInstance().getDagHash();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString rwSetRoot_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The root hash of Merkle tree generated by read_write_set_digest in the result of each transaction in the block
       * used to verify the read-write set of the block
       * </pre>
       *
       * <code>bytes rw_set_root = 11;</code>
       * @return The rwSetRoot.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getRwSetRoot() {
        return rwSetRoot_;
      }
      /**
       * <pre>
       * The root hash of Merkle tree generated by read_write_set_digest in the result of each transaction in the block
       * used to verify the read-write set of the block
       * </pre>
       *
       * <code>bytes rw_set_root = 11;</code>
       * @param value The rwSetRoot to set.
       * @return This builder for chaining.
       */
      public Builder setRwSetRoot(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rwSetRoot_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The root hash of Merkle tree generated by read_write_set_digest in the result of each transaction in the block
       * used to verify the read-write set of the block
       * </pre>
       *
       * <code>bytes rw_set_root = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearRwSetRoot() {
        
        rwSetRoot_ = getDefaultInstance().getRwSetRoot();
        onChanged();
        return this;
      }

      private long blockTimestamp_ ;
      /**
       * <pre>
       * the time stamp of the block
       * </pre>
       *
       * <code>int64 block_timestamp = 12;</code>
       * @return The blockTimestamp.
       */
      @java.lang.Override
      public long getBlockTimestamp() {
        return blockTimestamp_;
      }
      /**
       * <pre>
       * the time stamp of the block
       * </pre>
       *
       * <code>int64 block_timestamp = 12;</code>
       * @param value The blockTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setBlockTimestamp(long value) {
        
        blockTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the time stamp of the block
       * </pre>
       *
       * <code>int64 block_timestamp = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockTimestamp() {
        
        blockTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString consensusArgs_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * consensus parameters
       * used to store information, include in block hash calculation
       * </pre>
       *
       * <code>bytes consensus_args = 13;</code>
       * @return The consensusArgs.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getConsensusArgs() {
        return consensusArgs_;
      }
      /**
       * <pre>
       * consensus parameters
       * used to store information, include in block hash calculation
       * </pre>
       *
       * <code>bytes consensus_args = 13;</code>
       * @param value The consensusArgs to set.
       * @return This builder for chaining.
       */
      public Builder setConsensusArgs(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        consensusArgs_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * consensus parameters
       * used to store information, include in block hash calculation
       * </pre>
       *
       * <code>bytes consensus_args = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearConsensusArgs() {
        
        consensusArgs_ = getDefaultInstance().getConsensusArgs();
        onChanged();
        return this;
      }

      private org.chainmaker.pb.accesscontrol.MemberOuterClass.Member proposer_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.accesscontrol.MemberOuterClass.Member, org.chainmaker.pb.accesscontrol.MemberOuterClass.Member.Builder, org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberOrBuilder> proposerBuilder_;
      /**
       * <pre>
       * proposal node identifier
       * </pre>
       *
       * <code>.accesscontrol.Member proposer = 14;</code>
       * @return Whether the proposer field is set.
       */
      public boolean hasProposer() {
        return proposerBuilder_ != null || proposer_ != null;
      }
      /**
       * <pre>
       * proposal node identifier
       * </pre>
       *
       * <code>.accesscontrol.Member proposer = 14;</code>
       * @return The proposer.
       */
      public org.chainmaker.pb.accesscontrol.MemberOuterClass.Member getProposer() {
        if (proposerBuilder_ == null) {
          return proposer_ == null ? org.chainmaker.pb.accesscontrol.MemberOuterClass.Member.getDefaultInstance() : proposer_;
        } else {
          return proposerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * proposal node identifier
       * </pre>
       *
       * <code>.accesscontrol.Member proposer = 14;</code>
       */
      public Builder setProposer(org.chainmaker.pb.accesscontrol.MemberOuterClass.Member value) {
        if (proposerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          proposer_ = value;
          onChanged();
        } else {
          proposerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * proposal node identifier
       * </pre>
       *
       * <code>.accesscontrol.Member proposer = 14;</code>
       */
      public Builder setProposer(
          org.chainmaker.pb.accesscontrol.MemberOuterClass.Member.Builder builderForValue) {
        if (proposerBuilder_ == null) {
          proposer_ = builderForValue.build();
          onChanged();
        } else {
          proposerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * proposal node identifier
       * </pre>
       *
       * <code>.accesscontrol.Member proposer = 14;</code>
       */
      public Builder mergeProposer(org.chainmaker.pb.accesscontrol.MemberOuterClass.Member value) {
        if (proposerBuilder_ == null) {
          if (proposer_ != null) {
            proposer_ =
              org.chainmaker.pb.accesscontrol.MemberOuterClass.Member.newBuilder(proposer_).mergeFrom(value).buildPartial();
          } else {
            proposer_ = value;
          }
          onChanged();
        } else {
          proposerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * proposal node identifier
       * </pre>
       *
       * <code>.accesscontrol.Member proposer = 14;</code>
       */
      public Builder clearProposer() {
        if (proposerBuilder_ == null) {
          proposer_ = null;
          onChanged();
        } else {
          proposer_ = null;
          proposerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * proposal node identifier
       * </pre>
       *
       * <code>.accesscontrol.Member proposer = 14;</code>
       */
      public org.chainmaker.pb.accesscontrol.MemberOuterClass.Member.Builder getProposerBuilder() {
        
        onChanged();
        return getProposerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * proposal node identifier
       * </pre>
       *
       * <code>.accesscontrol.Member proposer = 14;</code>
       */
      public org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberOrBuilder getProposerOrBuilder() {
        if (proposerBuilder_ != null) {
          return proposerBuilder_.getMessageOrBuilder();
        } else {
          return proposer_ == null ?
              org.chainmaker.pb.accesscontrol.MemberOuterClass.Member.getDefaultInstance() : proposer_;
        }
      }
      /**
       * <pre>
       * proposal node identifier
       * </pre>
       *
       * <code>.accesscontrol.Member proposer = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.accesscontrol.MemberOuterClass.Member, org.chainmaker.pb.accesscontrol.MemberOuterClass.Member.Builder, org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberOrBuilder> 
          getProposerFieldBuilder() {
        if (proposerBuilder_ == null) {
          proposerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.accesscontrol.MemberOuterClass.Member, org.chainmaker.pb.accesscontrol.MemberOuterClass.Member.Builder, org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberOrBuilder>(
                  getProposer(),
                  getParentForChildren(),
                  isClean());
          proposer_ = null;
        }
        return proposerBuilder_;
      }

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * signature of proposer
       * </pre>
       *
       * <code>bytes signature = 15;</code>
       * @return The signature.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <pre>
       * signature of proposer
       * </pre>
       *
       * <code>bytes signature = 15;</code>
       * @param value The signature to set.
       * @return This builder for chaining.
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * signature of proposer
       * </pre>
       *
       * <code>bytes signature = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearSignature() {
        
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:common.BlockHeader)
    }

    // @@protoc_insertion_point(class_scope:common.BlockHeader)
    private static final org.chainmaker.pb.common.ChainmakerBlock.BlockHeader DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.common.ChainmakerBlock.BlockHeader();
    }

    public static org.chainmaker.pb.common.ChainmakerBlock.BlockHeader getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BlockHeader>
        PARSER = new com.google.protobuf.AbstractParser<BlockHeader>() {
      @java.lang.Override
      public BlockHeader parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlockHeader(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BlockHeader> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BlockHeader> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.BlockHeader getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DAGOrBuilder extends
      // @@protoc_insertion_point(interface_extends:common.DAG)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * sequence number of transaction topological sort
     * the sequence number of the transaction topological sort associated with the transaction
     * </pre>
     *
     * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
     */
    java.util.List<org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor> 
        getVertexesList();
    /**
     * <pre>
     * sequence number of transaction topological sort
     * the sequence number of the transaction topological sort associated with the transaction
     * </pre>
     *
     * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
     */
    org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor getVertexes(int index);
    /**
     * <pre>
     * sequence number of transaction topological sort
     * the sequence number of the transaction topological sort associated with the transaction
     * </pre>
     *
     * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
     */
    int getVertexesCount();
    /**
     * <pre>
     * sequence number of transaction topological sort
     * the sequence number of the transaction topological sort associated with the transaction
     * </pre>
     *
     * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
     */
    java.util.List<? extends org.chainmaker.pb.common.ChainmakerBlock.DAG.NeighborOrBuilder> 
        getVertexesOrBuilderList();
    /**
     * <pre>
     * sequence number of transaction topological sort
     * the sequence number of the transaction topological sort associated with the transaction
     * </pre>
     *
     * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
     */
    org.chainmaker.pb.common.ChainmakerBlock.DAG.NeighborOrBuilder getVertexesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * transaction execution sequence
   * Using adjacency table storage
   * </pre>
   *
   * Protobuf type {@code common.DAG}
   */
  public static final class DAG extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:common.DAG)
      DAGOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DAG.newBuilder() to construct.
    private DAG(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DAG() {
      vertexes_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DAG();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DAG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                vertexes_ = new java.util.ArrayList<org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor>();
                mutable_bitField0_ |= 0x00000001;
              }
              vertexes_.add(
                  input.readMessage(org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          vertexes_ = java.util.Collections.unmodifiableList(vertexes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_DAG_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_DAG_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.common.ChainmakerBlock.DAG.class, org.chainmaker.pb.common.ChainmakerBlock.DAG.Builder.class);
    }

    public interface NeighborOrBuilder extends
        // @@protoc_insertion_point(interface_extends:common.DAG.Neighbor)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated uint32 neighbors = 1;</code>
       * @return A list containing the neighbors.
       */
      java.util.List<java.lang.Integer> getNeighborsList();
      /**
       * <code>repeated uint32 neighbors = 1;</code>
       * @return The count of neighbors.
       */
      int getNeighborsCount();
      /**
       * <code>repeated uint32 neighbors = 1;</code>
       * @param index The index of the element to return.
       * @return The neighbors at the given index.
       */
      int getNeighbors(int index);
    }
    /**
     * <pre>
     * Neighbor node: related transactions with reading and writing conflicts
     * </pre>
     *
     * Protobuf type {@code common.DAG.Neighbor}
     */
    public static final class Neighbor extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:common.DAG.Neighbor)
        NeighborOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Neighbor.newBuilder() to construct.
      private Neighbor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Neighbor() {
        neighbors_ = emptyIntList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Neighbor();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Neighbor(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  neighbors_ = newIntList();
                  mutable_bitField0_ |= 0x00000001;
                }
                neighbors_.addInt(input.readUInt32());
                break;
              }
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                  neighbors_ = newIntList();
                  mutable_bitField0_ |= 0x00000001;
                }
                while (input.getBytesUntilLimit() > 0) {
                  neighbors_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            neighbors_.makeImmutable(); // C
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_DAG_Neighbor_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_DAG_Neighbor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor.class, org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor.Builder.class);
      }

      public static final int NEIGHBORS_FIELD_NUMBER = 1;
      private com.google.protobuf.Internal.IntList neighbors_;
      /**
       * <code>repeated uint32 neighbors = 1;</code>
       * @return A list containing the neighbors.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getNeighborsList() {
        return neighbors_;
      }
      /**
       * <code>repeated uint32 neighbors = 1;</code>
       * @return The count of neighbors.
       */
      public int getNeighborsCount() {
        return neighbors_.size();
      }
      /**
       * <code>repeated uint32 neighbors = 1;</code>
       * @param index The index of the element to return.
       * @return The neighbors at the given index.
       */
      public int getNeighbors(int index) {
        return neighbors_.getInt(index);
      }
      private int neighborsMemoizedSerializedSize = -1;

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (getNeighborsList().size() > 0) {
          output.writeUInt32NoTag(10);
          output.writeUInt32NoTag(neighborsMemoizedSerializedSize);
        }
        for (int i = 0; i < neighbors_.size(); i++) {
          output.writeUInt32NoTag(neighbors_.getInt(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < neighbors_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(neighbors_.getInt(i));
          }
          size += dataSize;
          if (!getNeighborsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          neighborsMemoizedSerializedSize = dataSize;
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor)) {
          return super.equals(obj);
        }
        org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor other = (org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor) obj;

        if (!getNeighborsList()
            .equals(other.getNeighborsList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getNeighborsCount() > 0) {
          hash = (37 * hash) + NEIGHBORS_FIELD_NUMBER;
          hash = (53 * hash) + getNeighborsList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Neighbor node: related transactions with reading and writing conflicts
       * </pre>
       *
       * Protobuf type {@code common.DAG.Neighbor}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:common.DAG.Neighbor)
          org.chainmaker.pb.common.ChainmakerBlock.DAG.NeighborOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_DAG_Neighbor_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_DAG_Neighbor_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor.class, org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor.Builder.class);
        }

        // Construct using org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          neighbors_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_DAG_Neighbor_descriptor;
        }

        @java.lang.Override
        public org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor getDefaultInstanceForType() {
          return org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor.getDefaultInstance();
        }

        @java.lang.Override
        public org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor build() {
          org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor buildPartial() {
          org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor result = new org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor(this);
          int from_bitField0_ = bitField0_;
          if (((bitField0_ & 0x00000001) != 0)) {
            neighbors_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.neighbors_ = neighbors_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor) {
            return mergeFrom((org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor other) {
          if (other == org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor.getDefaultInstance()) return this;
          if (!other.neighbors_.isEmpty()) {
            if (neighbors_.isEmpty()) {
              neighbors_ = other.neighbors_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNeighborsIsMutable();
              neighbors_.addAll(other.neighbors_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Internal.IntList neighbors_ = emptyIntList();
        private void ensureNeighborsIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            neighbors_ = mutableCopy(neighbors_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <code>repeated uint32 neighbors = 1;</code>
         * @return A list containing the neighbors.
         */
        public java.util.List<java.lang.Integer>
            getNeighborsList() {
          return ((bitField0_ & 0x00000001) != 0) ?
                   java.util.Collections.unmodifiableList(neighbors_) : neighbors_;
        }
        /**
         * <code>repeated uint32 neighbors = 1;</code>
         * @return The count of neighbors.
         */
        public int getNeighborsCount() {
          return neighbors_.size();
        }
        /**
         * <code>repeated uint32 neighbors = 1;</code>
         * @param index The index of the element to return.
         * @return The neighbors at the given index.
         */
        public int getNeighbors(int index) {
          return neighbors_.getInt(index);
        }
        /**
         * <code>repeated uint32 neighbors = 1;</code>
         * @param index The index to set the value at.
         * @param value The neighbors to set.
         * @return This builder for chaining.
         */
        public Builder setNeighbors(
            int index, int value) {
          ensureNeighborsIsMutable();
          neighbors_.setInt(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 neighbors = 1;</code>
         * @param value The neighbors to add.
         * @return This builder for chaining.
         */
        public Builder addNeighbors(int value) {
          ensureNeighborsIsMutable();
          neighbors_.addInt(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 neighbors = 1;</code>
         * @param values The neighbors to add.
         * @return This builder for chaining.
         */
        public Builder addAllNeighbors(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureNeighborsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, neighbors_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 neighbors = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearNeighbors() {
          neighbors_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:common.DAG.Neighbor)
      }

      // @@protoc_insertion_point(class_scope:common.DAG.Neighbor)
      private static final org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor();
      }

      public static org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Neighbor>
          PARSER = new com.google.protobuf.AbstractParser<Neighbor>() {
        @java.lang.Override
        public Neighbor parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Neighbor(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Neighbor> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Neighbor> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int VERTEXES_FIELD_NUMBER = 2;
    private java.util.List<org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor> vertexes_;
    /**
     * <pre>
     * sequence number of transaction topological sort
     * the sequence number of the transaction topological sort associated with the transaction
     * </pre>
     *
     * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
     */
    @java.lang.Override
    public java.util.List<org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor> getVertexesList() {
      return vertexes_;
    }
    /**
     * <pre>
     * sequence number of transaction topological sort
     * the sequence number of the transaction topological sort associated with the transaction
     * </pre>
     *
     * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.chainmaker.pb.common.ChainmakerBlock.DAG.NeighborOrBuilder> 
        getVertexesOrBuilderList() {
      return vertexes_;
    }
    /**
     * <pre>
     * sequence number of transaction topological sort
     * the sequence number of the transaction topological sort associated with the transaction
     * </pre>
     *
     * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
     */
    @java.lang.Override
    public int getVertexesCount() {
      return vertexes_.size();
    }
    /**
     * <pre>
     * sequence number of transaction topological sort
     * the sequence number of the transaction topological sort associated with the transaction
     * </pre>
     *
     * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor getVertexes(int index) {
      return vertexes_.get(index);
    }
    /**
     * <pre>
     * sequence number of transaction topological sort
     * the sequence number of the transaction topological sort associated with the transaction
     * </pre>
     *
     * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.DAG.NeighborOrBuilder getVertexesOrBuilder(
        int index) {
      return vertexes_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < vertexes_.size(); i++) {
        output.writeMessage(2, vertexes_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < vertexes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, vertexes_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.common.ChainmakerBlock.DAG)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.common.ChainmakerBlock.DAG other = (org.chainmaker.pb.common.ChainmakerBlock.DAG) obj;

      if (!getVertexesList()
          .equals(other.getVertexesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getVertexesCount() > 0) {
        hash = (37 * hash) + VERTEXES_FIELD_NUMBER;
        hash = (53 * hash) + getVertexesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.common.ChainmakerBlock.DAG parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.DAG parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.DAG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.DAG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.DAG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.DAG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.DAG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.DAG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.DAG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.DAG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.DAG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ChainmakerBlock.DAG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.common.ChainmakerBlock.DAG prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * transaction execution sequence
     * Using adjacency table storage
     * </pre>
     *
     * Protobuf type {@code common.DAG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:common.DAG)
        org.chainmaker.pb.common.ChainmakerBlock.DAGOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_DAG_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_DAG_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.common.ChainmakerBlock.DAG.class, org.chainmaker.pb.common.ChainmakerBlock.DAG.Builder.class);
      }

      // Construct using org.chainmaker.pb.common.ChainmakerBlock.DAG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getVertexesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (vertexesBuilder_ == null) {
          vertexes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          vertexesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.common.ChainmakerBlock.internal_static_common_DAG_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerBlock.DAG getDefaultInstanceForType() {
        return org.chainmaker.pb.common.ChainmakerBlock.DAG.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerBlock.DAG build() {
        org.chainmaker.pb.common.ChainmakerBlock.DAG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ChainmakerBlock.DAG buildPartial() {
        org.chainmaker.pb.common.ChainmakerBlock.DAG result = new org.chainmaker.pb.common.ChainmakerBlock.DAG(this);
        int from_bitField0_ = bitField0_;
        if (vertexesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            vertexes_ = java.util.Collections.unmodifiableList(vertexes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.vertexes_ = vertexes_;
        } else {
          result.vertexes_ = vertexesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.common.ChainmakerBlock.DAG) {
          return mergeFrom((org.chainmaker.pb.common.ChainmakerBlock.DAG)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.common.ChainmakerBlock.DAG other) {
        if (other == org.chainmaker.pb.common.ChainmakerBlock.DAG.getDefaultInstance()) return this;
        if (vertexesBuilder_ == null) {
          if (!other.vertexes_.isEmpty()) {
            if (vertexes_.isEmpty()) {
              vertexes_ = other.vertexes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVertexesIsMutable();
              vertexes_.addAll(other.vertexes_);
            }
            onChanged();
          }
        } else {
          if (!other.vertexes_.isEmpty()) {
            if (vertexesBuilder_.isEmpty()) {
              vertexesBuilder_.dispose();
              vertexesBuilder_ = null;
              vertexes_ = other.vertexes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              vertexesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getVertexesFieldBuilder() : null;
            } else {
              vertexesBuilder_.addAllMessages(other.vertexes_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.common.ChainmakerBlock.DAG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.common.ChainmakerBlock.DAG) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor> vertexes_ =
        java.util.Collections.emptyList();
      private void ensureVertexesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          vertexes_ = new java.util.ArrayList<org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor>(vertexes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor, org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor.Builder, org.chainmaker.pb.common.ChainmakerBlock.DAG.NeighborOrBuilder> vertexesBuilder_;

      /**
       * <pre>
       * sequence number of transaction topological sort
       * the sequence number of the transaction topological sort associated with the transaction
       * </pre>
       *
       * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
       */
      public java.util.List<org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor> getVertexesList() {
        if (vertexesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vertexes_);
        } else {
          return vertexesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * sequence number of transaction topological sort
       * the sequence number of the transaction topological sort associated with the transaction
       * </pre>
       *
       * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
       */
      public int getVertexesCount() {
        if (vertexesBuilder_ == null) {
          return vertexes_.size();
        } else {
          return vertexesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * sequence number of transaction topological sort
       * the sequence number of the transaction topological sort associated with the transaction
       * </pre>
       *
       * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor getVertexes(int index) {
        if (vertexesBuilder_ == null) {
          return vertexes_.get(index);
        } else {
          return vertexesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * sequence number of transaction topological sort
       * the sequence number of the transaction topological sort associated with the transaction
       * </pre>
       *
       * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
       */
      public Builder setVertexes(
          int index, org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor value) {
        if (vertexesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVertexesIsMutable();
          vertexes_.set(index, value);
          onChanged();
        } else {
          vertexesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * sequence number of transaction topological sort
       * the sequence number of the transaction topological sort associated with the transaction
       * </pre>
       *
       * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
       */
      public Builder setVertexes(
          int index, org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor.Builder builderForValue) {
        if (vertexesBuilder_ == null) {
          ensureVertexesIsMutable();
          vertexes_.set(index, builderForValue.build());
          onChanged();
        } else {
          vertexesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * sequence number of transaction topological sort
       * the sequence number of the transaction topological sort associated with the transaction
       * </pre>
       *
       * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
       */
      public Builder addVertexes(org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor value) {
        if (vertexesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVertexesIsMutable();
          vertexes_.add(value);
          onChanged();
        } else {
          vertexesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * sequence number of transaction topological sort
       * the sequence number of the transaction topological sort associated with the transaction
       * </pre>
       *
       * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
       */
      public Builder addVertexes(
          int index, org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor value) {
        if (vertexesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVertexesIsMutable();
          vertexes_.add(index, value);
          onChanged();
        } else {
          vertexesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * sequence number of transaction topological sort
       * the sequence number of the transaction topological sort associated with the transaction
       * </pre>
       *
       * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
       */
      public Builder addVertexes(
          org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor.Builder builderForValue) {
        if (vertexesBuilder_ == null) {
          ensureVertexesIsMutable();
          vertexes_.add(builderForValue.build());
          onChanged();
        } else {
          vertexesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * sequence number of transaction topological sort
       * the sequence number of the transaction topological sort associated with the transaction
       * </pre>
       *
       * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
       */
      public Builder addVertexes(
          int index, org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor.Builder builderForValue) {
        if (vertexesBuilder_ == null) {
          ensureVertexesIsMutable();
          vertexes_.add(index, builderForValue.build());
          onChanged();
        } else {
          vertexesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * sequence number of transaction topological sort
       * the sequence number of the transaction topological sort associated with the transaction
       * </pre>
       *
       * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
       */
      public Builder addAllVertexes(
          java.lang.Iterable<? extends org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor> values) {
        if (vertexesBuilder_ == null) {
          ensureVertexesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, vertexes_);
          onChanged();
        } else {
          vertexesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * sequence number of transaction topological sort
       * the sequence number of the transaction topological sort associated with the transaction
       * </pre>
       *
       * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
       */
      public Builder clearVertexes() {
        if (vertexesBuilder_ == null) {
          vertexes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          vertexesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * sequence number of transaction topological sort
       * the sequence number of the transaction topological sort associated with the transaction
       * </pre>
       *
       * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
       */
      public Builder removeVertexes(int index) {
        if (vertexesBuilder_ == null) {
          ensureVertexesIsMutable();
          vertexes_.remove(index);
          onChanged();
        } else {
          vertexesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * sequence number of transaction topological sort
       * the sequence number of the transaction topological sort associated with the transaction
       * </pre>
       *
       * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor.Builder getVertexesBuilder(
          int index) {
        return getVertexesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * sequence number of transaction topological sort
       * the sequence number of the transaction topological sort associated with the transaction
       * </pre>
       *
       * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.DAG.NeighborOrBuilder getVertexesOrBuilder(
          int index) {
        if (vertexesBuilder_ == null) {
          return vertexes_.get(index);  } else {
          return vertexesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * sequence number of transaction topological sort
       * the sequence number of the transaction topological sort associated with the transaction
       * </pre>
       *
       * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
       */
      public java.util.List<? extends org.chainmaker.pb.common.ChainmakerBlock.DAG.NeighborOrBuilder> 
           getVertexesOrBuilderList() {
        if (vertexesBuilder_ != null) {
          return vertexesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vertexes_);
        }
      }
      /**
       * <pre>
       * sequence number of transaction topological sort
       * the sequence number of the transaction topological sort associated with the transaction
       * </pre>
       *
       * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor.Builder addVertexesBuilder() {
        return getVertexesFieldBuilder().addBuilder(
            org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor.getDefaultInstance());
      }
      /**
       * <pre>
       * sequence number of transaction topological sort
       * the sequence number of the transaction topological sort associated with the transaction
       * </pre>
       *
       * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor.Builder addVertexesBuilder(
          int index) {
        return getVertexesFieldBuilder().addBuilder(
            index, org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor.getDefaultInstance());
      }
      /**
       * <pre>
       * sequence number of transaction topological sort
       * the sequence number of the transaction topological sort associated with the transaction
       * </pre>
       *
       * <code>repeated .common.DAG.Neighbor vertexes = 2;</code>
       */
      public java.util.List<org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor.Builder> 
           getVertexesBuilderList() {
        return getVertexesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor, org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor.Builder, org.chainmaker.pb.common.ChainmakerBlock.DAG.NeighborOrBuilder> 
          getVertexesFieldBuilder() {
        if (vertexesBuilder_ == null) {
          vertexesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor, org.chainmaker.pb.common.ChainmakerBlock.DAG.Neighbor.Builder, org.chainmaker.pb.common.ChainmakerBlock.DAG.NeighborOrBuilder>(
                  vertexes_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          vertexes_ = null;
        }
        return vertexesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:common.DAG)
    }

    // @@protoc_insertion_point(class_scope:common.DAG)
    private static final org.chainmaker.pb.common.ChainmakerBlock.DAG DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.common.ChainmakerBlock.DAG();
    }

    public static org.chainmaker.pb.common.ChainmakerBlock.DAG getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DAG>
        PARSER = new com.google.protobuf.AbstractParser<DAG>() {
      @java.lang.Override
      public DAG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DAG(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DAG> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DAG> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.DAG getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_common_Block_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_common_Block_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_common_BlockInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_common_BlockInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_common_AdditionalData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_common_AdditionalData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_common_AdditionalData_ExtraDataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_common_AdditionalData_ExtraDataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_common_BlockHeader_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_common_BlockHeader_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_common_DAG_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_common_DAG_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_common_DAG_Neighbor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_common_DAG_Neighbor_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022common/block.proto\022\006common\032\032accesscont" +
      "rol/member.proto\032\022common/rwset.proto\032\030co" +
      "mmon/transaction.proto\"\231\001\n\005Block\022#\n\006head" +
      "er\030\001 \001(\0132\023.common.BlockHeader\022\030\n\003dag\030\002 \001" +
      "(\0132\013.common.DAG\022 \n\003txs\030\003 \003(\0132\023.common.Tr" +
      "ansaction\022/\n\017additional_data\030\004 \001(\0132\026.com" +
      "mon.AdditionalData\"N\n\tBlockInfo\022\034\n\005block" +
      "\030\001 \001(\0132\r.common.Block\022#\n\nrwset_list\030\002 \003(" +
      "\0132\017.common.TxRWSet\"}\n\016AdditionalData\0229\n\n" +
      "extra_data\030\001 \003(\0132%.common.AdditionalData" +
      ".ExtraDataEntry\0320\n\016ExtraDataEntry\022\013\n\003key" +
      "\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\"\357\002\n\013BlockHeade" +
      "r\022\025\n\rblock_version\030\001 \001(\r\022%\n\nblock_type\030\002" +
      " \001(\0162\021.common.BlockType\022\020\n\010chain_id\030\003 \001(" +
      "\t\022\024\n\014block_height\030\004 \001(\004\022\022\n\nblock_hash\030\005 " +
      "\001(\014\022\026\n\016pre_block_hash\030\006 \001(\014\022\027\n\017pre_conf_" +
      "height\030\007 \001(\004\022\020\n\010tx_count\030\010 \001(\r\022\017\n\007tx_roo" +
      "t\030\t \001(\014\022\020\n\010dag_hash\030\n \001(\014\022\023\n\013rw_set_root" +
      "\030\013 \001(\014\022\027\n\017block_timestamp\030\014 \001(\003\022\026\n\016conse" +
      "nsus_args\030\r \001(\014\022\'\n\010proposer\030\016 \001(\0132\025.acce" +
      "sscontrol.Member\022\021\n\tsignature\030\017 \001(\014\"L\n\003D" +
      "AG\022&\n\010vertexes\030\002 \003(\0132\024.common.DAG.Neighb" +
      "or\032\035\n\010Neighbor\022\021\n\tneighbors\030\001 \003(\r*Y\n\tBlo" +
      "ckType\022\020\n\014NORMAL_BLOCK\020\000\022\020\n\014CONFIG_BLOCK" +
      "\020\001\022\026\n\022CONTRACT_MGR_BLOCK\020\002\022\020\n\014HAS_COINBA" +
      "SE\020\004BV\n\030org.chainmaker.pb.commonB\017Chainm" +
      "akerBlockZ)chainmaker.org/chainmaker/pb-" +
      "go/v2/commonb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.chainmaker.pb.accesscontrol.MemberOuterClass.getDescriptor(),
          org.chainmaker.pb.common.Rwset.getDescriptor(),
          org.chainmaker.pb.common.ChainmakerTransaction.getDescriptor(),
        });
    internal_static_common_Block_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_common_Block_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_common_Block_descriptor,
        new java.lang.String[] { "Header", "Dag", "Txs", "AdditionalData", });
    internal_static_common_BlockInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_common_BlockInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_common_BlockInfo_descriptor,
        new java.lang.String[] { "Block", "RwsetList", });
    internal_static_common_AdditionalData_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_common_AdditionalData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_common_AdditionalData_descriptor,
        new java.lang.String[] { "ExtraData", });
    internal_static_common_AdditionalData_ExtraDataEntry_descriptor =
      internal_static_common_AdditionalData_descriptor.getNestedTypes().get(0);
    internal_static_common_AdditionalData_ExtraDataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_common_AdditionalData_ExtraDataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_common_BlockHeader_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_common_BlockHeader_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_common_BlockHeader_descriptor,
        new java.lang.String[] { "BlockVersion", "BlockType", "ChainId", "BlockHeight", "BlockHash", "PreBlockHash", "PreConfHeight", "TxCount", "TxRoot", "DagHash", "RwSetRoot", "BlockTimestamp", "ConsensusArgs", "Proposer", "Signature", });
    internal_static_common_DAG_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_common_DAG_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_common_DAG_descriptor,
        new java.lang.String[] { "Vertexes", });
    internal_static_common_DAG_Neighbor_descriptor =
      internal_static_common_DAG_descriptor.getNestedTypes().get(0);
    internal_static_common_DAG_Neighbor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_common_DAG_Neighbor_descriptor,
        new java.lang.String[] { "Neighbors", });
    org.chainmaker.pb.accesscontrol.MemberOuterClass.getDescriptor();
    org.chainmaker.pb.common.Rwset.getDescriptor();
    org.chainmaker.pb.common.ChainmakerTransaction.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
