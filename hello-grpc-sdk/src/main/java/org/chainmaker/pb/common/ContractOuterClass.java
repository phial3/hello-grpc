// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/contract.proto

package org.chainmaker.pb.common;

public final class ContractOuterClass {
  private ContractOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * smart contract runtime, contains vm type and language type
   * </pre>
   *
   * Protobuf enum {@code common.RuntimeType}
   */
  public enum RuntimeType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>INVALID = 0;</code>
     */
    INVALID(0),
    /**
     * <pre>
     * native implement in chainmaker-go
     * </pre>
     *
     * <code>NATIVE = 1;</code>
     */
    NATIVE(1),
    /**
     * <pre>
     * vm-wasmer, language-c++
     * </pre>
     *
     * <code>WASMER = 2;</code>
     */
    WASMER(2),
    /**
     * <pre>
     * vm-wxvm, language-cpp
     * </pre>
     *
     * <code>WXVM = 3;</code>
     */
    WXVM(3),
    /**
     * <pre>
     * wasm interpreter in go
     * </pre>
     *
     * <code>GASM = 4;</code>
     */
    GASM(4),
    /**
     * <pre>
     * vm-evm
     * </pre>
     *
     * <code>EVM = 5;</code>
     */
    EVM(5),
    /**
     * <pre>
     * vm-docker, language-golang
     * </pre>
     *
     * <code>DOCKER_GO = 6;</code>
     */
    DOCKER_GO(6),
    /**
     * <pre>
     * vm-docker, language-java
     * </pre>
     *
     * <code>DOCKER_JAVA = 7;</code>
     */
    DOCKER_JAVA(7),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>INVALID = 0;</code>
     */
    public static final int INVALID_VALUE = 0;
    /**
     * <pre>
     * native implement in chainmaker-go
     * </pre>
     *
     * <code>NATIVE = 1;</code>
     */
    public static final int NATIVE_VALUE = 1;
    /**
     * <pre>
     * vm-wasmer, language-c++
     * </pre>
     *
     * <code>WASMER = 2;</code>
     */
    public static final int WASMER_VALUE = 2;
    /**
     * <pre>
     * vm-wxvm, language-cpp
     * </pre>
     *
     * <code>WXVM = 3;</code>
     */
    public static final int WXVM_VALUE = 3;
    /**
     * <pre>
     * wasm interpreter in go
     * </pre>
     *
     * <code>GASM = 4;</code>
     */
    public static final int GASM_VALUE = 4;
    /**
     * <pre>
     * vm-evm
     * </pre>
     *
     * <code>EVM = 5;</code>
     */
    public static final int EVM_VALUE = 5;
    /**
     * <pre>
     * vm-docker, language-golang
     * </pre>
     *
     * <code>DOCKER_GO = 6;</code>
     */
    public static final int DOCKER_GO_VALUE = 6;
    /**
     * <pre>
     * vm-docker, language-java
     * </pre>
     *
     * <code>DOCKER_JAVA = 7;</code>
     */
    public static final int DOCKER_JAVA_VALUE = 7;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RuntimeType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RuntimeType forNumber(int value) {
      switch (value) {
        case 0: return INVALID;
        case 1: return NATIVE;
        case 2: return WASMER;
        case 3: return WXVM;
        case 4: return GASM;
        case 5: return EVM;
        case 6: return DOCKER_GO;
        case 7: return DOCKER_JAVA;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RuntimeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RuntimeType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RuntimeType>() {
            public RuntimeType findValueByNumber(int number) {
              return RuntimeType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.chainmaker.pb.common.ContractOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final RuntimeType[] VALUES = values();

    public static RuntimeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RuntimeType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:common.RuntimeType)
  }

  /**
   * <pre>
   * current contract status
   * </pre>
   *
   * Protobuf enum {@code common.ContractStatus}
   */
  public enum ContractStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * normal, can be invoked
     * </pre>
     *
     * <code>NORMAL = 0;</code>
     */
    NORMAL(0),
    /**
     * <pre>
     * frozen, cannot be invoked temporarily
     * </pre>
     *
     * <code>FROZEN = 1;</code>
     */
    FROZEN(1),
    /**
     * <pre>
     * revoked, cannot be invoked permanently
     * </pre>
     *
     * <code>REVOKED = 2;</code>
     */
    REVOKED(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * normal, can be invoked
     * </pre>
     *
     * <code>NORMAL = 0;</code>
     */
    public static final int NORMAL_VALUE = 0;
    /**
     * <pre>
     * frozen, cannot be invoked temporarily
     * </pre>
     *
     * <code>FROZEN = 1;</code>
     */
    public static final int FROZEN_VALUE = 1;
    /**
     * <pre>
     * revoked, cannot be invoked permanently
     * </pre>
     *
     * <code>REVOKED = 2;</code>
     */
    public static final int REVOKED_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ContractStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ContractStatus forNumber(int value) {
      switch (value) {
        case 0: return NORMAL;
        case 1: return FROZEN;
        case 2: return REVOKED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ContractStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ContractStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ContractStatus>() {
            public ContractStatus findValueByNumber(int number) {
              return ContractStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.chainmaker.pb.common.ContractOuterClass.getDescriptor().getEnumTypes().get(1);
    }

    private static final ContractStatus[] VALUES = values();

    public static ContractStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ContractStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:common.ContractStatus)
  }

  public interface ContractOrBuilder extends
      // @@protoc_insertion_point(interface_extends:common.Contract)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * smart contract name, set by contract creator, can have multiple versions
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * smart contract name, set by contract creator, can have multiple versions
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * smart contract version, set by contract creator, name + version should be unique
     * </pre>
     *
     * <code>string version = 2;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * smart contract version, set by contract creator, name + version should be unique
     * </pre>
     *
     * <code>string version = 2;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * smart contract runtime type, set by contract creator
     * </pre>
     *
     * <code>.common.RuntimeType runtime_type = 3;</code>
     * @return The enum numeric value on the wire for runtimeType.
     */
    int getRuntimeTypeValue();
    /**
     * <pre>
     * smart contract runtime type, set by contract creator
     * </pre>
     *
     * <code>.common.RuntimeType runtime_type = 3;</code>
     * @return The runtimeType.
     */
    org.chainmaker.pb.common.ContractOuterClass.RuntimeType getRuntimeType();

    /**
     * <pre>
     *contract status
     * </pre>
     *
     * <code>.common.ContractStatus status = 4;</code>
     * @return The enum numeric value on the wire for status.
     */
    int getStatusValue();
    /**
     * <pre>
     *contract status
     * </pre>
     *
     * <code>.common.ContractStatus status = 4;</code>
     * @return The status.
     */
    org.chainmaker.pb.common.ContractOuterClass.ContractStatus getStatus();

    /**
     * <pre>
     *contract creator identity
     * </pre>
     *
     * <code>.accesscontrol.MemberFull creator = 5;</code>
     * @return Whether the creator field is set.
     */
    boolean hasCreator();
    /**
     * <pre>
     *contract creator identity
     * </pre>
     *
     * <code>.accesscontrol.MemberFull creator = 5;</code>
     * @return The creator.
     */
    org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFull getCreator();
    /**
     * <pre>
     *contract creator identity
     * </pre>
     *
     * <code>.accesscontrol.MemberFull creator = 5;</code>
     */
    org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFullOrBuilder getCreatorOrBuilder();
  }
  /**
   * Protobuf type {@code common.Contract}
   */
  public static final class Contract extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:common.Contract)
      ContractOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Contract.newBuilder() to construct.
    private Contract(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Contract() {
      name_ = "";
      version_ = "";
      runtimeType_ = 0;
      status_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Contract();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Contract(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              runtimeType_ = rawValue;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              status_ = rawValue;
              break;
            }
            case 42: {
              org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFull.Builder subBuilder = null;
              if (creator_ != null) {
                subBuilder = creator_.toBuilder();
              }
              creator_ = input.readMessage(org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFull.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(creator_);
                creator_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.common.ContractOuterClass.internal_static_common_Contract_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.common.ContractOuterClass.internal_static_common_Contract_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.common.ContractOuterClass.Contract.class, org.chainmaker.pb.common.ContractOuterClass.Contract.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * smart contract name, set by contract creator, can have multiple versions
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * smart contract name, set by contract creator, can have multiple versions
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 2;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * smart contract version, set by contract creator, name + version should be unique
     * </pre>
     *
     * <code>string version = 2;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * smart contract version, set by contract creator, name + version should be unique
     * </pre>
     *
     * <code>string version = 2;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RUNTIME_TYPE_FIELD_NUMBER = 3;
    private int runtimeType_;
    /**
     * <pre>
     * smart contract runtime type, set by contract creator
     * </pre>
     *
     * <code>.common.RuntimeType runtime_type = 3;</code>
     * @return The enum numeric value on the wire for runtimeType.
     */
    @java.lang.Override public int getRuntimeTypeValue() {
      return runtimeType_;
    }
    /**
     * <pre>
     * smart contract runtime type, set by contract creator
     * </pre>
     *
     * <code>.common.RuntimeType runtime_type = 3;</code>
     * @return The runtimeType.
     */
    @java.lang.Override public org.chainmaker.pb.common.ContractOuterClass.RuntimeType getRuntimeType() {
      @SuppressWarnings("deprecation")
      org.chainmaker.pb.common.ContractOuterClass.RuntimeType result = org.chainmaker.pb.common.ContractOuterClass.RuntimeType.valueOf(runtimeType_);
      return result == null ? org.chainmaker.pb.common.ContractOuterClass.RuntimeType.UNRECOGNIZED : result;
    }

    public static final int STATUS_FIELD_NUMBER = 4;
    private int status_;
    /**
     * <pre>
     *contract status
     * </pre>
     *
     * <code>.common.ContractStatus status = 4;</code>
     * @return The enum numeric value on the wire for status.
     */
    @java.lang.Override public int getStatusValue() {
      return status_;
    }
    /**
     * <pre>
     *contract status
     * </pre>
     *
     * <code>.common.ContractStatus status = 4;</code>
     * @return The status.
     */
    @java.lang.Override public org.chainmaker.pb.common.ContractOuterClass.ContractStatus getStatus() {
      @SuppressWarnings("deprecation")
      org.chainmaker.pb.common.ContractOuterClass.ContractStatus result = org.chainmaker.pb.common.ContractOuterClass.ContractStatus.valueOf(status_);
      return result == null ? org.chainmaker.pb.common.ContractOuterClass.ContractStatus.UNRECOGNIZED : result;
    }

    public static final int CREATOR_FIELD_NUMBER = 5;
    private org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFull creator_;
    /**
     * <pre>
     *contract creator identity
     * </pre>
     *
     * <code>.accesscontrol.MemberFull creator = 5;</code>
     * @return Whether the creator field is set.
     */
    @java.lang.Override
    public boolean hasCreator() {
      return creator_ != null;
    }
    /**
     * <pre>
     *contract creator identity
     * </pre>
     *
     * <code>.accesscontrol.MemberFull creator = 5;</code>
     * @return The creator.
     */
    @java.lang.Override
    public org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFull getCreator() {
      return creator_ == null ? org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFull.getDefaultInstance() : creator_;
    }
    /**
     * <pre>
     *contract creator identity
     * </pre>
     *
     * <code>.accesscontrol.MemberFull creator = 5;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFullOrBuilder getCreatorOrBuilder() {
      return getCreator();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(version_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, version_);
      }
      if (runtimeType_ != org.chainmaker.pb.common.ContractOuterClass.RuntimeType.INVALID.getNumber()) {
        output.writeEnum(3, runtimeType_);
      }
      if (status_ != org.chainmaker.pb.common.ContractOuterClass.ContractStatus.NORMAL.getNumber()) {
        output.writeEnum(4, status_);
      }
      if (creator_ != null) {
        output.writeMessage(5, getCreator());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(version_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, version_);
      }
      if (runtimeType_ != org.chainmaker.pb.common.ContractOuterClass.RuntimeType.INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, runtimeType_);
      }
      if (status_ != org.chainmaker.pb.common.ContractOuterClass.ContractStatus.NORMAL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, status_);
      }
      if (creator_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getCreator());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.common.ContractOuterClass.Contract)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.common.ContractOuterClass.Contract other = (org.chainmaker.pb.common.ContractOuterClass.Contract) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (runtimeType_ != other.runtimeType_) return false;
      if (status_ != other.status_) return false;
      if (hasCreator() != other.hasCreator()) return false;
      if (hasCreator()) {
        if (!getCreator()
            .equals(other.getCreator())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + RUNTIME_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + runtimeType_;
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + status_;
      if (hasCreator()) {
        hash = (37 * hash) + CREATOR_FIELD_NUMBER;
        hash = (53 * hash) + getCreator().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.common.ContractOuterClass.Contract parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ContractOuterClass.Contract parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ContractOuterClass.Contract parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ContractOuterClass.Contract parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ContractOuterClass.Contract parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.common.ContractOuterClass.Contract parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ContractOuterClass.Contract parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ContractOuterClass.Contract parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ContractOuterClass.Contract parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ContractOuterClass.Contract parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.common.ContractOuterClass.Contract parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.common.ContractOuterClass.Contract parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.common.ContractOuterClass.Contract prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code common.Contract}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:common.Contract)
        org.chainmaker.pb.common.ContractOuterClass.ContractOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.common.ContractOuterClass.internal_static_common_Contract_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.common.ContractOuterClass.internal_static_common_Contract_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.common.ContractOuterClass.Contract.class, org.chainmaker.pb.common.ContractOuterClass.Contract.Builder.class);
      }

      // Construct using org.chainmaker.pb.common.ContractOuterClass.Contract.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        version_ = "";

        runtimeType_ = 0;

        status_ = 0;

        if (creatorBuilder_ == null) {
          creator_ = null;
        } else {
          creator_ = null;
          creatorBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.common.ContractOuterClass.internal_static_common_Contract_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ContractOuterClass.Contract getDefaultInstanceForType() {
        return org.chainmaker.pb.common.ContractOuterClass.Contract.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ContractOuterClass.Contract build() {
        org.chainmaker.pb.common.ContractOuterClass.Contract result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.common.ContractOuterClass.Contract buildPartial() {
        org.chainmaker.pb.common.ContractOuterClass.Contract result = new org.chainmaker.pb.common.ContractOuterClass.Contract(this);
        result.name_ = name_;
        result.version_ = version_;
        result.runtimeType_ = runtimeType_;
        result.status_ = status_;
        if (creatorBuilder_ == null) {
          result.creator_ = creator_;
        } else {
          result.creator_ = creatorBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.common.ContractOuterClass.Contract) {
          return mergeFrom((org.chainmaker.pb.common.ContractOuterClass.Contract)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.common.ContractOuterClass.Contract other) {
        if (other == org.chainmaker.pb.common.ContractOuterClass.Contract.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (other.runtimeType_ != 0) {
          setRuntimeTypeValue(other.getRuntimeTypeValue());
        }
        if (other.status_ != 0) {
          setStatusValue(other.getStatusValue());
        }
        if (other.hasCreator()) {
          mergeCreator(other.getCreator());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.common.ContractOuterClass.Contract parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.common.ContractOuterClass.Contract) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * smart contract name, set by contract creator, can have multiple versions
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * smart contract name, set by contract creator, can have multiple versions
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * smart contract name, set by contract creator, can have multiple versions
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * smart contract name, set by contract creator, can have multiple versions
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * smart contract name, set by contract creator, can have multiple versions
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * smart contract version, set by contract creator, name + version should be unique
       * </pre>
       *
       * <code>string version = 2;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * smart contract version, set by contract creator, name + version should be unique
       * </pre>
       *
       * <code>string version = 2;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * smart contract version, set by contract creator, name + version should be unique
       * </pre>
       *
       * <code>string version = 2;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * smart contract version, set by contract creator, name + version should be unique
       * </pre>
       *
       * <code>string version = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * smart contract version, set by contract creator, name + version should be unique
       * </pre>
       *
       * <code>string version = 2;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private int runtimeType_ = 0;
      /**
       * <pre>
       * smart contract runtime type, set by contract creator
       * </pre>
       *
       * <code>.common.RuntimeType runtime_type = 3;</code>
       * @return The enum numeric value on the wire for runtimeType.
       */
      @java.lang.Override public int getRuntimeTypeValue() {
        return runtimeType_;
      }
      /**
       * <pre>
       * smart contract runtime type, set by contract creator
       * </pre>
       *
       * <code>.common.RuntimeType runtime_type = 3;</code>
       * @param value The enum numeric value on the wire for runtimeType to set.
       * @return This builder for chaining.
       */
      public Builder setRuntimeTypeValue(int value) {
        
        runtimeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * smart contract runtime type, set by contract creator
       * </pre>
       *
       * <code>.common.RuntimeType runtime_type = 3;</code>
       * @return The runtimeType.
       */
      @java.lang.Override
      public org.chainmaker.pb.common.ContractOuterClass.RuntimeType getRuntimeType() {
        @SuppressWarnings("deprecation")
        org.chainmaker.pb.common.ContractOuterClass.RuntimeType result = org.chainmaker.pb.common.ContractOuterClass.RuntimeType.valueOf(runtimeType_);
        return result == null ? org.chainmaker.pb.common.ContractOuterClass.RuntimeType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * smart contract runtime type, set by contract creator
       * </pre>
       *
       * <code>.common.RuntimeType runtime_type = 3;</code>
       * @param value The runtimeType to set.
       * @return This builder for chaining.
       */
      public Builder setRuntimeType(org.chainmaker.pb.common.ContractOuterClass.RuntimeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        runtimeType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * smart contract runtime type, set by contract creator
       * </pre>
       *
       * <code>.common.RuntimeType runtime_type = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRuntimeType() {
        
        runtimeType_ = 0;
        onChanged();
        return this;
      }

      private int status_ = 0;
      /**
       * <pre>
       *contract status
       * </pre>
       *
       * <code>.common.ContractStatus status = 4;</code>
       * @return The enum numeric value on the wire for status.
       */
      @java.lang.Override public int getStatusValue() {
        return status_;
      }
      /**
       * <pre>
       *contract status
       * </pre>
       *
       * <code>.common.ContractStatus status = 4;</code>
       * @param value The enum numeric value on the wire for status to set.
       * @return This builder for chaining.
       */
      public Builder setStatusValue(int value) {
        
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *contract status
       * </pre>
       *
       * <code>.common.ContractStatus status = 4;</code>
       * @return The status.
       */
      @java.lang.Override
      public org.chainmaker.pb.common.ContractOuterClass.ContractStatus getStatus() {
        @SuppressWarnings("deprecation")
        org.chainmaker.pb.common.ContractOuterClass.ContractStatus result = org.chainmaker.pb.common.ContractOuterClass.ContractStatus.valueOf(status_);
        return result == null ? org.chainmaker.pb.common.ContractOuterClass.ContractStatus.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *contract status
       * </pre>
       *
       * <code>.common.ContractStatus status = 4;</code>
       * @param value The status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(org.chainmaker.pb.common.ContractOuterClass.ContractStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        status_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *contract status
       * </pre>
       *
       * <code>.common.ContractStatus status = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        
        status_ = 0;
        onChanged();
        return this;
      }

      private org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFull creator_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFull, org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFull.Builder, org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFullOrBuilder> creatorBuilder_;
      /**
       * <pre>
       *contract creator identity
       * </pre>
       *
       * <code>.accesscontrol.MemberFull creator = 5;</code>
       * @return Whether the creator field is set.
       */
      public boolean hasCreator() {
        return creatorBuilder_ != null || creator_ != null;
      }
      /**
       * <pre>
       *contract creator identity
       * </pre>
       *
       * <code>.accesscontrol.MemberFull creator = 5;</code>
       * @return The creator.
       */
      public org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFull getCreator() {
        if (creatorBuilder_ == null) {
          return creator_ == null ? org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFull.getDefaultInstance() : creator_;
        } else {
          return creatorBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *contract creator identity
       * </pre>
       *
       * <code>.accesscontrol.MemberFull creator = 5;</code>
       */
      public Builder setCreator(org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFull value) {
        if (creatorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          creator_ = value;
          onChanged();
        } else {
          creatorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *contract creator identity
       * </pre>
       *
       * <code>.accesscontrol.MemberFull creator = 5;</code>
       */
      public Builder setCreator(
          org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFull.Builder builderForValue) {
        if (creatorBuilder_ == null) {
          creator_ = builderForValue.build();
          onChanged();
        } else {
          creatorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *contract creator identity
       * </pre>
       *
       * <code>.accesscontrol.MemberFull creator = 5;</code>
       */
      public Builder mergeCreator(org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFull value) {
        if (creatorBuilder_ == null) {
          if (creator_ != null) {
            creator_ =
              org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFull.newBuilder(creator_).mergeFrom(value).buildPartial();
          } else {
            creator_ = value;
          }
          onChanged();
        } else {
          creatorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *contract creator identity
       * </pre>
       *
       * <code>.accesscontrol.MemberFull creator = 5;</code>
       */
      public Builder clearCreator() {
        if (creatorBuilder_ == null) {
          creator_ = null;
          onChanged();
        } else {
          creator_ = null;
          creatorBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *contract creator identity
       * </pre>
       *
       * <code>.accesscontrol.MemberFull creator = 5;</code>
       */
      public org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFull.Builder getCreatorBuilder() {
        
        onChanged();
        return getCreatorFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *contract creator identity
       * </pre>
       *
       * <code>.accesscontrol.MemberFull creator = 5;</code>
       */
      public org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFullOrBuilder getCreatorOrBuilder() {
        if (creatorBuilder_ != null) {
          return creatorBuilder_.getMessageOrBuilder();
        } else {
          return creator_ == null ?
              org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFull.getDefaultInstance() : creator_;
        }
      }
      /**
       * <pre>
       *contract creator identity
       * </pre>
       *
       * <code>.accesscontrol.MemberFull creator = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFull, org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFull.Builder, org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFullOrBuilder> 
          getCreatorFieldBuilder() {
        if (creatorBuilder_ == null) {
          creatorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFull, org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFull.Builder, org.chainmaker.pb.accesscontrol.MemberOuterClass.MemberFullOrBuilder>(
                  getCreator(),
                  getParentForChildren(),
                  isClean());
          creator_ = null;
        }
        return creatorBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:common.Contract)
    }

    // @@protoc_insertion_point(class_scope:common.Contract)
    private static final org.chainmaker.pb.common.ContractOuterClass.Contract DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.common.ContractOuterClass.Contract();
    }

    public static org.chainmaker.pb.common.ContractOuterClass.Contract getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Contract>
        PARSER = new com.google.protobuf.AbstractParser<Contract>() {
      @java.lang.Override
      public Contract parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Contract(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Contract> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Contract> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.common.ContractOuterClass.Contract getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_common_Contract_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_common_Contract_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025common/contract.proto\022\006common\032\032accessc" +
      "ontrol/member.proto\"\250\001\n\010Contract\022\014\n\004name" +
      "\030\001 \001(\t\022\017\n\007version\030\002 \001(\t\022)\n\014runtime_type\030" +
      "\003 \001(\0162\023.common.RuntimeType\022&\n\006status\030\004 \001" +
      "(\0162\026.common.ContractStatus\022*\n\007creator\030\005 " +
      "\001(\0132\031.accesscontrol.MemberFull*o\n\013Runtim" +
      "eType\022\013\n\007INVALID\020\000\022\n\n\006NATIVE\020\001\022\n\n\006WASMER" +
      "\020\002\022\010\n\004WXVM\020\003\022\010\n\004GASM\020\004\022\007\n\003EVM\020\005\022\r\n\tDOCKE" +
      "R_GO\020\006\022\017\n\013DOCKER_JAVA\020\007*5\n\016ContractStatu" +
      "s\022\n\n\006NORMAL\020\000\022\n\n\006FROZEN\020\001\022\013\n\007REVOKED\020\002BE" +
      "\n\030org.chainmaker.pb.commonZ)chainmaker.o" +
      "rg/chainmaker/pb-go/v2/commonb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.chainmaker.pb.accesscontrol.MemberOuterClass.getDescriptor(),
        });
    internal_static_common_Contract_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_common_Contract_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_common_Contract_descriptor,
        new java.lang.String[] { "Name", "Version", "RuntimeType", "Status", "Creator", });
    org.chainmaker.pb.accesscontrol.MemberOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
