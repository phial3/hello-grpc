// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: consensus/maxbft/maxbft.proto

package org.chainmaker.pb.consensus.maxbft;

public final class Maxbft {
  private Maxbft() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * response status
   * </pre>
   *
   * Protobuf enum {@code maxbft.BlockFetchStatus}
   */
  public enum BlockFetchStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SUCCEEDED = 0;</code>
     */
    SUCCEEDED(0),
    /**
     * <code>NOT_ENOUGH_BLOCKS = 1;</code>
     */
    NOT_ENOUGH_BLOCKS(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>SUCCEEDED = 0;</code>
     */
    public static final int SUCCEEDED_VALUE = 0;
    /**
     * <code>NOT_ENOUGH_BLOCKS = 1;</code>
     */
    public static final int NOT_ENOUGH_BLOCKS_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BlockFetchStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BlockFetchStatus forNumber(int value) {
      switch (value) {
        case 0: return SUCCEEDED;
        case 1: return NOT_ENOUGH_BLOCKS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BlockFetchStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BlockFetchStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BlockFetchStatus>() {
            public BlockFetchStatus findValueByNumber(int number) {
              return BlockFetchStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.getDescriptor().getEnumTypes().get(0);
    }

    private static final BlockFetchStatus[] VALUES = values();

    public static BlockFetchStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BlockFetchStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxbft.BlockFetchStatus)
  }

  /**
   * Protobuf enum {@code maxbft.ConsStateType}
   */
  public enum ConsStateType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * new height
     * </pre>
     *
     * <code>NEW_HEIGHT = 0;</code>
     */
    NEW_HEIGHT(0),
    /**
     * <pre>
     * new level
     * </pre>
     *
     * <code>NEW_LEVEL = 1;</code>
     */
    NEW_LEVEL(1),
    /**
     * <pre>
     * propose
     * </pre>
     *
     * <code>PROPOSE = 2;</code>
     */
    PROPOSE(2),
    /**
     * <pre>
     * vote
     * </pre>
     *
     * <code>VOTE = 3;</code>
     */
    VOTE(3),
    /**
     * <pre>
     * pacemaker of the consensus
     * </pre>
     *
     * <code>PACEMAKER = 4;</code>
     */
    PACEMAKER(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * new height
     * </pre>
     *
     * <code>NEW_HEIGHT = 0;</code>
     */
    public static final int NEW_HEIGHT_VALUE = 0;
    /**
     * <pre>
     * new level
     * </pre>
     *
     * <code>NEW_LEVEL = 1;</code>
     */
    public static final int NEW_LEVEL_VALUE = 1;
    /**
     * <pre>
     * propose
     * </pre>
     *
     * <code>PROPOSE = 2;</code>
     */
    public static final int PROPOSE_VALUE = 2;
    /**
     * <pre>
     * vote
     * </pre>
     *
     * <code>VOTE = 3;</code>
     */
    public static final int VOTE_VALUE = 3;
    /**
     * <pre>
     * pacemaker of the consensus
     * </pre>
     *
     * <code>PACEMAKER = 4;</code>
     */
    public static final int PACEMAKER_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ConsStateType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ConsStateType forNumber(int value) {
      switch (value) {
        case 0: return NEW_HEIGHT;
        case 1: return NEW_LEVEL;
        case 2: return PROPOSE;
        case 3: return VOTE;
        case 4: return PACEMAKER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ConsStateType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ConsStateType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ConsStateType>() {
            public ConsStateType findValueByNumber(int number) {
              return ConsStateType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.getDescriptor().getEnumTypes().get(1);
    }

    private static final ConsStateType[] VALUES = values();

    public static ConsStateType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ConsStateType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxbft.ConsStateType)
  }

  /**
   * Protobuf enum {@code maxbft.MessageType}
   */
  public enum MessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PROPOSAL_MESSAGE = 0;</code>
     */
    PROPOSAL_MESSAGE(0),
    /**
     * <code>VOTE_MESSAGE = 1;</code>
     */
    VOTE_MESSAGE(1),
    /**
     * <code>BLOCK_FETCH_MESSAGE = 2;</code>
     */
    BLOCK_FETCH_MESSAGE(2),
    /**
     * <code>BLOCK_FETCH_RESP_MESSAGE = 3;</code>
     */
    BLOCK_FETCH_RESP_MESSAGE(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PROPOSAL_MESSAGE = 0;</code>
     */
    public static final int PROPOSAL_MESSAGE_VALUE = 0;
    /**
     * <code>VOTE_MESSAGE = 1;</code>
     */
    public static final int VOTE_MESSAGE_VALUE = 1;
    /**
     * <code>BLOCK_FETCH_MESSAGE = 2;</code>
     */
    public static final int BLOCK_FETCH_MESSAGE_VALUE = 2;
    /**
     * <code>BLOCK_FETCH_RESP_MESSAGE = 3;</code>
     */
    public static final int BLOCK_FETCH_RESP_MESSAGE_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MessageType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MessageType forNumber(int value) {
      switch (value) {
        case 0: return PROPOSAL_MESSAGE;
        case 1: return VOTE_MESSAGE;
        case 2: return BLOCK_FETCH_MESSAGE;
        case 3: return BLOCK_FETCH_RESP_MESSAGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MessageType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
            public MessageType findValueByNumber(int number) {
              return MessageType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.getDescriptor().getEnumTypes().get(2);
    }

    private static final MessageType[] VALUES = values();

    public static MessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MessageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxbft.MessageType)
  }

  public interface QuorumCertOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxbft.QuorumCert)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * block id of the qc block
     * </pre>
     *
     * <code>bytes block_id = 1;</code>
     * @return The blockId.
     */
    com.google.protobuf.ByteString getBlockId();

    /**
     * <pre>
     * block height of the qc block
     * </pre>
     *
     * <code>uint64 height = 2;</code>
     * @return The height.
     */
    long getHeight();

    /**
     * <pre>
     * consensus level of the qc block
     * </pre>
     *
     * <code>uint64 level = 3;</code>
     * @return The level.
     */
    long getLevel();

    /**
     * <pre>
     * Whether to vote timeout of the qc block
     * </pre>
     *
     * <code>bool new_view = 4;</code>
     * @return The newView.
     */
    boolean getNewView();

    /**
     * <pre>
     * the id of the epoch
     * </pre>
     *
     * <code>uint64 epoch_id = 5;</code>
     * @return The epochId.
     */
    long getEpochId();

    /**
     * <code>repeated .maxbft.VoteData votes = 6;</code>
     */
    java.util.List<org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData> 
        getVotesList();
    /**
     * <code>repeated .maxbft.VoteData votes = 6;</code>
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData getVotes(int index);
    /**
     * <code>repeated .maxbft.VoteData votes = 6;</code>
     */
    int getVotesCount();
    /**
     * <code>repeated .maxbft.VoteData votes = 6;</code>
     */
    java.util.List<? extends org.chainmaker.pb.consensus.maxbft.Maxbft.VoteDataOrBuilder> 
        getVotesOrBuilderList();
    /**
     * <code>repeated .maxbft.VoteData votes = 6;</code>
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.VoteDataOrBuilder getVotesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code maxbft.QuorumCert}
   */
  public static final class QuorumCert extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:maxbft.QuorumCert)
      QuorumCertOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use QuorumCert.newBuilder() to construct.
    private QuorumCert(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private QuorumCert() {
      blockId_ = com.google.protobuf.ByteString.EMPTY;
      votes_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new QuorumCert();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private QuorumCert(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              blockId_ = input.readBytes();
              break;
            }
            case 16: {

              height_ = input.readUInt64();
              break;
            }
            case 24: {

              level_ = input.readUInt64();
              break;
            }
            case 32: {

              newView_ = input.readBool();
              break;
            }
            case 40: {

              epochId_ = input.readUInt64();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                votes_ = new java.util.ArrayList<org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData>();
                mutable_bitField0_ |= 0x00000001;
              }
              votes_.add(
                  input.readMessage(org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          votes_ = java.util.Collections.unmodifiableList(votes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_QuorumCert_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_QuorumCert_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.class, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder.class);
    }

    public static final int BLOCK_ID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString blockId_;
    /**
     * <pre>
     * block id of the qc block
     * </pre>
     *
     * <code>bytes block_id = 1;</code>
     * @return The blockId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBlockId() {
      return blockId_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 2;
    private long height_;
    /**
     * <pre>
     * block height of the qc block
     * </pre>
     *
     * <code>uint64 height = 2;</code>
     * @return The height.
     */
    @java.lang.Override
    public long getHeight() {
      return height_;
    }

    public static final int LEVEL_FIELD_NUMBER = 3;
    private long level_;
    /**
     * <pre>
     * consensus level of the qc block
     * </pre>
     *
     * <code>uint64 level = 3;</code>
     * @return The level.
     */
    @java.lang.Override
    public long getLevel() {
      return level_;
    }

    public static final int NEW_VIEW_FIELD_NUMBER = 4;
    private boolean newView_;
    /**
     * <pre>
     * Whether to vote timeout of the qc block
     * </pre>
     *
     * <code>bool new_view = 4;</code>
     * @return The newView.
     */
    @java.lang.Override
    public boolean getNewView() {
      return newView_;
    }

    public static final int EPOCH_ID_FIELD_NUMBER = 5;
    private long epochId_;
    /**
     * <pre>
     * the id of the epoch
     * </pre>
     *
     * <code>uint64 epoch_id = 5;</code>
     * @return The epochId.
     */
    @java.lang.Override
    public long getEpochId() {
      return epochId_;
    }

    public static final int VOTES_FIELD_NUMBER = 6;
    private java.util.List<org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData> votes_;
    /**
     * <code>repeated .maxbft.VoteData votes = 6;</code>
     */
    @java.lang.Override
    public java.util.List<org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData> getVotesList() {
      return votes_;
    }
    /**
     * <code>repeated .maxbft.VoteData votes = 6;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.chainmaker.pb.consensus.maxbft.Maxbft.VoteDataOrBuilder> 
        getVotesOrBuilderList() {
      return votes_;
    }
    /**
     * <code>repeated .maxbft.VoteData votes = 6;</code>
     */
    @java.lang.Override
    public int getVotesCount() {
      return votes_.size();
    }
    /**
     * <code>repeated .maxbft.VoteData votes = 6;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData getVotes(int index) {
      return votes_.get(index);
    }
    /**
     * <code>repeated .maxbft.VoteData votes = 6;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteDataOrBuilder getVotesOrBuilder(
        int index) {
      return votes_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!blockId_.isEmpty()) {
        output.writeBytes(1, blockId_);
      }
      if (height_ != 0L) {
        output.writeUInt64(2, height_);
      }
      if (level_ != 0L) {
        output.writeUInt64(3, level_);
      }
      if (newView_ != false) {
        output.writeBool(4, newView_);
      }
      if (epochId_ != 0L) {
        output.writeUInt64(5, epochId_);
      }
      for (int i = 0; i < votes_.size(); i++) {
        output.writeMessage(6, votes_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!blockId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, blockId_);
      }
      if (height_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, height_);
      }
      if (level_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, level_);
      }
      if (newView_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, newView_);
      }
      if (epochId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, epochId_);
      }
      for (int i = 0; i < votes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, votes_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert other = (org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert) obj;

      if (!getBlockId()
          .equals(other.getBlockId())) return false;
      if (getHeight()
          != other.getHeight()) return false;
      if (getLevel()
          != other.getLevel()) return false;
      if (getNewView()
          != other.getNewView()) return false;
      if (getEpochId()
          != other.getEpochId()) return false;
      if (!getVotesList()
          .equals(other.getVotesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BLOCK_ID_FIELD_NUMBER;
      hash = (53 * hash) + getBlockId().hashCode();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHeight());
      hash = (37 * hash) + LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLevel());
      hash = (37 * hash) + NEW_VIEW_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getNewView());
      hash = (37 * hash) + EPOCH_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEpochId());
      if (getVotesCount() > 0) {
        hash = (37 * hash) + VOTES_FIELD_NUMBER;
        hash = (53 * hash) + getVotesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxbft.QuorumCert}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxbft.QuorumCert)
        org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_QuorumCert_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_QuorumCert_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.class, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder.class);
      }

      // Construct using org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getVotesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        blockId_ = com.google.protobuf.ByteString.EMPTY;

        height_ = 0L;

        level_ = 0L;

        newView_ = false;

        epochId_ = 0L;

        if (votesBuilder_ == null) {
          votes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          votesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_QuorumCert_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert getDefaultInstanceForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert build() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert buildPartial() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert result = new org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert(this);
        int from_bitField0_ = bitField0_;
        result.blockId_ = blockId_;
        result.height_ = height_;
        result.level_ = level_;
        result.newView_ = newView_;
        result.epochId_ = epochId_;
        if (votesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            votes_ = java.util.Collections.unmodifiableList(votes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.votes_ = votes_;
        } else {
          result.votes_ = votesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert) {
          return mergeFrom((org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert other) {
        if (other == org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.getDefaultInstance()) return this;
        if (other.getBlockId() != com.google.protobuf.ByteString.EMPTY) {
          setBlockId(other.getBlockId());
        }
        if (other.getHeight() != 0L) {
          setHeight(other.getHeight());
        }
        if (other.getLevel() != 0L) {
          setLevel(other.getLevel());
        }
        if (other.getNewView() != false) {
          setNewView(other.getNewView());
        }
        if (other.getEpochId() != 0L) {
          setEpochId(other.getEpochId());
        }
        if (votesBuilder_ == null) {
          if (!other.votes_.isEmpty()) {
            if (votes_.isEmpty()) {
              votes_ = other.votes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVotesIsMutable();
              votes_.addAll(other.votes_);
            }
            onChanged();
          }
        } else {
          if (!other.votes_.isEmpty()) {
            if (votesBuilder_.isEmpty()) {
              votesBuilder_.dispose();
              votesBuilder_ = null;
              votes_ = other.votes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              votesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getVotesFieldBuilder() : null;
            } else {
              votesBuilder_.addAllMessages(other.votes_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString blockId_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * block id of the qc block
       * </pre>
       *
       * <code>bytes block_id = 1;</code>
       * @return The blockId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBlockId() {
        return blockId_;
      }
      /**
       * <pre>
       * block id of the qc block
       * </pre>
       *
       * <code>bytes block_id = 1;</code>
       * @param value The blockId to set.
       * @return This builder for chaining.
       */
      public Builder setBlockId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        blockId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * block id of the qc block
       * </pre>
       *
       * <code>bytes block_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockId() {
        
        blockId_ = getDefaultInstance().getBlockId();
        onChanged();
        return this;
      }

      private long height_ ;
      /**
       * <pre>
       * block height of the qc block
       * </pre>
       *
       * <code>uint64 height = 2;</code>
       * @return The height.
       */
      @java.lang.Override
      public long getHeight() {
        return height_;
      }
      /**
       * <pre>
       * block height of the qc block
       * </pre>
       *
       * <code>uint64 height = 2;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(long value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * block height of the qc block
       * </pre>
       *
       * <code>uint64 height = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        
        height_ = 0L;
        onChanged();
        return this;
      }

      private long level_ ;
      /**
       * <pre>
       * consensus level of the qc block
       * </pre>
       *
       * <code>uint64 level = 3;</code>
       * @return The level.
       */
      @java.lang.Override
      public long getLevel() {
        return level_;
      }
      /**
       * <pre>
       * consensus level of the qc block
       * </pre>
       *
       * <code>uint64 level = 3;</code>
       * @param value The level to set.
       * @return This builder for chaining.
       */
      public Builder setLevel(long value) {
        
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * consensus level of the qc block
       * </pre>
       *
       * <code>uint64 level = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLevel() {
        
        level_ = 0L;
        onChanged();
        return this;
      }

      private boolean newView_ ;
      /**
       * <pre>
       * Whether to vote timeout of the qc block
       * </pre>
       *
       * <code>bool new_view = 4;</code>
       * @return The newView.
       */
      @java.lang.Override
      public boolean getNewView() {
        return newView_;
      }
      /**
       * <pre>
       * Whether to vote timeout of the qc block
       * </pre>
       *
       * <code>bool new_view = 4;</code>
       * @param value The newView to set.
       * @return This builder for chaining.
       */
      public Builder setNewView(boolean value) {
        
        newView_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether to vote timeout of the qc block
       * </pre>
       *
       * <code>bool new_view = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearNewView() {
        
        newView_ = false;
        onChanged();
        return this;
      }

      private long epochId_ ;
      /**
       * <pre>
       * the id of the epoch
       * </pre>
       *
       * <code>uint64 epoch_id = 5;</code>
       * @return The epochId.
       */
      @java.lang.Override
      public long getEpochId() {
        return epochId_;
      }
      /**
       * <pre>
       * the id of the epoch
       * </pre>
       *
       * <code>uint64 epoch_id = 5;</code>
       * @param value The epochId to set.
       * @return This builder for chaining.
       */
      public Builder setEpochId(long value) {
        
        epochId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the id of the epoch
       * </pre>
       *
       * <code>uint64 epoch_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearEpochId() {
        
        epochId_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData> votes_ =
        java.util.Collections.emptyList();
      private void ensureVotesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          votes_ = new java.util.ArrayList<org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData>(votes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteDataOrBuilder> votesBuilder_;

      /**
       * <code>repeated .maxbft.VoteData votes = 6;</code>
       */
      public java.util.List<org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData> getVotesList() {
        if (votesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(votes_);
        } else {
          return votesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maxbft.VoteData votes = 6;</code>
       */
      public int getVotesCount() {
        if (votesBuilder_ == null) {
          return votes_.size();
        } else {
          return votesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maxbft.VoteData votes = 6;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData getVotes(int index) {
        if (votesBuilder_ == null) {
          return votes_.get(index);
        } else {
          return votesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maxbft.VoteData votes = 6;</code>
       */
      public Builder setVotes(
          int index, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData value) {
        if (votesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVotesIsMutable();
          votes_.set(index, value);
          onChanged();
        } else {
          votesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxbft.VoteData votes = 6;</code>
       */
      public Builder setVotes(
          int index, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.Builder builderForValue) {
        if (votesBuilder_ == null) {
          ensureVotesIsMutable();
          votes_.set(index, builderForValue.build());
          onChanged();
        } else {
          votesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxbft.VoteData votes = 6;</code>
       */
      public Builder addVotes(org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData value) {
        if (votesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVotesIsMutable();
          votes_.add(value);
          onChanged();
        } else {
          votesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maxbft.VoteData votes = 6;</code>
       */
      public Builder addVotes(
          int index, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData value) {
        if (votesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVotesIsMutable();
          votes_.add(index, value);
          onChanged();
        } else {
          votesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxbft.VoteData votes = 6;</code>
       */
      public Builder addVotes(
          org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.Builder builderForValue) {
        if (votesBuilder_ == null) {
          ensureVotesIsMutable();
          votes_.add(builderForValue.build());
          onChanged();
        } else {
          votesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxbft.VoteData votes = 6;</code>
       */
      public Builder addVotes(
          int index, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.Builder builderForValue) {
        if (votesBuilder_ == null) {
          ensureVotesIsMutable();
          votes_.add(index, builderForValue.build());
          onChanged();
        } else {
          votesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxbft.VoteData votes = 6;</code>
       */
      public Builder addAllVotes(
          java.lang.Iterable<? extends org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData> values) {
        if (votesBuilder_ == null) {
          ensureVotesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, votes_);
          onChanged();
        } else {
          votesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maxbft.VoteData votes = 6;</code>
       */
      public Builder clearVotes() {
        if (votesBuilder_ == null) {
          votes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          votesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maxbft.VoteData votes = 6;</code>
       */
      public Builder removeVotes(int index) {
        if (votesBuilder_ == null) {
          ensureVotesIsMutable();
          votes_.remove(index);
          onChanged();
        } else {
          votesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maxbft.VoteData votes = 6;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.Builder getVotesBuilder(
          int index) {
        return getVotesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maxbft.VoteData votes = 6;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteDataOrBuilder getVotesOrBuilder(
          int index) {
        if (votesBuilder_ == null) {
          return votes_.get(index);  } else {
          return votesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maxbft.VoteData votes = 6;</code>
       */
      public java.util.List<? extends org.chainmaker.pb.consensus.maxbft.Maxbft.VoteDataOrBuilder> 
           getVotesOrBuilderList() {
        if (votesBuilder_ != null) {
          return votesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(votes_);
        }
      }
      /**
       * <code>repeated .maxbft.VoteData votes = 6;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.Builder addVotesBuilder() {
        return getVotesFieldBuilder().addBuilder(
            org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.getDefaultInstance());
      }
      /**
       * <code>repeated .maxbft.VoteData votes = 6;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.Builder addVotesBuilder(
          int index) {
        return getVotesFieldBuilder().addBuilder(
            index, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.getDefaultInstance());
      }
      /**
       * <code>repeated .maxbft.VoteData votes = 6;</code>
       */
      public java.util.List<org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.Builder> 
           getVotesBuilderList() {
        return getVotesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteDataOrBuilder> 
          getVotesFieldBuilder() {
        if (votesBuilder_ == null) {
          votesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteDataOrBuilder>(
                  votes_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          votes_ = null;
        }
        return votesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:maxbft.QuorumCert)
    }

    // @@protoc_insertion_point(class_scope:maxbft.QuorumCert)
    private static final org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert();
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<QuorumCert>
        PARSER = new com.google.protobuf.AbstractParser<QuorumCert>() {
      @java.lang.Override
      public QuorumCert parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new QuorumCert(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<QuorumCert> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<QuorumCert> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConsensusInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxbft.ConsensusInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * block's qc info
     * </pre>
     *
     * <code>.maxbft.QuorumCert qc = 1;</code>
     * @return Whether the qc field is set.
     */
    boolean hasQc();
    /**
     * <pre>
     * block's qc info
     * </pre>
     *
     * <code>.maxbft.QuorumCert qc = 1;</code>
     * @return The qc.
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert getQc();
    /**
     * <pre>
     * block's qc info
     * </pre>
     *
     * <code>.maxbft.QuorumCert qc = 1;</code>
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder getQcOrBuilder();
  }
  /**
   * Protobuf type {@code maxbft.ConsensusInfo}
   */
  public static final class ConsensusInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:maxbft.ConsensusInfo)
      ConsensusInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConsensusInfo.newBuilder() to construct.
    private ConsensusInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConsensusInfo() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ConsensusInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConsensusInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder subBuilder = null;
              if (qc_ != null) {
                subBuilder = qc_.toBuilder();
              }
              qc_ = input.readMessage(org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(qc_);
                qc_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ConsensusInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ConsensusInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo.class, org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo.Builder.class);
    }

    public static final int QC_FIELD_NUMBER = 1;
    private org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert qc_;
    /**
     * <pre>
     * block's qc info
     * </pre>
     *
     * <code>.maxbft.QuorumCert qc = 1;</code>
     * @return Whether the qc field is set.
     */
    @java.lang.Override
    public boolean hasQc() {
      return qc_ != null;
    }
    /**
     * <pre>
     * block's qc info
     * </pre>
     *
     * <code>.maxbft.QuorumCert qc = 1;</code>
     * @return The qc.
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert getQc() {
      return qc_ == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.getDefaultInstance() : qc_;
    }
    /**
     * <pre>
     * block's qc info
     * </pre>
     *
     * <code>.maxbft.QuorumCert qc = 1;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder getQcOrBuilder() {
      return getQc();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (qc_ != null) {
        output.writeMessage(1, getQc());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (qc_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getQc());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo other = (org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo) obj;

      if (hasQc() != other.hasQc()) return false;
      if (hasQc()) {
        if (!getQc()
            .equals(other.getQc())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasQc()) {
        hash = (37 * hash) + QC_FIELD_NUMBER;
        hash = (53 * hash) + getQc().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxbft.ConsensusInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxbft.ConsensusInfo)
        org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ConsensusInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ConsensusInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo.class, org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo.Builder.class);
      }

      // Construct using org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (qcBuilder_ == null) {
          qc_ = null;
        } else {
          qc_ = null;
          qcBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ConsensusInfo_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo getDefaultInstanceForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo build() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo buildPartial() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo result = new org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo(this);
        if (qcBuilder_ == null) {
          result.qc_ = qc_;
        } else {
          result.qc_ = qcBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo) {
          return mergeFrom((org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo other) {
        if (other == org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo.getDefaultInstance()) return this;
        if (other.hasQc()) {
          mergeQc(other.getQc());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert qc_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder> qcBuilder_;
      /**
       * <pre>
       * block's qc info
       * </pre>
       *
       * <code>.maxbft.QuorumCert qc = 1;</code>
       * @return Whether the qc field is set.
       */
      public boolean hasQc() {
        return qcBuilder_ != null || qc_ != null;
      }
      /**
       * <pre>
       * block's qc info
       * </pre>
       *
       * <code>.maxbft.QuorumCert qc = 1;</code>
       * @return The qc.
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert getQc() {
        if (qcBuilder_ == null) {
          return qc_ == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.getDefaultInstance() : qc_;
        } else {
          return qcBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * block's qc info
       * </pre>
       *
       * <code>.maxbft.QuorumCert qc = 1;</code>
       */
      public Builder setQc(org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert value) {
        if (qcBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          qc_ = value;
          onChanged();
        } else {
          qcBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * block's qc info
       * </pre>
       *
       * <code>.maxbft.QuorumCert qc = 1;</code>
       */
      public Builder setQc(
          org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder builderForValue) {
        if (qcBuilder_ == null) {
          qc_ = builderForValue.build();
          onChanged();
        } else {
          qcBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * block's qc info
       * </pre>
       *
       * <code>.maxbft.QuorumCert qc = 1;</code>
       */
      public Builder mergeQc(org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert value) {
        if (qcBuilder_ == null) {
          if (qc_ != null) {
            qc_ =
              org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.newBuilder(qc_).mergeFrom(value).buildPartial();
          } else {
            qc_ = value;
          }
          onChanged();
        } else {
          qcBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * block's qc info
       * </pre>
       *
       * <code>.maxbft.QuorumCert qc = 1;</code>
       */
      public Builder clearQc() {
        if (qcBuilder_ == null) {
          qc_ = null;
          onChanged();
        } else {
          qc_ = null;
          qcBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * block's qc info
       * </pre>
       *
       * <code>.maxbft.QuorumCert qc = 1;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder getQcBuilder() {
        
        onChanged();
        return getQcFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * block's qc info
       * </pre>
       *
       * <code>.maxbft.QuorumCert qc = 1;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder getQcOrBuilder() {
        if (qcBuilder_ != null) {
          return qcBuilder_.getMessageOrBuilder();
        } else {
          return qc_ == null ?
              org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.getDefaultInstance() : qc_;
        }
      }
      /**
       * <pre>
       * block's qc info
       * </pre>
       *
       * <code>.maxbft.QuorumCert qc = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder> 
          getQcFieldBuilder() {
        if (qcBuilder_ == null) {
          qcBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder>(
                  getQc(),
                  getParentForChildren(),
                  isClean());
          qc_ = null;
        }
        return qcBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:maxbft.ConsensusInfo)
    }

    // @@protoc_insertion_point(class_scope:maxbft.ConsensusInfo)
    private static final org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo();
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConsensusInfo>
        PARSER = new com.google.protobuf.AbstractParser<ConsensusInfo>() {
      @java.lang.Override
      public ConsensusInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConsensusInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConsensusInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConsensusInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SyncInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxbft.SyncInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * highest qc of the vote node
     * </pre>
     *
     * <code>.maxbft.QuorumCert highest_qc = 1;</code>
     * @return Whether the highestQc field is set.
     */
    boolean hasHighestQc();
    /**
     * <pre>
     * highest qc of the vote node
     * </pre>
     *
     * <code>.maxbft.QuorumCert highest_qc = 1;</code>
     * @return The highestQc.
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert getHighestQc();
    /**
     * <pre>
     * highest qc of the vote node
     * </pre>
     *
     * <code>.maxbft.QuorumCert highest_qc = 1;</code>
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder getHighestQcOrBuilder();

    /**
     * <pre>
     * highest tc of the vote node
     * </pre>
     *
     * <code>.maxbft.QuorumCert highest_tc = 2;</code>
     * @return Whether the highestTc field is set.
     */
    boolean hasHighestTc();
    /**
     * <pre>
     * highest tc of the vote node
     * </pre>
     *
     * <code>.maxbft.QuorumCert highest_tc = 2;</code>
     * @return The highestTc.
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert getHighestTc();
    /**
     * <pre>
     * highest tc of the vote node
     * </pre>
     *
     * <code>.maxbft.QuorumCert highest_tc = 2;</code>
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder getHighestTcOrBuilder();

    /**
     * <pre>
     * Latest timeout consensus level
     * </pre>
     *
     * <code>uint64 highest_tc_level = 3;</code>
     * @return The highestTcLevel.
     */
    long getHighestTcLevel();
  }
  /**
   * Protobuf type {@code maxbft.SyncInfo}
   */
  public static final class SyncInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:maxbft.SyncInfo)
      SyncInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SyncInfo.newBuilder() to construct.
    private SyncInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SyncInfo() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SyncInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SyncInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder subBuilder = null;
              if (highestQc_ != null) {
                subBuilder = highestQc_.toBuilder();
              }
              highestQc_ = input.readMessage(org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(highestQc_);
                highestQc_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder subBuilder = null;
              if (highestTc_ != null) {
                subBuilder = highestTc_.toBuilder();
              }
              highestTc_ = input.readMessage(org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(highestTc_);
                highestTc_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              highestTcLevel_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_SyncInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_SyncInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.class, org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.Builder.class);
    }

    public static final int HIGHEST_QC_FIELD_NUMBER = 1;
    private org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert highestQc_;
    /**
     * <pre>
     * highest qc of the vote node
     * </pre>
     *
     * <code>.maxbft.QuorumCert highest_qc = 1;</code>
     * @return Whether the highestQc field is set.
     */
    @java.lang.Override
    public boolean hasHighestQc() {
      return highestQc_ != null;
    }
    /**
     * <pre>
     * highest qc of the vote node
     * </pre>
     *
     * <code>.maxbft.QuorumCert highest_qc = 1;</code>
     * @return The highestQc.
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert getHighestQc() {
      return highestQc_ == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.getDefaultInstance() : highestQc_;
    }
    /**
     * <pre>
     * highest qc of the vote node
     * </pre>
     *
     * <code>.maxbft.QuorumCert highest_qc = 1;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder getHighestQcOrBuilder() {
      return getHighestQc();
    }

    public static final int HIGHEST_TC_FIELD_NUMBER = 2;
    private org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert highestTc_;
    /**
     * <pre>
     * highest tc of the vote node
     * </pre>
     *
     * <code>.maxbft.QuorumCert highest_tc = 2;</code>
     * @return Whether the highestTc field is set.
     */
    @java.lang.Override
    public boolean hasHighestTc() {
      return highestTc_ != null;
    }
    /**
     * <pre>
     * highest tc of the vote node
     * </pre>
     *
     * <code>.maxbft.QuorumCert highest_tc = 2;</code>
     * @return The highestTc.
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert getHighestTc() {
      return highestTc_ == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.getDefaultInstance() : highestTc_;
    }
    /**
     * <pre>
     * highest tc of the vote node
     * </pre>
     *
     * <code>.maxbft.QuorumCert highest_tc = 2;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder getHighestTcOrBuilder() {
      return getHighestTc();
    }

    public static final int HIGHEST_TC_LEVEL_FIELD_NUMBER = 3;
    private long highestTcLevel_;
    /**
     * <pre>
     * Latest timeout consensus level
     * </pre>
     *
     * <code>uint64 highest_tc_level = 3;</code>
     * @return The highestTcLevel.
     */
    @java.lang.Override
    public long getHighestTcLevel() {
      return highestTcLevel_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (highestQc_ != null) {
        output.writeMessage(1, getHighestQc());
      }
      if (highestTc_ != null) {
        output.writeMessage(2, getHighestTc());
      }
      if (highestTcLevel_ != 0L) {
        output.writeUInt64(3, highestTcLevel_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (highestQc_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHighestQc());
      }
      if (highestTc_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getHighestTc());
      }
      if (highestTcLevel_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, highestTcLevel_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo other = (org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo) obj;

      if (hasHighestQc() != other.hasHighestQc()) return false;
      if (hasHighestQc()) {
        if (!getHighestQc()
            .equals(other.getHighestQc())) return false;
      }
      if (hasHighestTc() != other.hasHighestTc()) return false;
      if (hasHighestTc()) {
        if (!getHighestTc()
            .equals(other.getHighestTc())) return false;
      }
      if (getHighestTcLevel()
          != other.getHighestTcLevel()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHighestQc()) {
        hash = (37 * hash) + HIGHEST_QC_FIELD_NUMBER;
        hash = (53 * hash) + getHighestQc().hashCode();
      }
      if (hasHighestTc()) {
        hash = (37 * hash) + HIGHEST_TC_FIELD_NUMBER;
        hash = (53 * hash) + getHighestTc().hashCode();
      }
      hash = (37 * hash) + HIGHEST_TC_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHighestTcLevel());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxbft.SyncInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxbft.SyncInfo)
        org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_SyncInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_SyncInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.class, org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.Builder.class);
      }

      // Construct using org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (highestQcBuilder_ == null) {
          highestQc_ = null;
        } else {
          highestQc_ = null;
          highestQcBuilder_ = null;
        }
        if (highestTcBuilder_ == null) {
          highestTc_ = null;
        } else {
          highestTc_ = null;
          highestTcBuilder_ = null;
        }
        highestTcLevel_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_SyncInfo_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo getDefaultInstanceForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo build() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo buildPartial() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo result = new org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo(this);
        if (highestQcBuilder_ == null) {
          result.highestQc_ = highestQc_;
        } else {
          result.highestQc_ = highestQcBuilder_.build();
        }
        if (highestTcBuilder_ == null) {
          result.highestTc_ = highestTc_;
        } else {
          result.highestTc_ = highestTcBuilder_.build();
        }
        result.highestTcLevel_ = highestTcLevel_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo) {
          return mergeFrom((org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo other) {
        if (other == org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.getDefaultInstance()) return this;
        if (other.hasHighestQc()) {
          mergeHighestQc(other.getHighestQc());
        }
        if (other.hasHighestTc()) {
          mergeHighestTc(other.getHighestTc());
        }
        if (other.getHighestTcLevel() != 0L) {
          setHighestTcLevel(other.getHighestTcLevel());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert highestQc_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder> highestQcBuilder_;
      /**
       * <pre>
       * highest qc of the vote node
       * </pre>
       *
       * <code>.maxbft.QuorumCert highest_qc = 1;</code>
       * @return Whether the highestQc field is set.
       */
      public boolean hasHighestQc() {
        return highestQcBuilder_ != null || highestQc_ != null;
      }
      /**
       * <pre>
       * highest qc of the vote node
       * </pre>
       *
       * <code>.maxbft.QuorumCert highest_qc = 1;</code>
       * @return The highestQc.
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert getHighestQc() {
        if (highestQcBuilder_ == null) {
          return highestQc_ == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.getDefaultInstance() : highestQc_;
        } else {
          return highestQcBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * highest qc of the vote node
       * </pre>
       *
       * <code>.maxbft.QuorumCert highest_qc = 1;</code>
       */
      public Builder setHighestQc(org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert value) {
        if (highestQcBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          highestQc_ = value;
          onChanged();
        } else {
          highestQcBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * highest qc of the vote node
       * </pre>
       *
       * <code>.maxbft.QuorumCert highest_qc = 1;</code>
       */
      public Builder setHighestQc(
          org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder builderForValue) {
        if (highestQcBuilder_ == null) {
          highestQc_ = builderForValue.build();
          onChanged();
        } else {
          highestQcBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * highest qc of the vote node
       * </pre>
       *
       * <code>.maxbft.QuorumCert highest_qc = 1;</code>
       */
      public Builder mergeHighestQc(org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert value) {
        if (highestQcBuilder_ == null) {
          if (highestQc_ != null) {
            highestQc_ =
              org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.newBuilder(highestQc_).mergeFrom(value).buildPartial();
          } else {
            highestQc_ = value;
          }
          onChanged();
        } else {
          highestQcBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * highest qc of the vote node
       * </pre>
       *
       * <code>.maxbft.QuorumCert highest_qc = 1;</code>
       */
      public Builder clearHighestQc() {
        if (highestQcBuilder_ == null) {
          highestQc_ = null;
          onChanged();
        } else {
          highestQc_ = null;
          highestQcBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * highest qc of the vote node
       * </pre>
       *
       * <code>.maxbft.QuorumCert highest_qc = 1;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder getHighestQcBuilder() {
        
        onChanged();
        return getHighestQcFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * highest qc of the vote node
       * </pre>
       *
       * <code>.maxbft.QuorumCert highest_qc = 1;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder getHighestQcOrBuilder() {
        if (highestQcBuilder_ != null) {
          return highestQcBuilder_.getMessageOrBuilder();
        } else {
          return highestQc_ == null ?
              org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.getDefaultInstance() : highestQc_;
        }
      }
      /**
       * <pre>
       * highest qc of the vote node
       * </pre>
       *
       * <code>.maxbft.QuorumCert highest_qc = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder> 
          getHighestQcFieldBuilder() {
        if (highestQcBuilder_ == null) {
          highestQcBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder>(
                  getHighestQc(),
                  getParentForChildren(),
                  isClean());
          highestQc_ = null;
        }
        return highestQcBuilder_;
      }

      private org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert highestTc_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder> highestTcBuilder_;
      /**
       * <pre>
       * highest tc of the vote node
       * </pre>
       *
       * <code>.maxbft.QuorumCert highest_tc = 2;</code>
       * @return Whether the highestTc field is set.
       */
      public boolean hasHighestTc() {
        return highestTcBuilder_ != null || highestTc_ != null;
      }
      /**
       * <pre>
       * highest tc of the vote node
       * </pre>
       *
       * <code>.maxbft.QuorumCert highest_tc = 2;</code>
       * @return The highestTc.
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert getHighestTc() {
        if (highestTcBuilder_ == null) {
          return highestTc_ == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.getDefaultInstance() : highestTc_;
        } else {
          return highestTcBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * highest tc of the vote node
       * </pre>
       *
       * <code>.maxbft.QuorumCert highest_tc = 2;</code>
       */
      public Builder setHighestTc(org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert value) {
        if (highestTcBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          highestTc_ = value;
          onChanged();
        } else {
          highestTcBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * highest tc of the vote node
       * </pre>
       *
       * <code>.maxbft.QuorumCert highest_tc = 2;</code>
       */
      public Builder setHighestTc(
          org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder builderForValue) {
        if (highestTcBuilder_ == null) {
          highestTc_ = builderForValue.build();
          onChanged();
        } else {
          highestTcBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * highest tc of the vote node
       * </pre>
       *
       * <code>.maxbft.QuorumCert highest_tc = 2;</code>
       */
      public Builder mergeHighestTc(org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert value) {
        if (highestTcBuilder_ == null) {
          if (highestTc_ != null) {
            highestTc_ =
              org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.newBuilder(highestTc_).mergeFrom(value).buildPartial();
          } else {
            highestTc_ = value;
          }
          onChanged();
        } else {
          highestTcBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * highest tc of the vote node
       * </pre>
       *
       * <code>.maxbft.QuorumCert highest_tc = 2;</code>
       */
      public Builder clearHighestTc() {
        if (highestTcBuilder_ == null) {
          highestTc_ = null;
          onChanged();
        } else {
          highestTc_ = null;
          highestTcBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * highest tc of the vote node
       * </pre>
       *
       * <code>.maxbft.QuorumCert highest_tc = 2;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder getHighestTcBuilder() {
        
        onChanged();
        return getHighestTcFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * highest tc of the vote node
       * </pre>
       *
       * <code>.maxbft.QuorumCert highest_tc = 2;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder getHighestTcOrBuilder() {
        if (highestTcBuilder_ != null) {
          return highestTcBuilder_.getMessageOrBuilder();
        } else {
          return highestTc_ == null ?
              org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.getDefaultInstance() : highestTc_;
        }
      }
      /**
       * <pre>
       * highest tc of the vote node
       * </pre>
       *
       * <code>.maxbft.QuorumCert highest_tc = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder> 
          getHighestTcFieldBuilder() {
        if (highestTcBuilder_ == null) {
          highestTcBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder>(
                  getHighestTc(),
                  getParentForChildren(),
                  isClean());
          highestTc_ = null;
        }
        return highestTcBuilder_;
      }

      private long highestTcLevel_ ;
      /**
       * <pre>
       * Latest timeout consensus level
       * </pre>
       *
       * <code>uint64 highest_tc_level = 3;</code>
       * @return The highestTcLevel.
       */
      @java.lang.Override
      public long getHighestTcLevel() {
        return highestTcLevel_;
      }
      /**
       * <pre>
       * Latest timeout consensus level
       * </pre>
       *
       * <code>uint64 highest_tc_level = 3;</code>
       * @param value The highestTcLevel to set.
       * @return This builder for chaining.
       */
      public Builder setHighestTcLevel(long value) {
        
        highestTcLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Latest timeout consensus level
       * </pre>
       *
       * <code>uint64 highest_tc_level = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearHighestTcLevel() {
        
        highestTcLevel_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:maxbft.SyncInfo)
    }

    // @@protoc_insertion_point(class_scope:maxbft.SyncInfo)
    private static final org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo();
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SyncInfo>
        PARSER = new com.google.protobuf.AbstractParser<SyncInfo>() {
      @java.lang.Override
      public SyncInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SyncInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SyncInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SyncInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProposalDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxbft.ProposalData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * block info of the proposal
     * </pre>
     *
     * <code>.common.Block block = 1;</code>
     * @return Whether the block field is set.
     */
    boolean hasBlock();
    /**
     * <pre>
     * block info of the proposal
     * </pre>
     *
     * <code>.common.Block block = 1;</code>
     * @return The block.
     */
    org.chainmaker.pb.common.ChainmakerBlock.Block getBlock();
    /**
     * <pre>
     * block info of the proposal
     * </pre>
     *
     * <code>.common.Block block = 1;</code>
     */
    org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder getBlockOrBuilder();

    /**
     * <pre>
     * height of the proposal
     * </pre>
     *
     * <code>uint64 height = 2;</code>
     * @return The height.
     */
    long getHeight();

    /**
     * <pre>
     * consensus level of the proposal
     * </pre>
     *
     * <code>uint64 level = 3;</code>
     * @return The level.
     */
    long getLevel();

    /**
     * <pre>
     * proposer of the proposal
     * </pre>
     *
     * <code>bytes proposer = 4;</code>
     * @return The proposer.
     */
    com.google.protobuf.ByteString getProposer();

    /**
     * <pre>
     * index of the proposer in consensus nodes
     * </pre>
     *
     * <code>uint64 proposer_idx = 5;</code>
     * @return The proposerIdx.
     */
    long getProposerIdx();

    /**
     * <pre>
     * the id of the epoch
     * </pre>
     *
     * <code>uint64 epoch_id = 6;</code>
     * @return The epochId.
     */
    long getEpochId();

    /**
     * <pre>
     * the qc info of the parent's block in the proposal
     * </pre>
     *
     * <code>.maxbft.QuorumCert justify_qc = 7;</code>
     * @return Whether the justifyQc field is set.
     */
    boolean hasJustifyQc();
    /**
     * <pre>
     * the qc info of the parent's block in the proposal
     * </pre>
     *
     * <code>.maxbft.QuorumCert justify_qc = 7;</code>
     * @return The justifyQc.
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert getJustifyQc();
    /**
     * <pre>
     * the qc info of the parent's block in the proposal
     * </pre>
     *
     * <code>.maxbft.QuorumCert justify_qc = 7;</code>
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder getJustifyQcOrBuilder();
  }
  /**
   * Protobuf type {@code maxbft.ProposalData}
   */
  public static final class ProposalData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:maxbft.ProposalData)
      ProposalDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProposalData.newBuilder() to construct.
    private ProposalData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProposalData() {
      proposer_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProposalData();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ProposalData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.chainmaker.pb.common.ChainmakerBlock.Block.Builder subBuilder = null;
              if (block_ != null) {
                subBuilder = block_.toBuilder();
              }
              block_ = input.readMessage(org.chainmaker.pb.common.ChainmakerBlock.Block.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(block_);
                block_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              height_ = input.readUInt64();
              break;
            }
            case 24: {

              level_ = input.readUInt64();
              break;
            }
            case 34: {

              proposer_ = input.readBytes();
              break;
            }
            case 40: {

              proposerIdx_ = input.readUInt64();
              break;
            }
            case 48: {

              epochId_ = input.readUInt64();
              break;
            }
            case 58: {
              org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder subBuilder = null;
              if (justifyQc_ != null) {
                subBuilder = justifyQc_.toBuilder();
              }
              justifyQc_ = input.readMessage(org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(justifyQc_);
                justifyQc_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ProposalData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ProposalData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData.class, org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData.Builder.class);
    }

    public static final int BLOCK_FIELD_NUMBER = 1;
    private org.chainmaker.pb.common.ChainmakerBlock.Block block_;
    /**
     * <pre>
     * block info of the proposal
     * </pre>
     *
     * <code>.common.Block block = 1;</code>
     * @return Whether the block field is set.
     */
    @java.lang.Override
    public boolean hasBlock() {
      return block_ != null;
    }
    /**
     * <pre>
     * block info of the proposal
     * </pre>
     *
     * <code>.common.Block block = 1;</code>
     * @return The block.
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.Block getBlock() {
      return block_ == null ? org.chainmaker.pb.common.ChainmakerBlock.Block.getDefaultInstance() : block_;
    }
    /**
     * <pre>
     * block info of the proposal
     * </pre>
     *
     * <code>.common.Block block = 1;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder getBlockOrBuilder() {
      return getBlock();
    }

    public static final int HEIGHT_FIELD_NUMBER = 2;
    private long height_;
    /**
     * <pre>
     * height of the proposal
     * </pre>
     *
     * <code>uint64 height = 2;</code>
     * @return The height.
     */
    @java.lang.Override
    public long getHeight() {
      return height_;
    }

    public static final int LEVEL_FIELD_NUMBER = 3;
    private long level_;
    /**
     * <pre>
     * consensus level of the proposal
     * </pre>
     *
     * <code>uint64 level = 3;</code>
     * @return The level.
     */
    @java.lang.Override
    public long getLevel() {
      return level_;
    }

    public static final int PROPOSER_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString proposer_;
    /**
     * <pre>
     * proposer of the proposal
     * </pre>
     *
     * <code>bytes proposer = 4;</code>
     * @return The proposer.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getProposer() {
      return proposer_;
    }

    public static final int PROPOSER_IDX_FIELD_NUMBER = 5;
    private long proposerIdx_;
    /**
     * <pre>
     * index of the proposer in consensus nodes
     * </pre>
     *
     * <code>uint64 proposer_idx = 5;</code>
     * @return The proposerIdx.
     */
    @java.lang.Override
    public long getProposerIdx() {
      return proposerIdx_;
    }

    public static final int EPOCH_ID_FIELD_NUMBER = 6;
    private long epochId_;
    /**
     * <pre>
     * the id of the epoch
     * </pre>
     *
     * <code>uint64 epoch_id = 6;</code>
     * @return The epochId.
     */
    @java.lang.Override
    public long getEpochId() {
      return epochId_;
    }

    public static final int JUSTIFY_QC_FIELD_NUMBER = 7;
    private org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert justifyQc_;
    /**
     * <pre>
     * the qc info of the parent's block in the proposal
     * </pre>
     *
     * <code>.maxbft.QuorumCert justify_qc = 7;</code>
     * @return Whether the justifyQc field is set.
     */
    @java.lang.Override
    public boolean hasJustifyQc() {
      return justifyQc_ != null;
    }
    /**
     * <pre>
     * the qc info of the parent's block in the proposal
     * </pre>
     *
     * <code>.maxbft.QuorumCert justify_qc = 7;</code>
     * @return The justifyQc.
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert getJustifyQc() {
      return justifyQc_ == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.getDefaultInstance() : justifyQc_;
    }
    /**
     * <pre>
     * the qc info of the parent's block in the proposal
     * </pre>
     *
     * <code>.maxbft.QuorumCert justify_qc = 7;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder getJustifyQcOrBuilder() {
      return getJustifyQc();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (block_ != null) {
        output.writeMessage(1, getBlock());
      }
      if (height_ != 0L) {
        output.writeUInt64(2, height_);
      }
      if (level_ != 0L) {
        output.writeUInt64(3, level_);
      }
      if (!proposer_.isEmpty()) {
        output.writeBytes(4, proposer_);
      }
      if (proposerIdx_ != 0L) {
        output.writeUInt64(5, proposerIdx_);
      }
      if (epochId_ != 0L) {
        output.writeUInt64(6, epochId_);
      }
      if (justifyQc_ != null) {
        output.writeMessage(7, getJustifyQc());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (block_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBlock());
      }
      if (height_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, height_);
      }
      if (level_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, level_);
      }
      if (!proposer_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, proposer_);
      }
      if (proposerIdx_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, proposerIdx_);
      }
      if (epochId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, epochId_);
      }
      if (justifyQc_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getJustifyQc());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData other = (org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData) obj;

      if (hasBlock() != other.hasBlock()) return false;
      if (hasBlock()) {
        if (!getBlock()
            .equals(other.getBlock())) return false;
      }
      if (getHeight()
          != other.getHeight()) return false;
      if (getLevel()
          != other.getLevel()) return false;
      if (!getProposer()
          .equals(other.getProposer())) return false;
      if (getProposerIdx()
          != other.getProposerIdx()) return false;
      if (getEpochId()
          != other.getEpochId()) return false;
      if (hasJustifyQc() != other.hasJustifyQc()) return false;
      if (hasJustifyQc()) {
        if (!getJustifyQc()
            .equals(other.getJustifyQc())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBlock()) {
        hash = (37 * hash) + BLOCK_FIELD_NUMBER;
        hash = (53 * hash) + getBlock().hashCode();
      }
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHeight());
      hash = (37 * hash) + LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLevel());
      hash = (37 * hash) + PROPOSER_FIELD_NUMBER;
      hash = (53 * hash) + getProposer().hashCode();
      hash = (37 * hash) + PROPOSER_IDX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getProposerIdx());
      hash = (37 * hash) + EPOCH_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEpochId());
      if (hasJustifyQc()) {
        hash = (37 * hash) + JUSTIFY_QC_FIELD_NUMBER;
        hash = (53 * hash) + getJustifyQc().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxbft.ProposalData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxbft.ProposalData)
        org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ProposalData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ProposalData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData.class, org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData.Builder.class);
      }

      // Construct using org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (blockBuilder_ == null) {
          block_ = null;
        } else {
          block_ = null;
          blockBuilder_ = null;
        }
        height_ = 0L;

        level_ = 0L;

        proposer_ = com.google.protobuf.ByteString.EMPTY;

        proposerIdx_ = 0L;

        epochId_ = 0L;

        if (justifyQcBuilder_ == null) {
          justifyQc_ = null;
        } else {
          justifyQc_ = null;
          justifyQcBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ProposalData_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData getDefaultInstanceForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData build() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData buildPartial() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData result = new org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData(this);
        if (blockBuilder_ == null) {
          result.block_ = block_;
        } else {
          result.block_ = blockBuilder_.build();
        }
        result.height_ = height_;
        result.level_ = level_;
        result.proposer_ = proposer_;
        result.proposerIdx_ = proposerIdx_;
        result.epochId_ = epochId_;
        if (justifyQcBuilder_ == null) {
          result.justifyQc_ = justifyQc_;
        } else {
          result.justifyQc_ = justifyQcBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData) {
          return mergeFrom((org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData other) {
        if (other == org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData.getDefaultInstance()) return this;
        if (other.hasBlock()) {
          mergeBlock(other.getBlock());
        }
        if (other.getHeight() != 0L) {
          setHeight(other.getHeight());
        }
        if (other.getLevel() != 0L) {
          setLevel(other.getLevel());
        }
        if (other.getProposer() != com.google.protobuf.ByteString.EMPTY) {
          setProposer(other.getProposer());
        }
        if (other.getProposerIdx() != 0L) {
          setProposerIdx(other.getProposerIdx());
        }
        if (other.getEpochId() != 0L) {
          setEpochId(other.getEpochId());
        }
        if (other.hasJustifyQc()) {
          mergeJustifyQc(other.getJustifyQc());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.chainmaker.pb.common.ChainmakerBlock.Block block_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.Block, org.chainmaker.pb.common.ChainmakerBlock.Block.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder> blockBuilder_;
      /**
       * <pre>
       * block info of the proposal
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       * @return Whether the block field is set.
       */
      public boolean hasBlock() {
        return blockBuilder_ != null || block_ != null;
      }
      /**
       * <pre>
       * block info of the proposal
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       * @return The block.
       */
      public org.chainmaker.pb.common.ChainmakerBlock.Block getBlock() {
        if (blockBuilder_ == null) {
          return block_ == null ? org.chainmaker.pb.common.ChainmakerBlock.Block.getDefaultInstance() : block_;
        } else {
          return blockBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * block info of the proposal
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       */
      public Builder setBlock(org.chainmaker.pb.common.ChainmakerBlock.Block value) {
        if (blockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          block_ = value;
          onChanged();
        } else {
          blockBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * block info of the proposal
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       */
      public Builder setBlock(
          org.chainmaker.pb.common.ChainmakerBlock.Block.Builder builderForValue) {
        if (blockBuilder_ == null) {
          block_ = builderForValue.build();
          onChanged();
        } else {
          blockBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * block info of the proposal
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       */
      public Builder mergeBlock(org.chainmaker.pb.common.ChainmakerBlock.Block value) {
        if (blockBuilder_ == null) {
          if (block_ != null) {
            block_ =
              org.chainmaker.pb.common.ChainmakerBlock.Block.newBuilder(block_).mergeFrom(value).buildPartial();
          } else {
            block_ = value;
          }
          onChanged();
        } else {
          blockBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * block info of the proposal
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       */
      public Builder clearBlock() {
        if (blockBuilder_ == null) {
          block_ = null;
          onChanged();
        } else {
          block_ = null;
          blockBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * block info of the proposal
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.Block.Builder getBlockBuilder() {
        
        onChanged();
        return getBlockFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * block info of the proposal
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder getBlockOrBuilder() {
        if (blockBuilder_ != null) {
          return blockBuilder_.getMessageOrBuilder();
        } else {
          return block_ == null ?
              org.chainmaker.pb.common.ChainmakerBlock.Block.getDefaultInstance() : block_;
        }
      }
      /**
       * <pre>
       * block info of the proposal
       * </pre>
       *
       * <code>.common.Block block = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.Block, org.chainmaker.pb.common.ChainmakerBlock.Block.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder> 
          getBlockFieldBuilder() {
        if (blockBuilder_ == null) {
          blockBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.common.ChainmakerBlock.Block, org.chainmaker.pb.common.ChainmakerBlock.Block.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder>(
                  getBlock(),
                  getParentForChildren(),
                  isClean());
          block_ = null;
        }
        return blockBuilder_;
      }

      private long height_ ;
      /**
       * <pre>
       * height of the proposal
       * </pre>
       *
       * <code>uint64 height = 2;</code>
       * @return The height.
       */
      @java.lang.Override
      public long getHeight() {
        return height_;
      }
      /**
       * <pre>
       * height of the proposal
       * </pre>
       *
       * <code>uint64 height = 2;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(long value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * height of the proposal
       * </pre>
       *
       * <code>uint64 height = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        
        height_ = 0L;
        onChanged();
        return this;
      }

      private long level_ ;
      /**
       * <pre>
       * consensus level of the proposal
       * </pre>
       *
       * <code>uint64 level = 3;</code>
       * @return The level.
       */
      @java.lang.Override
      public long getLevel() {
        return level_;
      }
      /**
       * <pre>
       * consensus level of the proposal
       * </pre>
       *
       * <code>uint64 level = 3;</code>
       * @param value The level to set.
       * @return This builder for chaining.
       */
      public Builder setLevel(long value) {
        
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * consensus level of the proposal
       * </pre>
       *
       * <code>uint64 level = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLevel() {
        
        level_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString proposer_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * proposer of the proposal
       * </pre>
       *
       * <code>bytes proposer = 4;</code>
       * @return The proposer.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getProposer() {
        return proposer_;
      }
      /**
       * <pre>
       * proposer of the proposal
       * </pre>
       *
       * <code>bytes proposer = 4;</code>
       * @param value The proposer to set.
       * @return This builder for chaining.
       */
      public Builder setProposer(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        proposer_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proposer of the proposal
       * </pre>
       *
       * <code>bytes proposer = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearProposer() {
        
        proposer_ = getDefaultInstance().getProposer();
        onChanged();
        return this;
      }

      private long proposerIdx_ ;
      /**
       * <pre>
       * index of the proposer in consensus nodes
       * </pre>
       *
       * <code>uint64 proposer_idx = 5;</code>
       * @return The proposerIdx.
       */
      @java.lang.Override
      public long getProposerIdx() {
        return proposerIdx_;
      }
      /**
       * <pre>
       * index of the proposer in consensus nodes
       * </pre>
       *
       * <code>uint64 proposer_idx = 5;</code>
       * @param value The proposerIdx to set.
       * @return This builder for chaining.
       */
      public Builder setProposerIdx(long value) {
        
        proposerIdx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * index of the proposer in consensus nodes
       * </pre>
       *
       * <code>uint64 proposer_idx = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearProposerIdx() {
        
        proposerIdx_ = 0L;
        onChanged();
        return this;
      }

      private long epochId_ ;
      /**
       * <pre>
       * the id of the epoch
       * </pre>
       *
       * <code>uint64 epoch_id = 6;</code>
       * @return The epochId.
       */
      @java.lang.Override
      public long getEpochId() {
        return epochId_;
      }
      /**
       * <pre>
       * the id of the epoch
       * </pre>
       *
       * <code>uint64 epoch_id = 6;</code>
       * @param value The epochId to set.
       * @return This builder for chaining.
       */
      public Builder setEpochId(long value) {
        
        epochId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the id of the epoch
       * </pre>
       *
       * <code>uint64 epoch_id = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearEpochId() {
        
        epochId_ = 0L;
        onChanged();
        return this;
      }

      private org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert justifyQc_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder> justifyQcBuilder_;
      /**
       * <pre>
       * the qc info of the parent's block in the proposal
       * </pre>
       *
       * <code>.maxbft.QuorumCert justify_qc = 7;</code>
       * @return Whether the justifyQc field is set.
       */
      public boolean hasJustifyQc() {
        return justifyQcBuilder_ != null || justifyQc_ != null;
      }
      /**
       * <pre>
       * the qc info of the parent's block in the proposal
       * </pre>
       *
       * <code>.maxbft.QuorumCert justify_qc = 7;</code>
       * @return The justifyQc.
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert getJustifyQc() {
        if (justifyQcBuilder_ == null) {
          return justifyQc_ == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.getDefaultInstance() : justifyQc_;
        } else {
          return justifyQcBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * the qc info of the parent's block in the proposal
       * </pre>
       *
       * <code>.maxbft.QuorumCert justify_qc = 7;</code>
       */
      public Builder setJustifyQc(org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert value) {
        if (justifyQcBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          justifyQc_ = value;
          onChanged();
        } else {
          justifyQcBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * the qc info of the parent's block in the proposal
       * </pre>
       *
       * <code>.maxbft.QuorumCert justify_qc = 7;</code>
       */
      public Builder setJustifyQc(
          org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder builderForValue) {
        if (justifyQcBuilder_ == null) {
          justifyQc_ = builderForValue.build();
          onChanged();
        } else {
          justifyQcBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * the qc info of the parent's block in the proposal
       * </pre>
       *
       * <code>.maxbft.QuorumCert justify_qc = 7;</code>
       */
      public Builder mergeJustifyQc(org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert value) {
        if (justifyQcBuilder_ == null) {
          if (justifyQc_ != null) {
            justifyQc_ =
              org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.newBuilder(justifyQc_).mergeFrom(value).buildPartial();
          } else {
            justifyQc_ = value;
          }
          onChanged();
        } else {
          justifyQcBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * the qc info of the parent's block in the proposal
       * </pre>
       *
       * <code>.maxbft.QuorumCert justify_qc = 7;</code>
       */
      public Builder clearJustifyQc() {
        if (justifyQcBuilder_ == null) {
          justifyQc_ = null;
          onChanged();
        } else {
          justifyQc_ = null;
          justifyQcBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * the qc info of the parent's block in the proposal
       * </pre>
       *
       * <code>.maxbft.QuorumCert justify_qc = 7;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder getJustifyQcBuilder() {
        
        onChanged();
        return getJustifyQcFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * the qc info of the parent's block in the proposal
       * </pre>
       *
       * <code>.maxbft.QuorumCert justify_qc = 7;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder getJustifyQcOrBuilder() {
        if (justifyQcBuilder_ != null) {
          return justifyQcBuilder_.getMessageOrBuilder();
        } else {
          return justifyQc_ == null ?
              org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.getDefaultInstance() : justifyQc_;
        }
      }
      /**
       * <pre>
       * the qc info of the parent's block in the proposal
       * </pre>
       *
       * <code>.maxbft.QuorumCert justify_qc = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder> 
          getJustifyQcFieldBuilder() {
        if (justifyQcBuilder_ == null) {
          justifyQcBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder>(
                  getJustifyQc(),
                  getParentForChildren(),
                  isClean());
          justifyQc_ = null;
        }
        return justifyQcBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:maxbft.ProposalData)
    }

    // @@protoc_insertion_point(class_scope:maxbft.ProposalData)
    private static final org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData();
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProposalData>
        PARSER = new com.google.protobuf.AbstractParser<ProposalData>() {
      @java.lang.Override
      public ProposalData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProposalData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ProposalData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProposalData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProposalMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxbft.ProposalMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * proposal data
     * </pre>
     *
     * <code>.maxbft.ProposalData proposal_data = 1;</code>
     * @return Whether the proposalData field is set.
     */
    boolean hasProposalData();
    /**
     * <pre>
     * proposal data
     * </pre>
     *
     * <code>.maxbft.ProposalData proposal_data = 1;</code>
     * @return The proposalData.
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData getProposalData();
    /**
     * <pre>
     * proposal data
     * </pre>
     *
     * <code>.maxbft.ProposalData proposal_data = 1;</code>
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalDataOrBuilder getProposalDataOrBuilder();

    /**
     * <pre>
     * qc info of the propose node
     * </pre>
     *
     * <code>.maxbft.SyncInfo sync_info = 2;</code>
     * @return Whether the syncInfo field is set.
     */
    boolean hasSyncInfo();
    /**
     * <pre>
     * qc info of the propose node
     * </pre>
     *
     * <code>.maxbft.SyncInfo sync_info = 2;</code>
     * @return The syncInfo.
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo getSyncInfo();
    /**
     * <pre>
     * qc info of the propose node
     * </pre>
     *
     * <code>.maxbft.SyncInfo sync_info = 2;</code>
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfoOrBuilder getSyncInfoOrBuilder();
  }
  /**
   * Protobuf type {@code maxbft.ProposalMsg}
   */
  public static final class ProposalMsg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:maxbft.ProposalMsg)
      ProposalMsgOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProposalMsg.newBuilder() to construct.
    private ProposalMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProposalMsg() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProposalMsg();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ProposalMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData.Builder subBuilder = null;
              if (proposalData_ != null) {
                subBuilder = proposalData_.toBuilder();
              }
              proposalData_ = input.readMessage(org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(proposalData_);
                proposalData_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.Builder subBuilder = null;
              if (syncInfo_ != null) {
                subBuilder = syncInfo_.toBuilder();
              }
              syncInfo_ = input.readMessage(org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(syncInfo_);
                syncInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ProposalMsg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ProposalMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg.class, org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg.Builder.class);
    }

    public static final int PROPOSAL_DATA_FIELD_NUMBER = 1;
    private org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData proposalData_;
    /**
     * <pre>
     * proposal data
     * </pre>
     *
     * <code>.maxbft.ProposalData proposal_data = 1;</code>
     * @return Whether the proposalData field is set.
     */
    @java.lang.Override
    public boolean hasProposalData() {
      return proposalData_ != null;
    }
    /**
     * <pre>
     * proposal data
     * </pre>
     *
     * <code>.maxbft.ProposalData proposal_data = 1;</code>
     * @return The proposalData.
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData getProposalData() {
      return proposalData_ == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData.getDefaultInstance() : proposalData_;
    }
    /**
     * <pre>
     * proposal data
     * </pre>
     *
     * <code>.maxbft.ProposalData proposal_data = 1;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalDataOrBuilder getProposalDataOrBuilder() {
      return getProposalData();
    }

    public static final int SYNC_INFO_FIELD_NUMBER = 2;
    private org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo syncInfo_;
    /**
     * <pre>
     * qc info of the propose node
     * </pre>
     *
     * <code>.maxbft.SyncInfo sync_info = 2;</code>
     * @return Whether the syncInfo field is set.
     */
    @java.lang.Override
    public boolean hasSyncInfo() {
      return syncInfo_ != null;
    }
    /**
     * <pre>
     * qc info of the propose node
     * </pre>
     *
     * <code>.maxbft.SyncInfo sync_info = 2;</code>
     * @return The syncInfo.
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo getSyncInfo() {
      return syncInfo_ == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.getDefaultInstance() : syncInfo_;
    }
    /**
     * <pre>
     * qc info of the propose node
     * </pre>
     *
     * <code>.maxbft.SyncInfo sync_info = 2;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfoOrBuilder getSyncInfoOrBuilder() {
      return getSyncInfo();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (proposalData_ != null) {
        output.writeMessage(1, getProposalData());
      }
      if (syncInfo_ != null) {
        output.writeMessage(2, getSyncInfo());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (proposalData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getProposalData());
      }
      if (syncInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSyncInfo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg other = (org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg) obj;

      if (hasProposalData() != other.hasProposalData()) return false;
      if (hasProposalData()) {
        if (!getProposalData()
            .equals(other.getProposalData())) return false;
      }
      if (hasSyncInfo() != other.hasSyncInfo()) return false;
      if (hasSyncInfo()) {
        if (!getSyncInfo()
            .equals(other.getSyncInfo())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasProposalData()) {
        hash = (37 * hash) + PROPOSAL_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getProposalData().hashCode();
      }
      if (hasSyncInfo()) {
        hash = (37 * hash) + SYNC_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getSyncInfo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxbft.ProposalMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxbft.ProposalMsg)
        org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ProposalMsg_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ProposalMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg.class, org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg.Builder.class);
      }

      // Construct using org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (proposalDataBuilder_ == null) {
          proposalData_ = null;
        } else {
          proposalData_ = null;
          proposalDataBuilder_ = null;
        }
        if (syncInfoBuilder_ == null) {
          syncInfo_ = null;
        } else {
          syncInfo_ = null;
          syncInfoBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ProposalMsg_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg getDefaultInstanceForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg build() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg buildPartial() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg result = new org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg(this);
        if (proposalDataBuilder_ == null) {
          result.proposalData_ = proposalData_;
        } else {
          result.proposalData_ = proposalDataBuilder_.build();
        }
        if (syncInfoBuilder_ == null) {
          result.syncInfo_ = syncInfo_;
        } else {
          result.syncInfo_ = syncInfoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg) {
          return mergeFrom((org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg other) {
        if (other == org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg.getDefaultInstance()) return this;
        if (other.hasProposalData()) {
          mergeProposalData(other.getProposalData());
        }
        if (other.hasSyncInfo()) {
          mergeSyncInfo(other.getSyncInfo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData proposalData_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData, org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalDataOrBuilder> proposalDataBuilder_;
      /**
       * <pre>
       * proposal data
       * </pre>
       *
       * <code>.maxbft.ProposalData proposal_data = 1;</code>
       * @return Whether the proposalData field is set.
       */
      public boolean hasProposalData() {
        return proposalDataBuilder_ != null || proposalData_ != null;
      }
      /**
       * <pre>
       * proposal data
       * </pre>
       *
       * <code>.maxbft.ProposalData proposal_data = 1;</code>
       * @return The proposalData.
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData getProposalData() {
        if (proposalDataBuilder_ == null) {
          return proposalData_ == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData.getDefaultInstance() : proposalData_;
        } else {
          return proposalDataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * proposal data
       * </pre>
       *
       * <code>.maxbft.ProposalData proposal_data = 1;</code>
       */
      public Builder setProposalData(org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData value) {
        if (proposalDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          proposalData_ = value;
          onChanged();
        } else {
          proposalDataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * proposal data
       * </pre>
       *
       * <code>.maxbft.ProposalData proposal_data = 1;</code>
       */
      public Builder setProposalData(
          org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData.Builder builderForValue) {
        if (proposalDataBuilder_ == null) {
          proposalData_ = builderForValue.build();
          onChanged();
        } else {
          proposalDataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * proposal data
       * </pre>
       *
       * <code>.maxbft.ProposalData proposal_data = 1;</code>
       */
      public Builder mergeProposalData(org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData value) {
        if (proposalDataBuilder_ == null) {
          if (proposalData_ != null) {
            proposalData_ =
              org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData.newBuilder(proposalData_).mergeFrom(value).buildPartial();
          } else {
            proposalData_ = value;
          }
          onChanged();
        } else {
          proposalDataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * proposal data
       * </pre>
       *
       * <code>.maxbft.ProposalData proposal_data = 1;</code>
       */
      public Builder clearProposalData() {
        if (proposalDataBuilder_ == null) {
          proposalData_ = null;
          onChanged();
        } else {
          proposalData_ = null;
          proposalDataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * proposal data
       * </pre>
       *
       * <code>.maxbft.ProposalData proposal_data = 1;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData.Builder getProposalDataBuilder() {
        
        onChanged();
        return getProposalDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * proposal data
       * </pre>
       *
       * <code>.maxbft.ProposalData proposal_data = 1;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalDataOrBuilder getProposalDataOrBuilder() {
        if (proposalDataBuilder_ != null) {
          return proposalDataBuilder_.getMessageOrBuilder();
        } else {
          return proposalData_ == null ?
              org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData.getDefaultInstance() : proposalData_;
        }
      }
      /**
       * <pre>
       * proposal data
       * </pre>
       *
       * <code>.maxbft.ProposalData proposal_data = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData, org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalDataOrBuilder> 
          getProposalDataFieldBuilder() {
        if (proposalDataBuilder_ == null) {
          proposalDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData, org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalData.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalDataOrBuilder>(
                  getProposalData(),
                  getParentForChildren(),
                  isClean());
          proposalData_ = null;
        }
        return proposalDataBuilder_;
      }

      private org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo syncInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo, org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfoOrBuilder> syncInfoBuilder_;
      /**
       * <pre>
       * qc info of the propose node
       * </pre>
       *
       * <code>.maxbft.SyncInfo sync_info = 2;</code>
       * @return Whether the syncInfo field is set.
       */
      public boolean hasSyncInfo() {
        return syncInfoBuilder_ != null || syncInfo_ != null;
      }
      /**
       * <pre>
       * qc info of the propose node
       * </pre>
       *
       * <code>.maxbft.SyncInfo sync_info = 2;</code>
       * @return The syncInfo.
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo getSyncInfo() {
        if (syncInfoBuilder_ == null) {
          return syncInfo_ == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.getDefaultInstance() : syncInfo_;
        } else {
          return syncInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * qc info of the propose node
       * </pre>
       *
       * <code>.maxbft.SyncInfo sync_info = 2;</code>
       */
      public Builder setSyncInfo(org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo value) {
        if (syncInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          syncInfo_ = value;
          onChanged();
        } else {
          syncInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * qc info of the propose node
       * </pre>
       *
       * <code>.maxbft.SyncInfo sync_info = 2;</code>
       */
      public Builder setSyncInfo(
          org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.Builder builderForValue) {
        if (syncInfoBuilder_ == null) {
          syncInfo_ = builderForValue.build();
          onChanged();
        } else {
          syncInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * qc info of the propose node
       * </pre>
       *
       * <code>.maxbft.SyncInfo sync_info = 2;</code>
       */
      public Builder mergeSyncInfo(org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo value) {
        if (syncInfoBuilder_ == null) {
          if (syncInfo_ != null) {
            syncInfo_ =
              org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.newBuilder(syncInfo_).mergeFrom(value).buildPartial();
          } else {
            syncInfo_ = value;
          }
          onChanged();
        } else {
          syncInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * qc info of the propose node
       * </pre>
       *
       * <code>.maxbft.SyncInfo sync_info = 2;</code>
       */
      public Builder clearSyncInfo() {
        if (syncInfoBuilder_ == null) {
          syncInfo_ = null;
          onChanged();
        } else {
          syncInfo_ = null;
          syncInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * qc info of the propose node
       * </pre>
       *
       * <code>.maxbft.SyncInfo sync_info = 2;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.Builder getSyncInfoBuilder() {
        
        onChanged();
        return getSyncInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * qc info of the propose node
       * </pre>
       *
       * <code>.maxbft.SyncInfo sync_info = 2;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfoOrBuilder getSyncInfoOrBuilder() {
        if (syncInfoBuilder_ != null) {
          return syncInfoBuilder_.getMessageOrBuilder();
        } else {
          return syncInfo_ == null ?
              org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.getDefaultInstance() : syncInfo_;
        }
      }
      /**
       * <pre>
       * qc info of the propose node
       * </pre>
       *
       * <code>.maxbft.SyncInfo sync_info = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo, org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfoOrBuilder> 
          getSyncInfoFieldBuilder() {
        if (syncInfoBuilder_ == null) {
          syncInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo, org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfoOrBuilder>(
                  getSyncInfo(),
                  getParentForChildren(),
                  isClean());
          syncInfo_ = null;
        }
        return syncInfoBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:maxbft.ProposalMsg)
    }

    // @@protoc_insertion_point(class_scope:maxbft.ProposalMsg)
    private static final org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg();
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProposalMsg>
        PARSER = new com.google.protobuf.AbstractParser<ProposalMsg>() {
      @java.lang.Override
      public ProposalMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProposalMsg(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ProposalMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProposalMsg> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VoteDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxbft.VoteData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * block id of the vote block
     * </pre>
     *
     * <code>bytes block_id = 1;</code>
     * @return The blockId.
     */
    com.google.protobuf.ByteString getBlockId();

    /**
     * <pre>
     * block height of the vote block
     * </pre>
     *
     * <code>uint64 height = 2;</code>
     * @return The height.
     */
    long getHeight();

    /**
     * <pre>
     * consensus level of the vote block
     * </pre>
     *
     * <code>uint64 level = 3;</code>
     * @return The level.
     */
    long getLevel();

    /**
     * <pre>
     * voter of the voteInfo
     * </pre>
     *
     * <code>bytes author = 4;</code>
     * @return The author.
     */
    com.google.protobuf.ByteString getAuthor();

    /**
     * <pre>
     * index of the voter in consensus nodes
     * </pre>
     *
     * <code>uint64 author_idx = 5;</code>
     * @return The authorIdx.
     */
    long getAuthorIdx();

    /**
     * <pre>
     * Whether to vote timeout of the block
     * </pre>
     *
     * <code>bool new_view = 6;</code>
     * @return The newView.
     */
    boolean getNewView();

    /**
     * <pre>
     * the id of the epoch
     * </pre>
     *
     * <code>uint64 epoch_id = 7;</code>
     * @return The epochId.
     */
    long getEpochId();

    /**
     * <pre>
     * signature of the vote
     * </pre>
     *
     * <code>.common.EndorsementEntry signature = 8;</code>
     * @return Whether the signature field is set.
     */
    boolean hasSignature();
    /**
     * <pre>
     * signature of the vote
     * </pre>
     *
     * <code>.common.EndorsementEntry signature = 8;</code>
     * @return The signature.
     */
    org.chainmaker.pb.common.Request.EndorsementEntry getSignature();
    /**
     * <pre>
     * signature of the vote
     * </pre>
     *
     * <code>.common.EndorsementEntry signature = 8;</code>
     */
    org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder getSignatureOrBuilder();
  }
  /**
   * Protobuf type {@code maxbft.VoteData}
   */
  public static final class VoteData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:maxbft.VoteData)
      VoteDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VoteData.newBuilder() to construct.
    private VoteData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VoteData() {
      blockId_ = com.google.protobuf.ByteString.EMPTY;
      author_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new VoteData();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VoteData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              blockId_ = input.readBytes();
              break;
            }
            case 16: {

              height_ = input.readUInt64();
              break;
            }
            case 24: {

              level_ = input.readUInt64();
              break;
            }
            case 34: {

              author_ = input.readBytes();
              break;
            }
            case 40: {

              authorIdx_ = input.readUInt64();
              break;
            }
            case 48: {

              newView_ = input.readBool();
              break;
            }
            case 56: {

              epochId_ = input.readUInt64();
              break;
            }
            case 66: {
              org.chainmaker.pb.common.Request.EndorsementEntry.Builder subBuilder = null;
              if (signature_ != null) {
                subBuilder = signature_.toBuilder();
              }
              signature_ = input.readMessage(org.chainmaker.pb.common.Request.EndorsementEntry.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signature_);
                signature_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_VoteData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_VoteData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.class, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.Builder.class);
    }

    public static final int BLOCK_ID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString blockId_;
    /**
     * <pre>
     * block id of the vote block
     * </pre>
     *
     * <code>bytes block_id = 1;</code>
     * @return The blockId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBlockId() {
      return blockId_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 2;
    private long height_;
    /**
     * <pre>
     * block height of the vote block
     * </pre>
     *
     * <code>uint64 height = 2;</code>
     * @return The height.
     */
    @java.lang.Override
    public long getHeight() {
      return height_;
    }

    public static final int LEVEL_FIELD_NUMBER = 3;
    private long level_;
    /**
     * <pre>
     * consensus level of the vote block
     * </pre>
     *
     * <code>uint64 level = 3;</code>
     * @return The level.
     */
    @java.lang.Override
    public long getLevel() {
      return level_;
    }

    public static final int AUTHOR_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString author_;
    /**
     * <pre>
     * voter of the voteInfo
     * </pre>
     *
     * <code>bytes author = 4;</code>
     * @return The author.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getAuthor() {
      return author_;
    }

    public static final int AUTHOR_IDX_FIELD_NUMBER = 5;
    private long authorIdx_;
    /**
     * <pre>
     * index of the voter in consensus nodes
     * </pre>
     *
     * <code>uint64 author_idx = 5;</code>
     * @return The authorIdx.
     */
    @java.lang.Override
    public long getAuthorIdx() {
      return authorIdx_;
    }

    public static final int NEW_VIEW_FIELD_NUMBER = 6;
    private boolean newView_;
    /**
     * <pre>
     * Whether to vote timeout of the block
     * </pre>
     *
     * <code>bool new_view = 6;</code>
     * @return The newView.
     */
    @java.lang.Override
    public boolean getNewView() {
      return newView_;
    }

    public static final int EPOCH_ID_FIELD_NUMBER = 7;
    private long epochId_;
    /**
     * <pre>
     * the id of the epoch
     * </pre>
     *
     * <code>uint64 epoch_id = 7;</code>
     * @return The epochId.
     */
    @java.lang.Override
    public long getEpochId() {
      return epochId_;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 8;
    private org.chainmaker.pb.common.Request.EndorsementEntry signature_;
    /**
     * <pre>
     * signature of the vote
     * </pre>
     *
     * <code>.common.EndorsementEntry signature = 8;</code>
     * @return Whether the signature field is set.
     */
    @java.lang.Override
    public boolean hasSignature() {
      return signature_ != null;
    }
    /**
     * <pre>
     * signature of the vote
     * </pre>
     *
     * <code>.common.EndorsementEntry signature = 8;</code>
     * @return The signature.
     */
    @java.lang.Override
    public org.chainmaker.pb.common.Request.EndorsementEntry getSignature() {
      return signature_ == null ? org.chainmaker.pb.common.Request.EndorsementEntry.getDefaultInstance() : signature_;
    }
    /**
     * <pre>
     * signature of the vote
     * </pre>
     *
     * <code>.common.EndorsementEntry signature = 8;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder getSignatureOrBuilder() {
      return getSignature();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!blockId_.isEmpty()) {
        output.writeBytes(1, blockId_);
      }
      if (height_ != 0L) {
        output.writeUInt64(2, height_);
      }
      if (level_ != 0L) {
        output.writeUInt64(3, level_);
      }
      if (!author_.isEmpty()) {
        output.writeBytes(4, author_);
      }
      if (authorIdx_ != 0L) {
        output.writeUInt64(5, authorIdx_);
      }
      if (newView_ != false) {
        output.writeBool(6, newView_);
      }
      if (epochId_ != 0L) {
        output.writeUInt64(7, epochId_);
      }
      if (signature_ != null) {
        output.writeMessage(8, getSignature());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!blockId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, blockId_);
      }
      if (height_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, height_);
      }
      if (level_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, level_);
      }
      if (!author_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, author_);
      }
      if (authorIdx_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, authorIdx_);
      }
      if (newView_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, newView_);
      }
      if (epochId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, epochId_);
      }
      if (signature_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getSignature());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData other = (org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData) obj;

      if (!getBlockId()
          .equals(other.getBlockId())) return false;
      if (getHeight()
          != other.getHeight()) return false;
      if (getLevel()
          != other.getLevel()) return false;
      if (!getAuthor()
          .equals(other.getAuthor())) return false;
      if (getAuthorIdx()
          != other.getAuthorIdx()) return false;
      if (getNewView()
          != other.getNewView()) return false;
      if (getEpochId()
          != other.getEpochId()) return false;
      if (hasSignature() != other.hasSignature()) return false;
      if (hasSignature()) {
        if (!getSignature()
            .equals(other.getSignature())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BLOCK_ID_FIELD_NUMBER;
      hash = (53 * hash) + getBlockId().hashCode();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHeight());
      hash = (37 * hash) + LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLevel());
      hash = (37 * hash) + AUTHOR_FIELD_NUMBER;
      hash = (53 * hash) + getAuthor().hashCode();
      hash = (37 * hash) + AUTHOR_IDX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAuthorIdx());
      hash = (37 * hash) + NEW_VIEW_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getNewView());
      hash = (37 * hash) + EPOCH_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEpochId());
      if (hasSignature()) {
        hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
        hash = (53 * hash) + getSignature().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxbft.VoteData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxbft.VoteData)
        org.chainmaker.pb.consensus.maxbft.Maxbft.VoteDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_VoteData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_VoteData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.class, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.Builder.class);
      }

      // Construct using org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        blockId_ = com.google.protobuf.ByteString.EMPTY;

        height_ = 0L;

        level_ = 0L;

        author_ = com.google.protobuf.ByteString.EMPTY;

        authorIdx_ = 0L;

        newView_ = false;

        epochId_ = 0L;

        if (signatureBuilder_ == null) {
          signature_ = null;
        } else {
          signature_ = null;
          signatureBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_VoteData_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData getDefaultInstanceForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData build() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData buildPartial() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData result = new org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData(this);
        result.blockId_ = blockId_;
        result.height_ = height_;
        result.level_ = level_;
        result.author_ = author_;
        result.authorIdx_ = authorIdx_;
        result.newView_ = newView_;
        result.epochId_ = epochId_;
        if (signatureBuilder_ == null) {
          result.signature_ = signature_;
        } else {
          result.signature_ = signatureBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData) {
          return mergeFrom((org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData other) {
        if (other == org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.getDefaultInstance()) return this;
        if (other.getBlockId() != com.google.protobuf.ByteString.EMPTY) {
          setBlockId(other.getBlockId());
        }
        if (other.getHeight() != 0L) {
          setHeight(other.getHeight());
        }
        if (other.getLevel() != 0L) {
          setLevel(other.getLevel());
        }
        if (other.getAuthor() != com.google.protobuf.ByteString.EMPTY) {
          setAuthor(other.getAuthor());
        }
        if (other.getAuthorIdx() != 0L) {
          setAuthorIdx(other.getAuthorIdx());
        }
        if (other.getNewView() != false) {
          setNewView(other.getNewView());
        }
        if (other.getEpochId() != 0L) {
          setEpochId(other.getEpochId());
        }
        if (other.hasSignature()) {
          mergeSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString blockId_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * block id of the vote block
       * </pre>
       *
       * <code>bytes block_id = 1;</code>
       * @return The blockId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBlockId() {
        return blockId_;
      }
      /**
       * <pre>
       * block id of the vote block
       * </pre>
       *
       * <code>bytes block_id = 1;</code>
       * @param value The blockId to set.
       * @return This builder for chaining.
       */
      public Builder setBlockId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        blockId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * block id of the vote block
       * </pre>
       *
       * <code>bytes block_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockId() {
        
        blockId_ = getDefaultInstance().getBlockId();
        onChanged();
        return this;
      }

      private long height_ ;
      /**
       * <pre>
       * block height of the vote block
       * </pre>
       *
       * <code>uint64 height = 2;</code>
       * @return The height.
       */
      @java.lang.Override
      public long getHeight() {
        return height_;
      }
      /**
       * <pre>
       * block height of the vote block
       * </pre>
       *
       * <code>uint64 height = 2;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(long value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * block height of the vote block
       * </pre>
       *
       * <code>uint64 height = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        
        height_ = 0L;
        onChanged();
        return this;
      }

      private long level_ ;
      /**
       * <pre>
       * consensus level of the vote block
       * </pre>
       *
       * <code>uint64 level = 3;</code>
       * @return The level.
       */
      @java.lang.Override
      public long getLevel() {
        return level_;
      }
      /**
       * <pre>
       * consensus level of the vote block
       * </pre>
       *
       * <code>uint64 level = 3;</code>
       * @param value The level to set.
       * @return This builder for chaining.
       */
      public Builder setLevel(long value) {
        
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * consensus level of the vote block
       * </pre>
       *
       * <code>uint64 level = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLevel() {
        
        level_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString author_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * voter of the voteInfo
       * </pre>
       *
       * <code>bytes author = 4;</code>
       * @return The author.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getAuthor() {
        return author_;
      }
      /**
       * <pre>
       * voter of the voteInfo
       * </pre>
       *
       * <code>bytes author = 4;</code>
       * @param value The author to set.
       * @return This builder for chaining.
       */
      public Builder setAuthor(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        author_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * voter of the voteInfo
       * </pre>
       *
       * <code>bytes author = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearAuthor() {
        
        author_ = getDefaultInstance().getAuthor();
        onChanged();
        return this;
      }

      private long authorIdx_ ;
      /**
       * <pre>
       * index of the voter in consensus nodes
       * </pre>
       *
       * <code>uint64 author_idx = 5;</code>
       * @return The authorIdx.
       */
      @java.lang.Override
      public long getAuthorIdx() {
        return authorIdx_;
      }
      /**
       * <pre>
       * index of the voter in consensus nodes
       * </pre>
       *
       * <code>uint64 author_idx = 5;</code>
       * @param value The authorIdx to set.
       * @return This builder for chaining.
       */
      public Builder setAuthorIdx(long value) {
        
        authorIdx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * index of the voter in consensus nodes
       * </pre>
       *
       * <code>uint64 author_idx = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearAuthorIdx() {
        
        authorIdx_ = 0L;
        onChanged();
        return this;
      }

      private boolean newView_ ;
      /**
       * <pre>
       * Whether to vote timeout of the block
       * </pre>
       *
       * <code>bool new_view = 6;</code>
       * @return The newView.
       */
      @java.lang.Override
      public boolean getNewView() {
        return newView_;
      }
      /**
       * <pre>
       * Whether to vote timeout of the block
       * </pre>
       *
       * <code>bool new_view = 6;</code>
       * @param value The newView to set.
       * @return This builder for chaining.
       */
      public Builder setNewView(boolean value) {
        
        newView_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether to vote timeout of the block
       * </pre>
       *
       * <code>bool new_view = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearNewView() {
        
        newView_ = false;
        onChanged();
        return this;
      }

      private long epochId_ ;
      /**
       * <pre>
       * the id of the epoch
       * </pre>
       *
       * <code>uint64 epoch_id = 7;</code>
       * @return The epochId.
       */
      @java.lang.Override
      public long getEpochId() {
        return epochId_;
      }
      /**
       * <pre>
       * the id of the epoch
       * </pre>
       *
       * <code>uint64 epoch_id = 7;</code>
       * @param value The epochId to set.
       * @return This builder for chaining.
       */
      public Builder setEpochId(long value) {
        
        epochId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the id of the epoch
       * </pre>
       *
       * <code>uint64 epoch_id = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearEpochId() {
        
        epochId_ = 0L;
        onChanged();
        return this;
      }

      private org.chainmaker.pb.common.Request.EndorsementEntry signature_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.Request.EndorsementEntry, org.chainmaker.pb.common.Request.EndorsementEntry.Builder, org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder> signatureBuilder_;
      /**
       * <pre>
       * signature of the vote
       * </pre>
       *
       * <code>.common.EndorsementEntry signature = 8;</code>
       * @return Whether the signature field is set.
       */
      public boolean hasSignature() {
        return signatureBuilder_ != null || signature_ != null;
      }
      /**
       * <pre>
       * signature of the vote
       * </pre>
       *
       * <code>.common.EndorsementEntry signature = 8;</code>
       * @return The signature.
       */
      public org.chainmaker.pb.common.Request.EndorsementEntry getSignature() {
        if (signatureBuilder_ == null) {
          return signature_ == null ? org.chainmaker.pb.common.Request.EndorsementEntry.getDefaultInstance() : signature_;
        } else {
          return signatureBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * signature of the vote
       * </pre>
       *
       * <code>.common.EndorsementEntry signature = 8;</code>
       */
      public Builder setSignature(org.chainmaker.pb.common.Request.EndorsementEntry value) {
        if (signatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signature_ = value;
          onChanged();
        } else {
          signatureBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * signature of the vote
       * </pre>
       *
       * <code>.common.EndorsementEntry signature = 8;</code>
       */
      public Builder setSignature(
          org.chainmaker.pb.common.Request.EndorsementEntry.Builder builderForValue) {
        if (signatureBuilder_ == null) {
          signature_ = builderForValue.build();
          onChanged();
        } else {
          signatureBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * signature of the vote
       * </pre>
       *
       * <code>.common.EndorsementEntry signature = 8;</code>
       */
      public Builder mergeSignature(org.chainmaker.pb.common.Request.EndorsementEntry value) {
        if (signatureBuilder_ == null) {
          if (signature_ != null) {
            signature_ =
              org.chainmaker.pb.common.Request.EndorsementEntry.newBuilder(signature_).mergeFrom(value).buildPartial();
          } else {
            signature_ = value;
          }
          onChanged();
        } else {
          signatureBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * signature of the vote
       * </pre>
       *
       * <code>.common.EndorsementEntry signature = 8;</code>
       */
      public Builder clearSignature() {
        if (signatureBuilder_ == null) {
          signature_ = null;
          onChanged();
        } else {
          signature_ = null;
          signatureBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * signature of the vote
       * </pre>
       *
       * <code>.common.EndorsementEntry signature = 8;</code>
       */
      public org.chainmaker.pb.common.Request.EndorsementEntry.Builder getSignatureBuilder() {
        
        onChanged();
        return getSignatureFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * signature of the vote
       * </pre>
       *
       * <code>.common.EndorsementEntry signature = 8;</code>
       */
      public org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder getSignatureOrBuilder() {
        if (signatureBuilder_ != null) {
          return signatureBuilder_.getMessageOrBuilder();
        } else {
          return signature_ == null ?
              org.chainmaker.pb.common.Request.EndorsementEntry.getDefaultInstance() : signature_;
        }
      }
      /**
       * <pre>
       * signature of the vote
       * </pre>
       *
       * <code>.common.EndorsementEntry signature = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.Request.EndorsementEntry, org.chainmaker.pb.common.Request.EndorsementEntry.Builder, org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder> 
          getSignatureFieldBuilder() {
        if (signatureBuilder_ == null) {
          signatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.common.Request.EndorsementEntry, org.chainmaker.pb.common.Request.EndorsementEntry.Builder, org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder>(
                  getSignature(),
                  getParentForChildren(),
                  isClean());
          signature_ = null;
        }
        return signatureBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:maxbft.VoteData)
    }

    // @@protoc_insertion_point(class_scope:maxbft.VoteData)
    private static final org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData();
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VoteData>
        PARSER = new com.google.protobuf.AbstractParser<VoteData>() {
      @java.lang.Override
      public VoteData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VoteData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VoteData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VoteData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VoteMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxbft.VoteMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * data of the vote
     * </pre>
     *
     * <code>.maxbft.VoteData vote_data = 1;</code>
     * @return Whether the voteData field is set.
     */
    boolean hasVoteData();
    /**
     * <pre>
     * data of the vote
     * </pre>
     *
     * <code>.maxbft.VoteData vote_data = 1;</code>
     * @return The voteData.
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData getVoteData();
    /**
     * <pre>
     * data of the vote
     * </pre>
     *
     * <code>.maxbft.VoteData vote_data = 1;</code>
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.VoteDataOrBuilder getVoteDataOrBuilder();

    /**
     * <pre>
     * qc info in the vote
     * </pre>
     *
     * <code>.maxbft.SyncInfo sync_info = 2;</code>
     * @return Whether the syncInfo field is set.
     */
    boolean hasSyncInfo();
    /**
     * <pre>
     * qc info in the vote
     * </pre>
     *
     * <code>.maxbft.SyncInfo sync_info = 2;</code>
     * @return The syncInfo.
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo getSyncInfo();
    /**
     * <pre>
     * qc info in the vote
     * </pre>
     *
     * <code>.maxbft.SyncInfo sync_info = 2;</code>
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfoOrBuilder getSyncInfoOrBuilder();
  }
  /**
   * Protobuf type {@code maxbft.VoteMsg}
   */
  public static final class VoteMsg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:maxbft.VoteMsg)
      VoteMsgOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VoteMsg.newBuilder() to construct.
    private VoteMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VoteMsg() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new VoteMsg();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VoteMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.Builder subBuilder = null;
              if (voteData_ != null) {
                subBuilder = voteData_.toBuilder();
              }
              voteData_ = input.readMessage(org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(voteData_);
                voteData_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.Builder subBuilder = null;
              if (syncInfo_ != null) {
                subBuilder = syncInfo_.toBuilder();
              }
              syncInfo_ = input.readMessage(org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(syncInfo_);
                syncInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_VoteMsg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_VoteMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg.class, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg.Builder.class);
    }

    public static final int VOTE_DATA_FIELD_NUMBER = 1;
    private org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData voteData_;
    /**
     * <pre>
     * data of the vote
     * </pre>
     *
     * <code>.maxbft.VoteData vote_data = 1;</code>
     * @return Whether the voteData field is set.
     */
    @java.lang.Override
    public boolean hasVoteData() {
      return voteData_ != null;
    }
    /**
     * <pre>
     * data of the vote
     * </pre>
     *
     * <code>.maxbft.VoteData vote_data = 1;</code>
     * @return The voteData.
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData getVoteData() {
      return voteData_ == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.getDefaultInstance() : voteData_;
    }
    /**
     * <pre>
     * data of the vote
     * </pre>
     *
     * <code>.maxbft.VoteData vote_data = 1;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteDataOrBuilder getVoteDataOrBuilder() {
      return getVoteData();
    }

    public static final int SYNC_INFO_FIELD_NUMBER = 2;
    private org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo syncInfo_;
    /**
     * <pre>
     * qc info in the vote
     * </pre>
     *
     * <code>.maxbft.SyncInfo sync_info = 2;</code>
     * @return Whether the syncInfo field is set.
     */
    @java.lang.Override
    public boolean hasSyncInfo() {
      return syncInfo_ != null;
    }
    /**
     * <pre>
     * qc info in the vote
     * </pre>
     *
     * <code>.maxbft.SyncInfo sync_info = 2;</code>
     * @return The syncInfo.
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo getSyncInfo() {
      return syncInfo_ == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.getDefaultInstance() : syncInfo_;
    }
    /**
     * <pre>
     * qc info in the vote
     * </pre>
     *
     * <code>.maxbft.SyncInfo sync_info = 2;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfoOrBuilder getSyncInfoOrBuilder() {
      return getSyncInfo();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (voteData_ != null) {
        output.writeMessage(1, getVoteData());
      }
      if (syncInfo_ != null) {
        output.writeMessage(2, getSyncInfo());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (voteData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getVoteData());
      }
      if (syncInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSyncInfo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg other = (org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg) obj;

      if (hasVoteData() != other.hasVoteData()) return false;
      if (hasVoteData()) {
        if (!getVoteData()
            .equals(other.getVoteData())) return false;
      }
      if (hasSyncInfo() != other.hasSyncInfo()) return false;
      if (hasSyncInfo()) {
        if (!getSyncInfo()
            .equals(other.getSyncInfo())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasVoteData()) {
        hash = (37 * hash) + VOTE_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getVoteData().hashCode();
      }
      if (hasSyncInfo()) {
        hash = (37 * hash) + SYNC_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getSyncInfo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxbft.VoteMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxbft.VoteMsg)
        org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_VoteMsg_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_VoteMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg.class, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg.Builder.class);
      }

      // Construct using org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (voteDataBuilder_ == null) {
          voteData_ = null;
        } else {
          voteData_ = null;
          voteDataBuilder_ = null;
        }
        if (syncInfoBuilder_ == null) {
          syncInfo_ = null;
        } else {
          syncInfo_ = null;
          syncInfoBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_VoteMsg_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg getDefaultInstanceForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg build() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg buildPartial() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg result = new org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg(this);
        if (voteDataBuilder_ == null) {
          result.voteData_ = voteData_;
        } else {
          result.voteData_ = voteDataBuilder_.build();
        }
        if (syncInfoBuilder_ == null) {
          result.syncInfo_ = syncInfo_;
        } else {
          result.syncInfo_ = syncInfoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg) {
          return mergeFrom((org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg other) {
        if (other == org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg.getDefaultInstance()) return this;
        if (other.hasVoteData()) {
          mergeVoteData(other.getVoteData());
        }
        if (other.hasSyncInfo()) {
          mergeSyncInfo(other.getSyncInfo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData voteData_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteDataOrBuilder> voteDataBuilder_;
      /**
       * <pre>
       * data of the vote
       * </pre>
       *
       * <code>.maxbft.VoteData vote_data = 1;</code>
       * @return Whether the voteData field is set.
       */
      public boolean hasVoteData() {
        return voteDataBuilder_ != null || voteData_ != null;
      }
      /**
       * <pre>
       * data of the vote
       * </pre>
       *
       * <code>.maxbft.VoteData vote_data = 1;</code>
       * @return The voteData.
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData getVoteData() {
        if (voteDataBuilder_ == null) {
          return voteData_ == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.getDefaultInstance() : voteData_;
        } else {
          return voteDataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * data of the vote
       * </pre>
       *
       * <code>.maxbft.VoteData vote_data = 1;</code>
       */
      public Builder setVoteData(org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData value) {
        if (voteDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          voteData_ = value;
          onChanged();
        } else {
          voteDataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * data of the vote
       * </pre>
       *
       * <code>.maxbft.VoteData vote_data = 1;</code>
       */
      public Builder setVoteData(
          org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.Builder builderForValue) {
        if (voteDataBuilder_ == null) {
          voteData_ = builderForValue.build();
          onChanged();
        } else {
          voteDataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * data of the vote
       * </pre>
       *
       * <code>.maxbft.VoteData vote_data = 1;</code>
       */
      public Builder mergeVoteData(org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData value) {
        if (voteDataBuilder_ == null) {
          if (voteData_ != null) {
            voteData_ =
              org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.newBuilder(voteData_).mergeFrom(value).buildPartial();
          } else {
            voteData_ = value;
          }
          onChanged();
        } else {
          voteDataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * data of the vote
       * </pre>
       *
       * <code>.maxbft.VoteData vote_data = 1;</code>
       */
      public Builder clearVoteData() {
        if (voteDataBuilder_ == null) {
          voteData_ = null;
          onChanged();
        } else {
          voteData_ = null;
          voteDataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * data of the vote
       * </pre>
       *
       * <code>.maxbft.VoteData vote_data = 1;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.Builder getVoteDataBuilder() {
        
        onChanged();
        return getVoteDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * data of the vote
       * </pre>
       *
       * <code>.maxbft.VoteData vote_data = 1;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteDataOrBuilder getVoteDataOrBuilder() {
        if (voteDataBuilder_ != null) {
          return voteDataBuilder_.getMessageOrBuilder();
        } else {
          return voteData_ == null ?
              org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.getDefaultInstance() : voteData_;
        }
      }
      /**
       * <pre>
       * data of the vote
       * </pre>
       *
       * <code>.maxbft.VoteData vote_data = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteDataOrBuilder> 
          getVoteDataFieldBuilder() {
        if (voteDataBuilder_ == null) {
          voteDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteData.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteDataOrBuilder>(
                  getVoteData(),
                  getParentForChildren(),
                  isClean());
          voteData_ = null;
        }
        return voteDataBuilder_;
      }

      private org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo syncInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo, org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfoOrBuilder> syncInfoBuilder_;
      /**
       * <pre>
       * qc info in the vote
       * </pre>
       *
       * <code>.maxbft.SyncInfo sync_info = 2;</code>
       * @return Whether the syncInfo field is set.
       */
      public boolean hasSyncInfo() {
        return syncInfoBuilder_ != null || syncInfo_ != null;
      }
      /**
       * <pre>
       * qc info in the vote
       * </pre>
       *
       * <code>.maxbft.SyncInfo sync_info = 2;</code>
       * @return The syncInfo.
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo getSyncInfo() {
        if (syncInfoBuilder_ == null) {
          return syncInfo_ == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.getDefaultInstance() : syncInfo_;
        } else {
          return syncInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * qc info in the vote
       * </pre>
       *
       * <code>.maxbft.SyncInfo sync_info = 2;</code>
       */
      public Builder setSyncInfo(org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo value) {
        if (syncInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          syncInfo_ = value;
          onChanged();
        } else {
          syncInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * qc info in the vote
       * </pre>
       *
       * <code>.maxbft.SyncInfo sync_info = 2;</code>
       */
      public Builder setSyncInfo(
          org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.Builder builderForValue) {
        if (syncInfoBuilder_ == null) {
          syncInfo_ = builderForValue.build();
          onChanged();
        } else {
          syncInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * qc info in the vote
       * </pre>
       *
       * <code>.maxbft.SyncInfo sync_info = 2;</code>
       */
      public Builder mergeSyncInfo(org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo value) {
        if (syncInfoBuilder_ == null) {
          if (syncInfo_ != null) {
            syncInfo_ =
              org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.newBuilder(syncInfo_).mergeFrom(value).buildPartial();
          } else {
            syncInfo_ = value;
          }
          onChanged();
        } else {
          syncInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * qc info in the vote
       * </pre>
       *
       * <code>.maxbft.SyncInfo sync_info = 2;</code>
       */
      public Builder clearSyncInfo() {
        if (syncInfoBuilder_ == null) {
          syncInfo_ = null;
          onChanged();
        } else {
          syncInfo_ = null;
          syncInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * qc info in the vote
       * </pre>
       *
       * <code>.maxbft.SyncInfo sync_info = 2;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.Builder getSyncInfoBuilder() {
        
        onChanged();
        return getSyncInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * qc info in the vote
       * </pre>
       *
       * <code>.maxbft.SyncInfo sync_info = 2;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfoOrBuilder getSyncInfoOrBuilder() {
        if (syncInfoBuilder_ != null) {
          return syncInfoBuilder_.getMessageOrBuilder();
        } else {
          return syncInfo_ == null ?
              org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.getDefaultInstance() : syncInfo_;
        }
      }
      /**
       * <pre>
       * qc info in the vote
       * </pre>
       *
       * <code>.maxbft.SyncInfo sync_info = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo, org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfoOrBuilder> 
          getSyncInfoFieldBuilder() {
        if (syncInfoBuilder_ == null) {
          syncInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo, org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfo.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.SyncInfoOrBuilder>(
                  getSyncInfo(),
                  getParentForChildren(),
                  isClean());
          syncInfo_ = null;
        }
        return syncInfoBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:maxbft.VoteMsg)
    }

    // @@protoc_insertion_point(class_scope:maxbft.VoteMsg)
    private static final org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg();
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VoteMsg>
        PARSER = new com.google.protobuf.AbstractParser<VoteMsg>() {
      @java.lang.Override
      public VoteMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VoteMsg(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VoteMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VoteMsg> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BlockFetchMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxbft.BlockFetchMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * block id of the latest know block in request node
     * </pre>
     *
     * <code>bytes block_id = 1;</code>
     * @return The blockId.
     */
    com.google.protobuf.ByteString getBlockId();

    /**
     * <pre>
     * block height of the latest know block in request node
     * </pre>
     *
     * <code>uint64 height = 2;</code>
     * @return The height.
     */
    long getHeight();

    /**
     * <pre>
     * fetch block num
     * </pre>
     *
     * <code>uint64 num_blocks = 3;</code>
     * @return The numBlocks.
     */
    long getNumBlocks();

    /**
     * <pre>
     * index of the request node;
     * </pre>
     *
     * <code>uint64 author_idx = 4;</code>
     * @return The authorIdx.
     */
    long getAuthorIdx();

    /**
     * <pre>
     * unique id of the request
     * </pre>
     *
     * <code>uint64 req_id = 5;</code>
     * @return The reqId.
     */
    long getReqId();

    /**
     * <pre>
     * id of the commit block in request node
     * </pre>
     *
     * <code>bytes commit_block = 6;</code>
     * @return The commitBlock.
     */
    com.google.protobuf.ByteString getCommitBlock();

    /**
     * <pre>
     * id of the locked block in request node
     * </pre>
     *
     * <code>bytes locked_bLock = 7;</code>
     * @return The lockedBLock.
     */
    com.google.protobuf.ByteString getLockedBLock();
  }
  /**
   * Protobuf type {@code maxbft.BlockFetchMsg}
   */
  public static final class BlockFetchMsg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:maxbft.BlockFetchMsg)
      BlockFetchMsgOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BlockFetchMsg.newBuilder() to construct.
    private BlockFetchMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BlockFetchMsg() {
      blockId_ = com.google.protobuf.ByteString.EMPTY;
      commitBlock_ = com.google.protobuf.ByteString.EMPTY;
      lockedBLock_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BlockFetchMsg();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BlockFetchMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              blockId_ = input.readBytes();
              break;
            }
            case 16: {

              height_ = input.readUInt64();
              break;
            }
            case 24: {

              numBlocks_ = input.readUInt64();
              break;
            }
            case 32: {

              authorIdx_ = input.readUInt64();
              break;
            }
            case 40: {

              reqId_ = input.readUInt64();
              break;
            }
            case 50: {

              commitBlock_ = input.readBytes();
              break;
            }
            case 58: {

              lockedBLock_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_BlockFetchMsg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_BlockFetchMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg.class, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg.Builder.class);
    }

    public static final int BLOCK_ID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString blockId_;
    /**
     * <pre>
     * block id of the latest know block in request node
     * </pre>
     *
     * <code>bytes block_id = 1;</code>
     * @return The blockId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBlockId() {
      return blockId_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 2;
    private long height_;
    /**
     * <pre>
     * block height of the latest know block in request node
     * </pre>
     *
     * <code>uint64 height = 2;</code>
     * @return The height.
     */
    @java.lang.Override
    public long getHeight() {
      return height_;
    }

    public static final int NUM_BLOCKS_FIELD_NUMBER = 3;
    private long numBlocks_;
    /**
     * <pre>
     * fetch block num
     * </pre>
     *
     * <code>uint64 num_blocks = 3;</code>
     * @return The numBlocks.
     */
    @java.lang.Override
    public long getNumBlocks() {
      return numBlocks_;
    }

    public static final int AUTHOR_IDX_FIELD_NUMBER = 4;
    private long authorIdx_;
    /**
     * <pre>
     * index of the request node;
     * </pre>
     *
     * <code>uint64 author_idx = 4;</code>
     * @return The authorIdx.
     */
    @java.lang.Override
    public long getAuthorIdx() {
      return authorIdx_;
    }

    public static final int REQ_ID_FIELD_NUMBER = 5;
    private long reqId_;
    /**
     * <pre>
     * unique id of the request
     * </pre>
     *
     * <code>uint64 req_id = 5;</code>
     * @return The reqId.
     */
    @java.lang.Override
    public long getReqId() {
      return reqId_;
    }

    public static final int COMMIT_BLOCK_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString commitBlock_;
    /**
     * <pre>
     * id of the commit block in request node
     * </pre>
     *
     * <code>bytes commit_block = 6;</code>
     * @return The commitBlock.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCommitBlock() {
      return commitBlock_;
    }

    public static final int LOCKED_BLOCK_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString lockedBLock_;
    /**
     * <pre>
     * id of the locked block in request node
     * </pre>
     *
     * <code>bytes locked_bLock = 7;</code>
     * @return The lockedBLock.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getLockedBLock() {
      return lockedBLock_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!blockId_.isEmpty()) {
        output.writeBytes(1, blockId_);
      }
      if (height_ != 0L) {
        output.writeUInt64(2, height_);
      }
      if (numBlocks_ != 0L) {
        output.writeUInt64(3, numBlocks_);
      }
      if (authorIdx_ != 0L) {
        output.writeUInt64(4, authorIdx_);
      }
      if (reqId_ != 0L) {
        output.writeUInt64(5, reqId_);
      }
      if (!commitBlock_.isEmpty()) {
        output.writeBytes(6, commitBlock_);
      }
      if (!lockedBLock_.isEmpty()) {
        output.writeBytes(7, lockedBLock_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!blockId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, blockId_);
      }
      if (height_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, height_);
      }
      if (numBlocks_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, numBlocks_);
      }
      if (authorIdx_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, authorIdx_);
      }
      if (reqId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, reqId_);
      }
      if (!commitBlock_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, commitBlock_);
      }
      if (!lockedBLock_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, lockedBLock_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg other = (org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg) obj;

      if (!getBlockId()
          .equals(other.getBlockId())) return false;
      if (getHeight()
          != other.getHeight()) return false;
      if (getNumBlocks()
          != other.getNumBlocks()) return false;
      if (getAuthorIdx()
          != other.getAuthorIdx()) return false;
      if (getReqId()
          != other.getReqId()) return false;
      if (!getCommitBlock()
          .equals(other.getCommitBlock())) return false;
      if (!getLockedBLock()
          .equals(other.getLockedBLock())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BLOCK_ID_FIELD_NUMBER;
      hash = (53 * hash) + getBlockId().hashCode();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHeight());
      hash = (37 * hash) + NUM_BLOCKS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getNumBlocks());
      hash = (37 * hash) + AUTHOR_IDX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAuthorIdx());
      hash = (37 * hash) + REQ_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getReqId());
      hash = (37 * hash) + COMMIT_BLOCK_FIELD_NUMBER;
      hash = (53 * hash) + getCommitBlock().hashCode();
      hash = (37 * hash) + LOCKED_BLOCK_FIELD_NUMBER;
      hash = (53 * hash) + getLockedBLock().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxbft.BlockFetchMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxbft.BlockFetchMsg)
        org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_BlockFetchMsg_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_BlockFetchMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg.class, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg.Builder.class);
      }

      // Construct using org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        blockId_ = com.google.protobuf.ByteString.EMPTY;

        height_ = 0L;

        numBlocks_ = 0L;

        authorIdx_ = 0L;

        reqId_ = 0L;

        commitBlock_ = com.google.protobuf.ByteString.EMPTY;

        lockedBLock_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_BlockFetchMsg_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg getDefaultInstanceForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg build() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg buildPartial() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg result = new org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg(this);
        result.blockId_ = blockId_;
        result.height_ = height_;
        result.numBlocks_ = numBlocks_;
        result.authorIdx_ = authorIdx_;
        result.reqId_ = reqId_;
        result.commitBlock_ = commitBlock_;
        result.lockedBLock_ = lockedBLock_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg) {
          return mergeFrom((org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg other) {
        if (other == org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg.getDefaultInstance()) return this;
        if (other.getBlockId() != com.google.protobuf.ByteString.EMPTY) {
          setBlockId(other.getBlockId());
        }
        if (other.getHeight() != 0L) {
          setHeight(other.getHeight());
        }
        if (other.getNumBlocks() != 0L) {
          setNumBlocks(other.getNumBlocks());
        }
        if (other.getAuthorIdx() != 0L) {
          setAuthorIdx(other.getAuthorIdx());
        }
        if (other.getReqId() != 0L) {
          setReqId(other.getReqId());
        }
        if (other.getCommitBlock() != com.google.protobuf.ByteString.EMPTY) {
          setCommitBlock(other.getCommitBlock());
        }
        if (other.getLockedBLock() != com.google.protobuf.ByteString.EMPTY) {
          setLockedBLock(other.getLockedBLock());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString blockId_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * block id of the latest know block in request node
       * </pre>
       *
       * <code>bytes block_id = 1;</code>
       * @return The blockId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBlockId() {
        return blockId_;
      }
      /**
       * <pre>
       * block id of the latest know block in request node
       * </pre>
       *
       * <code>bytes block_id = 1;</code>
       * @param value The blockId to set.
       * @return This builder for chaining.
       */
      public Builder setBlockId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        blockId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * block id of the latest know block in request node
       * </pre>
       *
       * <code>bytes block_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockId() {
        
        blockId_ = getDefaultInstance().getBlockId();
        onChanged();
        return this;
      }

      private long height_ ;
      /**
       * <pre>
       * block height of the latest know block in request node
       * </pre>
       *
       * <code>uint64 height = 2;</code>
       * @return The height.
       */
      @java.lang.Override
      public long getHeight() {
        return height_;
      }
      /**
       * <pre>
       * block height of the latest know block in request node
       * </pre>
       *
       * <code>uint64 height = 2;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(long value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * block height of the latest know block in request node
       * </pre>
       *
       * <code>uint64 height = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        
        height_ = 0L;
        onChanged();
        return this;
      }

      private long numBlocks_ ;
      /**
       * <pre>
       * fetch block num
       * </pre>
       *
       * <code>uint64 num_blocks = 3;</code>
       * @return The numBlocks.
       */
      @java.lang.Override
      public long getNumBlocks() {
        return numBlocks_;
      }
      /**
       * <pre>
       * fetch block num
       * </pre>
       *
       * <code>uint64 num_blocks = 3;</code>
       * @param value The numBlocks to set.
       * @return This builder for chaining.
       */
      public Builder setNumBlocks(long value) {
        
        numBlocks_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * fetch block num
       * </pre>
       *
       * <code>uint64 num_blocks = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumBlocks() {
        
        numBlocks_ = 0L;
        onChanged();
        return this;
      }

      private long authorIdx_ ;
      /**
       * <pre>
       * index of the request node;
       * </pre>
       *
       * <code>uint64 author_idx = 4;</code>
       * @return The authorIdx.
       */
      @java.lang.Override
      public long getAuthorIdx() {
        return authorIdx_;
      }
      /**
       * <pre>
       * index of the request node;
       * </pre>
       *
       * <code>uint64 author_idx = 4;</code>
       * @param value The authorIdx to set.
       * @return This builder for chaining.
       */
      public Builder setAuthorIdx(long value) {
        
        authorIdx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * index of the request node;
       * </pre>
       *
       * <code>uint64 author_idx = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearAuthorIdx() {
        
        authorIdx_ = 0L;
        onChanged();
        return this;
      }

      private long reqId_ ;
      /**
       * <pre>
       * unique id of the request
       * </pre>
       *
       * <code>uint64 req_id = 5;</code>
       * @return The reqId.
       */
      @java.lang.Override
      public long getReqId() {
        return reqId_;
      }
      /**
       * <pre>
       * unique id of the request
       * </pre>
       *
       * <code>uint64 req_id = 5;</code>
       * @param value The reqId to set.
       * @return This builder for chaining.
       */
      public Builder setReqId(long value) {
        
        reqId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id of the request
       * </pre>
       *
       * <code>uint64 req_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearReqId() {
        
        reqId_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString commitBlock_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * id of the commit block in request node
       * </pre>
       *
       * <code>bytes commit_block = 6;</code>
       * @return The commitBlock.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getCommitBlock() {
        return commitBlock_;
      }
      /**
       * <pre>
       * id of the commit block in request node
       * </pre>
       *
       * <code>bytes commit_block = 6;</code>
       * @param value The commitBlock to set.
       * @return This builder for chaining.
       */
      public Builder setCommitBlock(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        commitBlock_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * id of the commit block in request node
       * </pre>
       *
       * <code>bytes commit_block = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearCommitBlock() {
        
        commitBlock_ = getDefaultInstance().getCommitBlock();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString lockedBLock_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * id of the locked block in request node
       * </pre>
       *
       * <code>bytes locked_bLock = 7;</code>
       * @return The lockedBLock.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getLockedBLock() {
        return lockedBLock_;
      }
      /**
       * <pre>
       * id of the locked block in request node
       * </pre>
       *
       * <code>bytes locked_bLock = 7;</code>
       * @param value The lockedBLock to set.
       * @return This builder for chaining.
       */
      public Builder setLockedBLock(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lockedBLock_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * id of the locked block in request node
       * </pre>
       *
       * <code>bytes locked_bLock = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearLockedBLock() {
        
        lockedBLock_ = getDefaultInstance().getLockedBLock();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:maxbft.BlockFetchMsg)
    }

    // @@protoc_insertion_point(class_scope:maxbft.BlockFetchMsg)
    private static final org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg();
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BlockFetchMsg>
        PARSER = new com.google.protobuf.AbstractParser<BlockFetchMsg>() {
      @java.lang.Override
      public BlockFetchMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlockFetchMsg(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BlockFetchMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BlockFetchMsg> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BlockPairOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxbft.BlockPair)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.common.Block block = 1;</code>
     * @return Whether the block field is set.
     */
    boolean hasBlock();
    /**
     * <code>.common.Block block = 1;</code>
     * @return The block.
     */
    org.chainmaker.pb.common.ChainmakerBlock.Block getBlock();
    /**
     * <code>.common.Block block = 1;</code>
     */
    org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder getBlockOrBuilder();

    /**
     * <code>.maxbft.QuorumCert qc = 2;</code>
     * @return Whether the qc field is set.
     */
    boolean hasQc();
    /**
     * <code>.maxbft.QuorumCert qc = 2;</code>
     * @return The qc.
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert getQc();
    /**
     * <code>.maxbft.QuorumCert qc = 2;</code>
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder getQcOrBuilder();
  }
  /**
   * Protobuf type {@code maxbft.BlockPair}
   */
  public static final class BlockPair extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:maxbft.BlockPair)
      BlockPairOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BlockPair.newBuilder() to construct.
    private BlockPair(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BlockPair() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BlockPair();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BlockPair(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.chainmaker.pb.common.ChainmakerBlock.Block.Builder subBuilder = null;
              if (block_ != null) {
                subBuilder = block_.toBuilder();
              }
              block_ = input.readMessage(org.chainmaker.pb.common.ChainmakerBlock.Block.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(block_);
                block_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder subBuilder = null;
              if (qc_ != null) {
                subBuilder = qc_.toBuilder();
              }
              qc_ = input.readMessage(org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(qc_);
                qc_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_BlockPair_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_BlockPair_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair.class, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair.Builder.class);
    }

    public static final int BLOCK_FIELD_NUMBER = 1;
    private org.chainmaker.pb.common.ChainmakerBlock.Block block_;
    /**
     * <code>.common.Block block = 1;</code>
     * @return Whether the block field is set.
     */
    @java.lang.Override
    public boolean hasBlock() {
      return block_ != null;
    }
    /**
     * <code>.common.Block block = 1;</code>
     * @return The block.
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.Block getBlock() {
      return block_ == null ? org.chainmaker.pb.common.ChainmakerBlock.Block.getDefaultInstance() : block_;
    }
    /**
     * <code>.common.Block block = 1;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder getBlockOrBuilder() {
      return getBlock();
    }

    public static final int QC_FIELD_NUMBER = 2;
    private org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert qc_;
    /**
     * <code>.maxbft.QuorumCert qc = 2;</code>
     * @return Whether the qc field is set.
     */
    @java.lang.Override
    public boolean hasQc() {
      return qc_ != null;
    }
    /**
     * <code>.maxbft.QuorumCert qc = 2;</code>
     * @return The qc.
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert getQc() {
      return qc_ == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.getDefaultInstance() : qc_;
    }
    /**
     * <code>.maxbft.QuorumCert qc = 2;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder getQcOrBuilder() {
      return getQc();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (block_ != null) {
        output.writeMessage(1, getBlock());
      }
      if (qc_ != null) {
        output.writeMessage(2, getQc());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (block_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBlock());
      }
      if (qc_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getQc());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair other = (org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair) obj;

      if (hasBlock() != other.hasBlock()) return false;
      if (hasBlock()) {
        if (!getBlock()
            .equals(other.getBlock())) return false;
      }
      if (hasQc() != other.hasQc()) return false;
      if (hasQc()) {
        if (!getQc()
            .equals(other.getQc())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBlock()) {
        hash = (37 * hash) + BLOCK_FIELD_NUMBER;
        hash = (53 * hash) + getBlock().hashCode();
      }
      if (hasQc()) {
        hash = (37 * hash) + QC_FIELD_NUMBER;
        hash = (53 * hash) + getQc().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxbft.BlockPair}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxbft.BlockPair)
        org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPairOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_BlockPair_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_BlockPair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair.class, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair.Builder.class);
      }

      // Construct using org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (blockBuilder_ == null) {
          block_ = null;
        } else {
          block_ = null;
          blockBuilder_ = null;
        }
        if (qcBuilder_ == null) {
          qc_ = null;
        } else {
          qc_ = null;
          qcBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_BlockPair_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair getDefaultInstanceForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair build() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair buildPartial() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair result = new org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair(this);
        if (blockBuilder_ == null) {
          result.block_ = block_;
        } else {
          result.block_ = blockBuilder_.build();
        }
        if (qcBuilder_ == null) {
          result.qc_ = qc_;
        } else {
          result.qc_ = qcBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair) {
          return mergeFrom((org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair other) {
        if (other == org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair.getDefaultInstance()) return this;
        if (other.hasBlock()) {
          mergeBlock(other.getBlock());
        }
        if (other.hasQc()) {
          mergeQc(other.getQc());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.chainmaker.pb.common.ChainmakerBlock.Block block_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.Block, org.chainmaker.pb.common.ChainmakerBlock.Block.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder> blockBuilder_;
      /**
       * <code>.common.Block block = 1;</code>
       * @return Whether the block field is set.
       */
      public boolean hasBlock() {
        return blockBuilder_ != null || block_ != null;
      }
      /**
       * <code>.common.Block block = 1;</code>
       * @return The block.
       */
      public org.chainmaker.pb.common.ChainmakerBlock.Block getBlock() {
        if (blockBuilder_ == null) {
          return block_ == null ? org.chainmaker.pb.common.ChainmakerBlock.Block.getDefaultInstance() : block_;
        } else {
          return blockBuilder_.getMessage();
        }
      }
      /**
       * <code>.common.Block block = 1;</code>
       */
      public Builder setBlock(org.chainmaker.pb.common.ChainmakerBlock.Block value) {
        if (blockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          block_ = value;
          onChanged();
        } else {
          blockBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.common.Block block = 1;</code>
       */
      public Builder setBlock(
          org.chainmaker.pb.common.ChainmakerBlock.Block.Builder builderForValue) {
        if (blockBuilder_ == null) {
          block_ = builderForValue.build();
          onChanged();
        } else {
          blockBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.common.Block block = 1;</code>
       */
      public Builder mergeBlock(org.chainmaker.pb.common.ChainmakerBlock.Block value) {
        if (blockBuilder_ == null) {
          if (block_ != null) {
            block_ =
              org.chainmaker.pb.common.ChainmakerBlock.Block.newBuilder(block_).mergeFrom(value).buildPartial();
          } else {
            block_ = value;
          }
          onChanged();
        } else {
          blockBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.common.Block block = 1;</code>
       */
      public Builder clearBlock() {
        if (blockBuilder_ == null) {
          block_ = null;
          onChanged();
        } else {
          block_ = null;
          blockBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.common.Block block = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.Block.Builder getBlockBuilder() {
        
        onChanged();
        return getBlockFieldBuilder().getBuilder();
      }
      /**
       * <code>.common.Block block = 1;</code>
       */
      public org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder getBlockOrBuilder() {
        if (blockBuilder_ != null) {
          return blockBuilder_.getMessageOrBuilder();
        } else {
          return block_ == null ?
              org.chainmaker.pb.common.ChainmakerBlock.Block.getDefaultInstance() : block_;
        }
      }
      /**
       * <code>.common.Block block = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.ChainmakerBlock.Block, org.chainmaker.pb.common.ChainmakerBlock.Block.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder> 
          getBlockFieldBuilder() {
        if (blockBuilder_ == null) {
          blockBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.common.ChainmakerBlock.Block, org.chainmaker.pb.common.ChainmakerBlock.Block.Builder, org.chainmaker.pb.common.ChainmakerBlock.BlockOrBuilder>(
                  getBlock(),
                  getParentForChildren(),
                  isClean());
          block_ = null;
        }
        return blockBuilder_;
      }

      private org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert qc_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder> qcBuilder_;
      /**
       * <code>.maxbft.QuorumCert qc = 2;</code>
       * @return Whether the qc field is set.
       */
      public boolean hasQc() {
        return qcBuilder_ != null || qc_ != null;
      }
      /**
       * <code>.maxbft.QuorumCert qc = 2;</code>
       * @return The qc.
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert getQc() {
        if (qcBuilder_ == null) {
          return qc_ == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.getDefaultInstance() : qc_;
        } else {
          return qcBuilder_.getMessage();
        }
      }
      /**
       * <code>.maxbft.QuorumCert qc = 2;</code>
       */
      public Builder setQc(org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert value) {
        if (qcBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          qc_ = value;
          onChanged();
        } else {
          qcBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.maxbft.QuorumCert qc = 2;</code>
       */
      public Builder setQc(
          org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder builderForValue) {
        if (qcBuilder_ == null) {
          qc_ = builderForValue.build();
          onChanged();
        } else {
          qcBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.maxbft.QuorumCert qc = 2;</code>
       */
      public Builder mergeQc(org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert value) {
        if (qcBuilder_ == null) {
          if (qc_ != null) {
            qc_ =
              org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.newBuilder(qc_).mergeFrom(value).buildPartial();
          } else {
            qc_ = value;
          }
          onChanged();
        } else {
          qcBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.maxbft.QuorumCert qc = 2;</code>
       */
      public Builder clearQc() {
        if (qcBuilder_ == null) {
          qc_ = null;
          onChanged();
        } else {
          qc_ = null;
          qcBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.maxbft.QuorumCert qc = 2;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder getQcBuilder() {
        
        onChanged();
        return getQcFieldBuilder().getBuilder();
      }
      /**
       * <code>.maxbft.QuorumCert qc = 2;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder getQcOrBuilder() {
        if (qcBuilder_ != null) {
          return qcBuilder_.getMessageOrBuilder();
        } else {
          return qc_ == null ?
              org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.getDefaultInstance() : qc_;
        }
      }
      /**
       * <code>.maxbft.QuorumCert qc = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder> 
          getQcFieldBuilder() {
        if (qcBuilder_ == null) {
          qcBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCert.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.QuorumCertOrBuilder>(
                  getQc(),
                  getParentForChildren(),
                  isClean());
          qc_ = null;
        }
        return qcBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:maxbft.BlockPair)
    }

    // @@protoc_insertion_point(class_scope:maxbft.BlockPair)
    private static final org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair();
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BlockPair>
        PARSER = new com.google.protobuf.AbstractParser<BlockPair>() {
      @java.lang.Override
      public BlockPair parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlockPair(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BlockPair> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BlockPair> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BlockFetchRespMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxbft.BlockFetchRespMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * response status
     * </pre>
     *
     * <code>.maxbft.BlockFetchStatus status = 1;</code>
     * @return The enum numeric value on the wire for status.
     */
    int getStatusValue();
    /**
     * <pre>
     * response status
     * </pre>
     *
     * <code>.maxbft.BlockFetchStatus status = 1;</code>
     * @return The status.
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchStatus getStatus();

    /**
     * <pre>
     * block in response
     * </pre>
     *
     * <code>repeated .maxbft.BlockPair blocks = 2;</code>
     */
    java.util.List<org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair> 
        getBlocksList();
    /**
     * <pre>
     * block in response
     * </pre>
     *
     * <code>repeated .maxbft.BlockPair blocks = 2;</code>
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair getBlocks(int index);
    /**
     * <pre>
     * block in response
     * </pre>
     *
     * <code>repeated .maxbft.BlockPair blocks = 2;</code>
     */
    int getBlocksCount();
    /**
     * <pre>
     * block in response
     * </pre>
     *
     * <code>repeated .maxbft.BlockPair blocks = 2;</code>
     */
    java.util.List<? extends org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPairOrBuilder> 
        getBlocksOrBuilderList();
    /**
     * <pre>
     * block in response
     * </pre>
     *
     * <code>repeated .maxbft.BlockPair blocks = 2;</code>
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPairOrBuilder getBlocksOrBuilder(
        int index);

    /**
     * <pre>
     * index of the response node
     * </pre>
     *
     * <code>uint64 author_idx = 3;</code>
     * @return The authorIdx.
     */
    long getAuthorIdx();

    /**
     * <pre>
     * unique id of the response which is the request id
     * </pre>
     *
     * <code>uint64 resp_id = 4;</code>
     * @return The respId.
     */
    long getRespId();
  }
  /**
   * Protobuf type {@code maxbft.BlockFetchRespMsg}
   */
  public static final class BlockFetchRespMsg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:maxbft.BlockFetchRespMsg)
      BlockFetchRespMsgOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BlockFetchRespMsg.newBuilder() to construct.
    private BlockFetchRespMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BlockFetchRespMsg() {
      status_ = 0;
      blocks_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BlockFetchRespMsg();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BlockFetchRespMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              status_ = rawValue;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                blocks_ = new java.util.ArrayList<org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair>();
                mutable_bitField0_ |= 0x00000001;
              }
              blocks_.add(
                  input.readMessage(org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair.parser(), extensionRegistry));
              break;
            }
            case 24: {

              authorIdx_ = input.readUInt64();
              break;
            }
            case 32: {

              respId_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          blocks_ = java.util.Collections.unmodifiableList(blocks_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_BlockFetchRespMsg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_BlockFetchRespMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg.class, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg.Builder.class);
    }

    public static final int STATUS_FIELD_NUMBER = 1;
    private int status_;
    /**
     * <pre>
     * response status
     * </pre>
     *
     * <code>.maxbft.BlockFetchStatus status = 1;</code>
     * @return The enum numeric value on the wire for status.
     */
    @java.lang.Override public int getStatusValue() {
      return status_;
    }
    /**
     * <pre>
     * response status
     * </pre>
     *
     * <code>.maxbft.BlockFetchStatus status = 1;</code>
     * @return The status.
     */
    @java.lang.Override public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchStatus getStatus() {
      @SuppressWarnings("deprecation")
      org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchStatus result = org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchStatus.valueOf(status_);
      return result == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchStatus.UNRECOGNIZED : result;
    }

    public static final int BLOCKS_FIELD_NUMBER = 2;
    private java.util.List<org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair> blocks_;
    /**
     * <pre>
     * block in response
     * </pre>
     *
     * <code>repeated .maxbft.BlockPair blocks = 2;</code>
     */
    @java.lang.Override
    public java.util.List<org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair> getBlocksList() {
      return blocks_;
    }
    /**
     * <pre>
     * block in response
     * </pre>
     *
     * <code>repeated .maxbft.BlockPair blocks = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPairOrBuilder> 
        getBlocksOrBuilderList() {
      return blocks_;
    }
    /**
     * <pre>
     * block in response
     * </pre>
     *
     * <code>repeated .maxbft.BlockPair blocks = 2;</code>
     */
    @java.lang.Override
    public int getBlocksCount() {
      return blocks_.size();
    }
    /**
     * <pre>
     * block in response
     * </pre>
     *
     * <code>repeated .maxbft.BlockPair blocks = 2;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair getBlocks(int index) {
      return blocks_.get(index);
    }
    /**
     * <pre>
     * block in response
     * </pre>
     *
     * <code>repeated .maxbft.BlockPair blocks = 2;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPairOrBuilder getBlocksOrBuilder(
        int index) {
      return blocks_.get(index);
    }

    public static final int AUTHOR_IDX_FIELD_NUMBER = 3;
    private long authorIdx_;
    /**
     * <pre>
     * index of the response node
     * </pre>
     *
     * <code>uint64 author_idx = 3;</code>
     * @return The authorIdx.
     */
    @java.lang.Override
    public long getAuthorIdx() {
      return authorIdx_;
    }

    public static final int RESP_ID_FIELD_NUMBER = 4;
    private long respId_;
    /**
     * <pre>
     * unique id of the response which is the request id
     * </pre>
     *
     * <code>uint64 resp_id = 4;</code>
     * @return The respId.
     */
    @java.lang.Override
    public long getRespId() {
      return respId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (status_ != org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchStatus.SUCCEEDED.getNumber()) {
        output.writeEnum(1, status_);
      }
      for (int i = 0; i < blocks_.size(); i++) {
        output.writeMessage(2, blocks_.get(i));
      }
      if (authorIdx_ != 0L) {
        output.writeUInt64(3, authorIdx_);
      }
      if (respId_ != 0L) {
        output.writeUInt64(4, respId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (status_ != org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchStatus.SUCCEEDED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_);
      }
      for (int i = 0; i < blocks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, blocks_.get(i));
      }
      if (authorIdx_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, authorIdx_);
      }
      if (respId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, respId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg other = (org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg) obj;

      if (status_ != other.status_) return false;
      if (!getBlocksList()
          .equals(other.getBlocksList())) return false;
      if (getAuthorIdx()
          != other.getAuthorIdx()) return false;
      if (getRespId()
          != other.getRespId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + status_;
      if (getBlocksCount() > 0) {
        hash = (37 * hash) + BLOCKS_FIELD_NUMBER;
        hash = (53 * hash) + getBlocksList().hashCode();
      }
      hash = (37 * hash) + AUTHOR_IDX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAuthorIdx());
      hash = (37 * hash) + RESP_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRespId());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxbft.BlockFetchRespMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxbft.BlockFetchRespMsg)
        org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_BlockFetchRespMsg_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_BlockFetchRespMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg.class, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg.Builder.class);
      }

      // Construct using org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBlocksFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        status_ = 0;

        if (blocksBuilder_ == null) {
          blocks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          blocksBuilder_.clear();
        }
        authorIdx_ = 0L;

        respId_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_BlockFetchRespMsg_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg getDefaultInstanceForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg build() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg buildPartial() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg result = new org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg(this);
        int from_bitField0_ = bitField0_;
        result.status_ = status_;
        if (blocksBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            blocks_ = java.util.Collections.unmodifiableList(blocks_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.blocks_ = blocks_;
        } else {
          result.blocks_ = blocksBuilder_.build();
        }
        result.authorIdx_ = authorIdx_;
        result.respId_ = respId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg) {
          return mergeFrom((org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg other) {
        if (other == org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg.getDefaultInstance()) return this;
        if (other.status_ != 0) {
          setStatusValue(other.getStatusValue());
        }
        if (blocksBuilder_ == null) {
          if (!other.blocks_.isEmpty()) {
            if (blocks_.isEmpty()) {
              blocks_ = other.blocks_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBlocksIsMutable();
              blocks_.addAll(other.blocks_);
            }
            onChanged();
          }
        } else {
          if (!other.blocks_.isEmpty()) {
            if (blocksBuilder_.isEmpty()) {
              blocksBuilder_.dispose();
              blocksBuilder_ = null;
              blocks_ = other.blocks_;
              bitField0_ = (bitField0_ & ~0x00000001);
              blocksBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBlocksFieldBuilder() : null;
            } else {
              blocksBuilder_.addAllMessages(other.blocks_);
            }
          }
        }
        if (other.getAuthorIdx() != 0L) {
          setAuthorIdx(other.getAuthorIdx());
        }
        if (other.getRespId() != 0L) {
          setRespId(other.getRespId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int status_ = 0;
      /**
       * <pre>
       * response status
       * </pre>
       *
       * <code>.maxbft.BlockFetchStatus status = 1;</code>
       * @return The enum numeric value on the wire for status.
       */
      @java.lang.Override public int getStatusValue() {
        return status_;
      }
      /**
       * <pre>
       * response status
       * </pre>
       *
       * <code>.maxbft.BlockFetchStatus status = 1;</code>
       * @param value The enum numeric value on the wire for status to set.
       * @return This builder for chaining.
       */
      public Builder setStatusValue(int value) {
        
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * response status
       * </pre>
       *
       * <code>.maxbft.BlockFetchStatus status = 1;</code>
       * @return The status.
       */
      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchStatus getStatus() {
        @SuppressWarnings("deprecation")
        org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchStatus result = org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchStatus.valueOf(status_);
        return result == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchStatus.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * response status
       * </pre>
       *
       * <code>.maxbft.BlockFetchStatus status = 1;</code>
       * @param value The status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        status_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * response status
       * </pre>
       *
       * <code>.maxbft.BlockFetchStatus status = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        
        status_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair> blocks_ =
        java.util.Collections.emptyList();
      private void ensureBlocksIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          blocks_ = new java.util.ArrayList<org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair>(blocks_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPairOrBuilder> blocksBuilder_;

      /**
       * <pre>
       * block in response
       * </pre>
       *
       * <code>repeated .maxbft.BlockPair blocks = 2;</code>
       */
      public java.util.List<org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair> getBlocksList() {
        if (blocksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(blocks_);
        } else {
          return blocksBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * block in response
       * </pre>
       *
       * <code>repeated .maxbft.BlockPair blocks = 2;</code>
       */
      public int getBlocksCount() {
        if (blocksBuilder_ == null) {
          return blocks_.size();
        } else {
          return blocksBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * block in response
       * </pre>
       *
       * <code>repeated .maxbft.BlockPair blocks = 2;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair getBlocks(int index) {
        if (blocksBuilder_ == null) {
          return blocks_.get(index);
        } else {
          return blocksBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * block in response
       * </pre>
       *
       * <code>repeated .maxbft.BlockPair blocks = 2;</code>
       */
      public Builder setBlocks(
          int index, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair value) {
        if (blocksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBlocksIsMutable();
          blocks_.set(index, value);
          onChanged();
        } else {
          blocksBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * block in response
       * </pre>
       *
       * <code>repeated .maxbft.BlockPair blocks = 2;</code>
       */
      public Builder setBlocks(
          int index, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair.Builder builderForValue) {
        if (blocksBuilder_ == null) {
          ensureBlocksIsMutable();
          blocks_.set(index, builderForValue.build());
          onChanged();
        } else {
          blocksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * block in response
       * </pre>
       *
       * <code>repeated .maxbft.BlockPair blocks = 2;</code>
       */
      public Builder addBlocks(org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair value) {
        if (blocksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBlocksIsMutable();
          blocks_.add(value);
          onChanged();
        } else {
          blocksBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * block in response
       * </pre>
       *
       * <code>repeated .maxbft.BlockPair blocks = 2;</code>
       */
      public Builder addBlocks(
          int index, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair value) {
        if (blocksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBlocksIsMutable();
          blocks_.add(index, value);
          onChanged();
        } else {
          blocksBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * block in response
       * </pre>
       *
       * <code>repeated .maxbft.BlockPair blocks = 2;</code>
       */
      public Builder addBlocks(
          org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair.Builder builderForValue) {
        if (blocksBuilder_ == null) {
          ensureBlocksIsMutable();
          blocks_.add(builderForValue.build());
          onChanged();
        } else {
          blocksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * block in response
       * </pre>
       *
       * <code>repeated .maxbft.BlockPair blocks = 2;</code>
       */
      public Builder addBlocks(
          int index, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair.Builder builderForValue) {
        if (blocksBuilder_ == null) {
          ensureBlocksIsMutable();
          blocks_.add(index, builderForValue.build());
          onChanged();
        } else {
          blocksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * block in response
       * </pre>
       *
       * <code>repeated .maxbft.BlockPair blocks = 2;</code>
       */
      public Builder addAllBlocks(
          java.lang.Iterable<? extends org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair> values) {
        if (blocksBuilder_ == null) {
          ensureBlocksIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, blocks_);
          onChanged();
        } else {
          blocksBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * block in response
       * </pre>
       *
       * <code>repeated .maxbft.BlockPair blocks = 2;</code>
       */
      public Builder clearBlocks() {
        if (blocksBuilder_ == null) {
          blocks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          blocksBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * block in response
       * </pre>
       *
       * <code>repeated .maxbft.BlockPair blocks = 2;</code>
       */
      public Builder removeBlocks(int index) {
        if (blocksBuilder_ == null) {
          ensureBlocksIsMutable();
          blocks_.remove(index);
          onChanged();
        } else {
          blocksBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * block in response
       * </pre>
       *
       * <code>repeated .maxbft.BlockPair blocks = 2;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair.Builder getBlocksBuilder(
          int index) {
        return getBlocksFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * block in response
       * </pre>
       *
       * <code>repeated .maxbft.BlockPair blocks = 2;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPairOrBuilder getBlocksOrBuilder(
          int index) {
        if (blocksBuilder_ == null) {
          return blocks_.get(index);  } else {
          return blocksBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * block in response
       * </pre>
       *
       * <code>repeated .maxbft.BlockPair blocks = 2;</code>
       */
      public java.util.List<? extends org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPairOrBuilder> 
           getBlocksOrBuilderList() {
        if (blocksBuilder_ != null) {
          return blocksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(blocks_);
        }
      }
      /**
       * <pre>
       * block in response
       * </pre>
       *
       * <code>repeated .maxbft.BlockPair blocks = 2;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair.Builder addBlocksBuilder() {
        return getBlocksFieldBuilder().addBuilder(
            org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair.getDefaultInstance());
      }
      /**
       * <pre>
       * block in response
       * </pre>
       *
       * <code>repeated .maxbft.BlockPair blocks = 2;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair.Builder addBlocksBuilder(
          int index) {
        return getBlocksFieldBuilder().addBuilder(
            index, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair.getDefaultInstance());
      }
      /**
       * <pre>
       * block in response
       * </pre>
       *
       * <code>repeated .maxbft.BlockPair blocks = 2;</code>
       */
      public java.util.List<org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair.Builder> 
           getBlocksBuilderList() {
        return getBlocksFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPairOrBuilder> 
          getBlocksFieldBuilder() {
        if (blocksBuilder_ == null) {
          blocksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPair.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockPairOrBuilder>(
                  blocks_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          blocks_ = null;
        }
        return blocksBuilder_;
      }

      private long authorIdx_ ;
      /**
       * <pre>
       * index of the response node
       * </pre>
       *
       * <code>uint64 author_idx = 3;</code>
       * @return The authorIdx.
       */
      @java.lang.Override
      public long getAuthorIdx() {
        return authorIdx_;
      }
      /**
       * <pre>
       * index of the response node
       * </pre>
       *
       * <code>uint64 author_idx = 3;</code>
       * @param value The authorIdx to set.
       * @return This builder for chaining.
       */
      public Builder setAuthorIdx(long value) {
        
        authorIdx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * index of the response node
       * </pre>
       *
       * <code>uint64 author_idx = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAuthorIdx() {
        
        authorIdx_ = 0L;
        onChanged();
        return this;
      }

      private long respId_ ;
      /**
       * <pre>
       * unique id of the response which is the request id
       * </pre>
       *
       * <code>uint64 resp_id = 4;</code>
       * @return The respId.
       */
      @java.lang.Override
      public long getRespId() {
        return respId_;
      }
      /**
       * <pre>
       * unique id of the response which is the request id
       * </pre>
       *
       * <code>uint64 resp_id = 4;</code>
       * @param value The respId to set.
       * @return This builder for chaining.
       */
      public Builder setRespId(long value) {
        
        respId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id of the response which is the request id
       * </pre>
       *
       * <code>uint64 resp_id = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRespId() {
        
        respId_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:maxbft.BlockFetchRespMsg)
    }

    // @@protoc_insertion_point(class_scope:maxbft.BlockFetchRespMsg)
    private static final org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg();
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BlockFetchRespMsg>
        PARSER = new com.google.protobuf.AbstractParser<BlockFetchRespMsg>() {
      @java.lang.Override
      public BlockFetchRespMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlockFetchRespMsg(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BlockFetchRespMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BlockFetchRespMsg> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConsensusPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxbft.ConsensusPayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.maxbft.MessageType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.maxbft.MessageType type = 1;</code>
     * @return The type.
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType getType();

    /**
     * <code>.maxbft.ProposalMsg proposal_msg = 2;</code>
     * @return Whether the proposalMsg field is set.
     */
    boolean hasProposalMsg();
    /**
     * <code>.maxbft.ProposalMsg proposal_msg = 2;</code>
     * @return The proposalMsg.
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg getProposalMsg();
    /**
     * <code>.maxbft.ProposalMsg proposal_msg = 2;</code>
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsgOrBuilder getProposalMsgOrBuilder();

    /**
     * <code>.maxbft.VoteMsg vote_msg = 3;</code>
     * @return Whether the voteMsg field is set.
     */
    boolean hasVoteMsg();
    /**
     * <code>.maxbft.VoteMsg vote_msg = 3;</code>
     * @return The voteMsg.
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg getVoteMsg();
    /**
     * <code>.maxbft.VoteMsg vote_msg = 3;</code>
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsgOrBuilder getVoteMsgOrBuilder();

    /**
     * <code>.maxbft.BlockFetchMsg block_fetch_msg = 4;</code>
     * @return Whether the blockFetchMsg field is set.
     */
    boolean hasBlockFetchMsg();
    /**
     * <code>.maxbft.BlockFetchMsg block_fetch_msg = 4;</code>
     * @return The blockFetchMsg.
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg getBlockFetchMsg();
    /**
     * <code>.maxbft.BlockFetchMsg block_fetch_msg = 4;</code>
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsgOrBuilder getBlockFetchMsgOrBuilder();

    /**
     * <code>.maxbft.BlockFetchRespMsg block_fetch_resp_msg = 5;</code>
     * @return Whether the blockFetchRespMsg field is set.
     */
    boolean hasBlockFetchRespMsg();
    /**
     * <code>.maxbft.BlockFetchRespMsg block_fetch_resp_msg = 5;</code>
     * @return The blockFetchRespMsg.
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg getBlockFetchRespMsg();
    /**
     * <code>.maxbft.BlockFetchRespMsg block_fetch_resp_msg = 5;</code>
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsgOrBuilder getBlockFetchRespMsgOrBuilder();

    public org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload.DataCase getDataCase();
  }
  /**
   * Protobuf type {@code maxbft.ConsensusPayload}
   */
  public static final class ConsensusPayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:maxbft.ConsensusPayload)
      ConsensusPayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConsensusPayload.newBuilder() to construct.
    private ConsensusPayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConsensusPayload() {
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ConsensusPayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConsensusPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg.Builder subBuilder = null;
              if (dataCase_ == 2) {
                subBuilder = ((org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg) data_).toBuilder();
              }
              data_ =
                  input.readMessage(org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 2;
              break;
            }
            case 26: {
              org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg.Builder subBuilder = null;
              if (dataCase_ == 3) {
                subBuilder = ((org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg) data_).toBuilder();
              }
              data_ =
                  input.readMessage(org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 3;
              break;
            }
            case 34: {
              org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg.Builder subBuilder = null;
              if (dataCase_ == 4) {
                subBuilder = ((org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg) data_).toBuilder();
              }
              data_ =
                  input.readMessage(org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 4;
              break;
            }
            case 42: {
              org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg.Builder subBuilder = null;
              if (dataCase_ == 5) {
                subBuilder = ((org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg) data_).toBuilder();
              }
              data_ =
                  input.readMessage(org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 5;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ConsensusPayload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ConsensusPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload.class, org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload.Builder.class);
    }

    private int dataCase_ = 0;
    private java.lang.Object data_;
    public enum DataCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      PROPOSAL_MSG(2),
      VOTE_MSG(3),
      BLOCK_FETCH_MSG(4),
      BLOCK_FETCH_RESP_MSG(5),
      DATA_NOT_SET(0);
      private final int value;
      private DataCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DataCase valueOf(int value) {
        return forNumber(value);
      }

      public static DataCase forNumber(int value) {
        switch (value) {
          case 2: return PROPOSAL_MSG;
          case 3: return VOTE_MSG;
          case 4: return BLOCK_FETCH_MSG;
          case 5: return BLOCK_FETCH_RESP_MSG;
          case 0: return DATA_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public DataCase
    getDataCase() {
      return DataCase.forNumber(
          dataCase_);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.maxbft.MessageType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.maxbft.MessageType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType getType() {
      @SuppressWarnings("deprecation")
      org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType result = org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType.valueOf(type_);
      return result == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType.UNRECOGNIZED : result;
    }

    public static final int PROPOSAL_MSG_FIELD_NUMBER = 2;
    /**
     * <code>.maxbft.ProposalMsg proposal_msg = 2;</code>
     * @return Whether the proposalMsg field is set.
     */
    @java.lang.Override
    public boolean hasProposalMsg() {
      return dataCase_ == 2;
    }
    /**
     * <code>.maxbft.ProposalMsg proposal_msg = 2;</code>
     * @return The proposalMsg.
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg getProposalMsg() {
      if (dataCase_ == 2) {
         return (org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg) data_;
      }
      return org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg.getDefaultInstance();
    }
    /**
     * <code>.maxbft.ProposalMsg proposal_msg = 2;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsgOrBuilder getProposalMsgOrBuilder() {
      if (dataCase_ == 2) {
         return (org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg) data_;
      }
      return org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg.getDefaultInstance();
    }

    public static final int VOTE_MSG_FIELD_NUMBER = 3;
    /**
     * <code>.maxbft.VoteMsg vote_msg = 3;</code>
     * @return Whether the voteMsg field is set.
     */
    @java.lang.Override
    public boolean hasVoteMsg() {
      return dataCase_ == 3;
    }
    /**
     * <code>.maxbft.VoteMsg vote_msg = 3;</code>
     * @return The voteMsg.
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg getVoteMsg() {
      if (dataCase_ == 3) {
         return (org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg) data_;
      }
      return org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg.getDefaultInstance();
    }
    /**
     * <code>.maxbft.VoteMsg vote_msg = 3;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsgOrBuilder getVoteMsgOrBuilder() {
      if (dataCase_ == 3) {
         return (org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg) data_;
      }
      return org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg.getDefaultInstance();
    }

    public static final int BLOCK_FETCH_MSG_FIELD_NUMBER = 4;
    /**
     * <code>.maxbft.BlockFetchMsg block_fetch_msg = 4;</code>
     * @return Whether the blockFetchMsg field is set.
     */
    @java.lang.Override
    public boolean hasBlockFetchMsg() {
      return dataCase_ == 4;
    }
    /**
     * <code>.maxbft.BlockFetchMsg block_fetch_msg = 4;</code>
     * @return The blockFetchMsg.
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg getBlockFetchMsg() {
      if (dataCase_ == 4) {
         return (org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg) data_;
      }
      return org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg.getDefaultInstance();
    }
    /**
     * <code>.maxbft.BlockFetchMsg block_fetch_msg = 4;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsgOrBuilder getBlockFetchMsgOrBuilder() {
      if (dataCase_ == 4) {
         return (org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg) data_;
      }
      return org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg.getDefaultInstance();
    }

    public static final int BLOCK_FETCH_RESP_MSG_FIELD_NUMBER = 5;
    /**
     * <code>.maxbft.BlockFetchRespMsg block_fetch_resp_msg = 5;</code>
     * @return Whether the blockFetchRespMsg field is set.
     */
    @java.lang.Override
    public boolean hasBlockFetchRespMsg() {
      return dataCase_ == 5;
    }
    /**
     * <code>.maxbft.BlockFetchRespMsg block_fetch_resp_msg = 5;</code>
     * @return The blockFetchRespMsg.
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg getBlockFetchRespMsg() {
      if (dataCase_ == 5) {
         return (org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg) data_;
      }
      return org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg.getDefaultInstance();
    }
    /**
     * <code>.maxbft.BlockFetchRespMsg block_fetch_resp_msg = 5;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsgOrBuilder getBlockFetchRespMsgOrBuilder() {
      if (dataCase_ == 5) {
         return (org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg) data_;
      }
      return org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType.PROPOSAL_MESSAGE.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (dataCase_ == 2) {
        output.writeMessage(2, (org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg) data_);
      }
      if (dataCase_ == 3) {
        output.writeMessage(3, (org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg) data_);
      }
      if (dataCase_ == 4) {
        output.writeMessage(4, (org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg) data_);
      }
      if (dataCase_ == 5) {
        output.writeMessage(5, (org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg) data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType.PROPOSAL_MESSAGE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (dataCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg) data_);
      }
      if (dataCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg) data_);
      }
      if (dataCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg) data_);
      }
      if (dataCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg) data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload other = (org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload) obj;

      if (type_ != other.type_) return false;
      if (!getDataCase().equals(other.getDataCase())) return false;
      switch (dataCase_) {
        case 2:
          if (!getProposalMsg()
              .equals(other.getProposalMsg())) return false;
          break;
        case 3:
          if (!getVoteMsg()
              .equals(other.getVoteMsg())) return false;
          break;
        case 4:
          if (!getBlockFetchMsg()
              .equals(other.getBlockFetchMsg())) return false;
          break;
        case 5:
          if (!getBlockFetchRespMsg()
              .equals(other.getBlockFetchRespMsg())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      switch (dataCase_) {
        case 2:
          hash = (37 * hash) + PROPOSAL_MSG_FIELD_NUMBER;
          hash = (53 * hash) + getProposalMsg().hashCode();
          break;
        case 3:
          hash = (37 * hash) + VOTE_MSG_FIELD_NUMBER;
          hash = (53 * hash) + getVoteMsg().hashCode();
          break;
        case 4:
          hash = (37 * hash) + BLOCK_FETCH_MSG_FIELD_NUMBER;
          hash = (53 * hash) + getBlockFetchMsg().hashCode();
          break;
        case 5:
          hash = (37 * hash) + BLOCK_FETCH_RESP_MSG_FIELD_NUMBER;
          hash = (53 * hash) + getBlockFetchRespMsg().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxbft.ConsensusPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxbft.ConsensusPayload)
        org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ConsensusPayload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ConsensusPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload.class, org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload.Builder.class);
      }

      // Construct using org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        dataCase_ = 0;
        data_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ConsensusPayload_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload getDefaultInstanceForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload build() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload buildPartial() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload result = new org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload(this);
        result.type_ = type_;
        if (dataCase_ == 2) {
          if (proposalMsgBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = proposalMsgBuilder_.build();
          }
        }
        if (dataCase_ == 3) {
          if (voteMsgBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = voteMsgBuilder_.build();
          }
        }
        if (dataCase_ == 4) {
          if (blockFetchMsgBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = blockFetchMsgBuilder_.build();
          }
        }
        if (dataCase_ == 5) {
          if (blockFetchRespMsgBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = blockFetchRespMsgBuilder_.build();
          }
        }
        result.dataCase_ = dataCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload) {
          return mergeFrom((org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload other) {
        if (other == org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        switch (other.getDataCase()) {
          case PROPOSAL_MSG: {
            mergeProposalMsg(other.getProposalMsg());
            break;
          }
          case VOTE_MSG: {
            mergeVoteMsg(other.getVoteMsg());
            break;
          }
          case BLOCK_FETCH_MSG: {
            mergeBlockFetchMsg(other.getBlockFetchMsg());
            break;
          }
          case BLOCK_FETCH_RESP_MSG: {
            mergeBlockFetchRespMsg(other.getBlockFetchRespMsg());
            break;
          }
          case DATA_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int dataCase_ = 0;
      private java.lang.Object data_;
      public DataCase
          getDataCase() {
        return DataCase.forNumber(
            dataCase_);
      }

      public Builder clearData() {
        dataCase_ = 0;
        data_ = null;
        onChanged();
        return this;
      }


      private int type_ = 0;
      /**
       * <code>.maxbft.MessageType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.maxbft.MessageType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.maxbft.MessageType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType getType() {
        @SuppressWarnings("deprecation")
        org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType result = org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType.valueOf(type_);
        return result == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType.UNRECOGNIZED : result;
      }
      /**
       * <code>.maxbft.MessageType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.maxbft.MessageType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg, org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsgOrBuilder> proposalMsgBuilder_;
      /**
       * <code>.maxbft.ProposalMsg proposal_msg = 2;</code>
       * @return Whether the proposalMsg field is set.
       */
      @java.lang.Override
      public boolean hasProposalMsg() {
        return dataCase_ == 2;
      }
      /**
       * <code>.maxbft.ProposalMsg proposal_msg = 2;</code>
       * @return The proposalMsg.
       */
      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg getProposalMsg() {
        if (proposalMsgBuilder_ == null) {
          if (dataCase_ == 2) {
            return (org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg) data_;
          }
          return org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg.getDefaultInstance();
        } else {
          if (dataCase_ == 2) {
            return proposalMsgBuilder_.getMessage();
          }
          return org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg.getDefaultInstance();
        }
      }
      /**
       * <code>.maxbft.ProposalMsg proposal_msg = 2;</code>
       */
      public Builder setProposalMsg(org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg value) {
        if (proposalMsgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          proposalMsgBuilder_.setMessage(value);
        }
        dataCase_ = 2;
        return this;
      }
      /**
       * <code>.maxbft.ProposalMsg proposal_msg = 2;</code>
       */
      public Builder setProposalMsg(
          org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg.Builder builderForValue) {
        if (proposalMsgBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          proposalMsgBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 2;
        return this;
      }
      /**
       * <code>.maxbft.ProposalMsg proposal_msg = 2;</code>
       */
      public Builder mergeProposalMsg(org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg value) {
        if (proposalMsgBuilder_ == null) {
          if (dataCase_ == 2 &&
              data_ != org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg.getDefaultInstance()) {
            data_ = org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg.newBuilder((org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 2) {
            proposalMsgBuilder_.mergeFrom(value);
          } else {
            proposalMsgBuilder_.setMessage(value);
          }
        }
        dataCase_ = 2;
        return this;
      }
      /**
       * <code>.maxbft.ProposalMsg proposal_msg = 2;</code>
       */
      public Builder clearProposalMsg() {
        if (proposalMsgBuilder_ == null) {
          if (dataCase_ == 2) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 2) {
            dataCase_ = 0;
            data_ = null;
          }
          proposalMsgBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.maxbft.ProposalMsg proposal_msg = 2;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg.Builder getProposalMsgBuilder() {
        return getProposalMsgFieldBuilder().getBuilder();
      }
      /**
       * <code>.maxbft.ProposalMsg proposal_msg = 2;</code>
       */
      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsgOrBuilder getProposalMsgOrBuilder() {
        if ((dataCase_ == 2) && (proposalMsgBuilder_ != null)) {
          return proposalMsgBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 2) {
            return (org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg) data_;
          }
          return org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg.getDefaultInstance();
        }
      }
      /**
       * <code>.maxbft.ProposalMsg proposal_msg = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg, org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsgOrBuilder> 
          getProposalMsgFieldBuilder() {
        if (proposalMsgBuilder_ == null) {
          if (!(dataCase_ == 2)) {
            data_ = org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg.getDefaultInstance();
          }
          proposalMsgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg, org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsgOrBuilder>(
                  (org.chainmaker.pb.consensus.maxbft.Maxbft.ProposalMsg) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 2;
        onChanged();;
        return proposalMsgBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsgOrBuilder> voteMsgBuilder_;
      /**
       * <code>.maxbft.VoteMsg vote_msg = 3;</code>
       * @return Whether the voteMsg field is set.
       */
      @java.lang.Override
      public boolean hasVoteMsg() {
        return dataCase_ == 3;
      }
      /**
       * <code>.maxbft.VoteMsg vote_msg = 3;</code>
       * @return The voteMsg.
       */
      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg getVoteMsg() {
        if (voteMsgBuilder_ == null) {
          if (dataCase_ == 3) {
            return (org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg) data_;
          }
          return org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg.getDefaultInstance();
        } else {
          if (dataCase_ == 3) {
            return voteMsgBuilder_.getMessage();
          }
          return org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg.getDefaultInstance();
        }
      }
      /**
       * <code>.maxbft.VoteMsg vote_msg = 3;</code>
       */
      public Builder setVoteMsg(org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg value) {
        if (voteMsgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          voteMsgBuilder_.setMessage(value);
        }
        dataCase_ = 3;
        return this;
      }
      /**
       * <code>.maxbft.VoteMsg vote_msg = 3;</code>
       */
      public Builder setVoteMsg(
          org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg.Builder builderForValue) {
        if (voteMsgBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          voteMsgBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 3;
        return this;
      }
      /**
       * <code>.maxbft.VoteMsg vote_msg = 3;</code>
       */
      public Builder mergeVoteMsg(org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg value) {
        if (voteMsgBuilder_ == null) {
          if (dataCase_ == 3 &&
              data_ != org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg.getDefaultInstance()) {
            data_ = org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg.newBuilder((org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 3) {
            voteMsgBuilder_.mergeFrom(value);
          } else {
            voteMsgBuilder_.setMessage(value);
          }
        }
        dataCase_ = 3;
        return this;
      }
      /**
       * <code>.maxbft.VoteMsg vote_msg = 3;</code>
       */
      public Builder clearVoteMsg() {
        if (voteMsgBuilder_ == null) {
          if (dataCase_ == 3) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 3) {
            dataCase_ = 0;
            data_ = null;
          }
          voteMsgBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.maxbft.VoteMsg vote_msg = 3;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg.Builder getVoteMsgBuilder() {
        return getVoteMsgFieldBuilder().getBuilder();
      }
      /**
       * <code>.maxbft.VoteMsg vote_msg = 3;</code>
       */
      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsgOrBuilder getVoteMsgOrBuilder() {
        if ((dataCase_ == 3) && (voteMsgBuilder_ != null)) {
          return voteMsgBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 3) {
            return (org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg) data_;
          }
          return org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg.getDefaultInstance();
        }
      }
      /**
       * <code>.maxbft.VoteMsg vote_msg = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsgOrBuilder> 
          getVoteMsgFieldBuilder() {
        if (voteMsgBuilder_ == null) {
          if (!(dataCase_ == 3)) {
            data_ = org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg.getDefaultInstance();
          }
          voteMsgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsgOrBuilder>(
                  (org.chainmaker.pb.consensus.maxbft.Maxbft.VoteMsg) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 3;
        onChanged();;
        return voteMsgBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsgOrBuilder> blockFetchMsgBuilder_;
      /**
       * <code>.maxbft.BlockFetchMsg block_fetch_msg = 4;</code>
       * @return Whether the blockFetchMsg field is set.
       */
      @java.lang.Override
      public boolean hasBlockFetchMsg() {
        return dataCase_ == 4;
      }
      /**
       * <code>.maxbft.BlockFetchMsg block_fetch_msg = 4;</code>
       * @return The blockFetchMsg.
       */
      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg getBlockFetchMsg() {
        if (blockFetchMsgBuilder_ == null) {
          if (dataCase_ == 4) {
            return (org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg) data_;
          }
          return org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg.getDefaultInstance();
        } else {
          if (dataCase_ == 4) {
            return blockFetchMsgBuilder_.getMessage();
          }
          return org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg.getDefaultInstance();
        }
      }
      /**
       * <code>.maxbft.BlockFetchMsg block_fetch_msg = 4;</code>
       */
      public Builder setBlockFetchMsg(org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg value) {
        if (blockFetchMsgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          blockFetchMsgBuilder_.setMessage(value);
        }
        dataCase_ = 4;
        return this;
      }
      /**
       * <code>.maxbft.BlockFetchMsg block_fetch_msg = 4;</code>
       */
      public Builder setBlockFetchMsg(
          org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg.Builder builderForValue) {
        if (blockFetchMsgBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          blockFetchMsgBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 4;
        return this;
      }
      /**
       * <code>.maxbft.BlockFetchMsg block_fetch_msg = 4;</code>
       */
      public Builder mergeBlockFetchMsg(org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg value) {
        if (blockFetchMsgBuilder_ == null) {
          if (dataCase_ == 4 &&
              data_ != org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg.getDefaultInstance()) {
            data_ = org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg.newBuilder((org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 4) {
            blockFetchMsgBuilder_.mergeFrom(value);
          } else {
            blockFetchMsgBuilder_.setMessage(value);
          }
        }
        dataCase_ = 4;
        return this;
      }
      /**
       * <code>.maxbft.BlockFetchMsg block_fetch_msg = 4;</code>
       */
      public Builder clearBlockFetchMsg() {
        if (blockFetchMsgBuilder_ == null) {
          if (dataCase_ == 4) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 4) {
            dataCase_ = 0;
            data_ = null;
          }
          blockFetchMsgBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.maxbft.BlockFetchMsg block_fetch_msg = 4;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg.Builder getBlockFetchMsgBuilder() {
        return getBlockFetchMsgFieldBuilder().getBuilder();
      }
      /**
       * <code>.maxbft.BlockFetchMsg block_fetch_msg = 4;</code>
       */
      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsgOrBuilder getBlockFetchMsgOrBuilder() {
        if ((dataCase_ == 4) && (blockFetchMsgBuilder_ != null)) {
          return blockFetchMsgBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 4) {
            return (org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg) data_;
          }
          return org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg.getDefaultInstance();
        }
      }
      /**
       * <code>.maxbft.BlockFetchMsg block_fetch_msg = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsgOrBuilder> 
          getBlockFetchMsgFieldBuilder() {
        if (blockFetchMsgBuilder_ == null) {
          if (!(dataCase_ == 4)) {
            data_ = org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg.getDefaultInstance();
          }
          blockFetchMsgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsgOrBuilder>(
                  (org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchMsg) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 4;
        onChanged();;
        return blockFetchMsgBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsgOrBuilder> blockFetchRespMsgBuilder_;
      /**
       * <code>.maxbft.BlockFetchRespMsg block_fetch_resp_msg = 5;</code>
       * @return Whether the blockFetchRespMsg field is set.
       */
      @java.lang.Override
      public boolean hasBlockFetchRespMsg() {
        return dataCase_ == 5;
      }
      /**
       * <code>.maxbft.BlockFetchRespMsg block_fetch_resp_msg = 5;</code>
       * @return The blockFetchRespMsg.
       */
      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg getBlockFetchRespMsg() {
        if (blockFetchRespMsgBuilder_ == null) {
          if (dataCase_ == 5) {
            return (org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg) data_;
          }
          return org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg.getDefaultInstance();
        } else {
          if (dataCase_ == 5) {
            return blockFetchRespMsgBuilder_.getMessage();
          }
          return org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg.getDefaultInstance();
        }
      }
      /**
       * <code>.maxbft.BlockFetchRespMsg block_fetch_resp_msg = 5;</code>
       */
      public Builder setBlockFetchRespMsg(org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg value) {
        if (blockFetchRespMsgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          blockFetchRespMsgBuilder_.setMessage(value);
        }
        dataCase_ = 5;
        return this;
      }
      /**
       * <code>.maxbft.BlockFetchRespMsg block_fetch_resp_msg = 5;</code>
       */
      public Builder setBlockFetchRespMsg(
          org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg.Builder builderForValue) {
        if (blockFetchRespMsgBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          blockFetchRespMsgBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 5;
        return this;
      }
      /**
       * <code>.maxbft.BlockFetchRespMsg block_fetch_resp_msg = 5;</code>
       */
      public Builder mergeBlockFetchRespMsg(org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg value) {
        if (blockFetchRespMsgBuilder_ == null) {
          if (dataCase_ == 5 &&
              data_ != org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg.getDefaultInstance()) {
            data_ = org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg.newBuilder((org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 5) {
            blockFetchRespMsgBuilder_.mergeFrom(value);
          } else {
            blockFetchRespMsgBuilder_.setMessage(value);
          }
        }
        dataCase_ = 5;
        return this;
      }
      /**
       * <code>.maxbft.BlockFetchRespMsg block_fetch_resp_msg = 5;</code>
       */
      public Builder clearBlockFetchRespMsg() {
        if (blockFetchRespMsgBuilder_ == null) {
          if (dataCase_ == 5) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 5) {
            dataCase_ = 0;
            data_ = null;
          }
          blockFetchRespMsgBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.maxbft.BlockFetchRespMsg block_fetch_resp_msg = 5;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg.Builder getBlockFetchRespMsgBuilder() {
        return getBlockFetchRespMsgFieldBuilder().getBuilder();
      }
      /**
       * <code>.maxbft.BlockFetchRespMsg block_fetch_resp_msg = 5;</code>
       */
      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsgOrBuilder getBlockFetchRespMsgOrBuilder() {
        if ((dataCase_ == 5) && (blockFetchRespMsgBuilder_ != null)) {
          return blockFetchRespMsgBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 5) {
            return (org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg) data_;
          }
          return org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg.getDefaultInstance();
        }
      }
      /**
       * <code>.maxbft.BlockFetchRespMsg block_fetch_resp_msg = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsgOrBuilder> 
          getBlockFetchRespMsgFieldBuilder() {
        if (blockFetchRespMsgBuilder_ == null) {
          if (!(dataCase_ == 5)) {
            data_ = org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg.getDefaultInstance();
          }
          blockFetchRespMsgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsgOrBuilder>(
                  (org.chainmaker.pb.consensus.maxbft.Maxbft.BlockFetchRespMsg) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 5;
        onChanged();;
        return blockFetchRespMsgBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:maxbft.ConsensusPayload)
    }

    // @@protoc_insertion_point(class_scope:maxbft.ConsensusPayload)
    private static final org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload();
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConsensusPayload>
        PARSER = new com.google.protobuf.AbstractParser<ConsensusPayload>() {
      @java.lang.Override
      public ConsensusPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConsensusPayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConsensusPayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConsensusPayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConsensusMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxbft.ConsensusMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.maxbft.ConsensusPayload payload = 1;</code>
     * @return Whether the payload field is set.
     */
    boolean hasPayload();
    /**
     * <code>.maxbft.ConsensusPayload payload = 1;</code>
     * @return The payload.
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload getPayload();
    /**
     * <code>.maxbft.ConsensusPayload payload = 1;</code>
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayloadOrBuilder getPayloadOrBuilder();

    /**
     * <code>.common.EndorsementEntry sign_entry = 2;</code>
     * @return Whether the signEntry field is set.
     */
    boolean hasSignEntry();
    /**
     * <code>.common.EndorsementEntry sign_entry = 2;</code>
     * @return The signEntry.
     */
    org.chainmaker.pb.common.Request.EndorsementEntry getSignEntry();
    /**
     * <code>.common.EndorsementEntry sign_entry = 2;</code>
     */
    org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder getSignEntryOrBuilder();
  }
  /**
   * Protobuf type {@code maxbft.ConsensusMsg}
   */
  public static final class ConsensusMsg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:maxbft.ConsensusMsg)
      ConsensusMsgOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConsensusMsg.newBuilder() to construct.
    private ConsensusMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConsensusMsg() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ConsensusMsg();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConsensusMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload.Builder subBuilder = null;
              if (payload_ != null) {
                subBuilder = payload_.toBuilder();
              }
              payload_ = input.readMessage(org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(payload_);
                payload_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.chainmaker.pb.common.Request.EndorsementEntry.Builder subBuilder = null;
              if (signEntry_ != null) {
                subBuilder = signEntry_.toBuilder();
              }
              signEntry_ = input.readMessage(org.chainmaker.pb.common.Request.EndorsementEntry.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signEntry_);
                signEntry_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ConsensusMsg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ConsensusMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg.class, org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg.Builder.class);
    }

    public static final int PAYLOAD_FIELD_NUMBER = 1;
    private org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload payload_;
    /**
     * <code>.maxbft.ConsensusPayload payload = 1;</code>
     * @return Whether the payload field is set.
     */
    @java.lang.Override
    public boolean hasPayload() {
      return payload_ != null;
    }
    /**
     * <code>.maxbft.ConsensusPayload payload = 1;</code>
     * @return The payload.
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload getPayload() {
      return payload_ == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload.getDefaultInstance() : payload_;
    }
    /**
     * <code>.maxbft.ConsensusPayload payload = 1;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayloadOrBuilder getPayloadOrBuilder() {
      return getPayload();
    }

    public static final int SIGN_ENTRY_FIELD_NUMBER = 2;
    private org.chainmaker.pb.common.Request.EndorsementEntry signEntry_;
    /**
     * <code>.common.EndorsementEntry sign_entry = 2;</code>
     * @return Whether the signEntry field is set.
     */
    @java.lang.Override
    public boolean hasSignEntry() {
      return signEntry_ != null;
    }
    /**
     * <code>.common.EndorsementEntry sign_entry = 2;</code>
     * @return The signEntry.
     */
    @java.lang.Override
    public org.chainmaker.pb.common.Request.EndorsementEntry getSignEntry() {
      return signEntry_ == null ? org.chainmaker.pb.common.Request.EndorsementEntry.getDefaultInstance() : signEntry_;
    }
    /**
     * <code>.common.EndorsementEntry sign_entry = 2;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder getSignEntryOrBuilder() {
      return getSignEntry();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (payload_ != null) {
        output.writeMessage(1, getPayload());
      }
      if (signEntry_ != null) {
        output.writeMessage(2, getSignEntry());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (payload_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPayload());
      }
      if (signEntry_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSignEntry());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg other = (org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg) obj;

      if (hasPayload() != other.hasPayload()) return false;
      if (hasPayload()) {
        if (!getPayload()
            .equals(other.getPayload())) return false;
      }
      if (hasSignEntry() != other.hasSignEntry()) return false;
      if (hasSignEntry()) {
        if (!getSignEntry()
            .equals(other.getSignEntry())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPayload()) {
        hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
        hash = (53 * hash) + getPayload().hashCode();
      }
      if (hasSignEntry()) {
        hash = (37 * hash) + SIGN_ENTRY_FIELD_NUMBER;
        hash = (53 * hash) + getSignEntry().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxbft.ConsensusMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxbft.ConsensusMsg)
        org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ConsensusMsg_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ConsensusMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg.class, org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg.Builder.class);
      }

      // Construct using org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (payloadBuilder_ == null) {
          payload_ = null;
        } else {
          payload_ = null;
          payloadBuilder_ = null;
        }
        if (signEntryBuilder_ == null) {
          signEntry_ = null;
        } else {
          signEntry_ = null;
          signEntryBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_ConsensusMsg_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg getDefaultInstanceForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg build() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg buildPartial() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg result = new org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg(this);
        if (payloadBuilder_ == null) {
          result.payload_ = payload_;
        } else {
          result.payload_ = payloadBuilder_.build();
        }
        if (signEntryBuilder_ == null) {
          result.signEntry_ = signEntry_;
        } else {
          result.signEntry_ = signEntryBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg) {
          return mergeFrom((org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg other) {
        if (other == org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg.getDefaultInstance()) return this;
        if (other.hasPayload()) {
          mergePayload(other.getPayload());
        }
        if (other.hasSignEntry()) {
          mergeSignEntry(other.getSignEntry());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload payload_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload, org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayloadOrBuilder> payloadBuilder_;
      /**
       * <code>.maxbft.ConsensusPayload payload = 1;</code>
       * @return Whether the payload field is set.
       */
      public boolean hasPayload() {
        return payloadBuilder_ != null || payload_ != null;
      }
      /**
       * <code>.maxbft.ConsensusPayload payload = 1;</code>
       * @return The payload.
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload getPayload() {
        if (payloadBuilder_ == null) {
          return payload_ == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload.getDefaultInstance() : payload_;
        } else {
          return payloadBuilder_.getMessage();
        }
      }
      /**
       * <code>.maxbft.ConsensusPayload payload = 1;</code>
       */
      public Builder setPayload(org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload value) {
        if (payloadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          payloadBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.maxbft.ConsensusPayload payload = 1;</code>
       */
      public Builder setPayload(
          org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload.Builder builderForValue) {
        if (payloadBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          payloadBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.maxbft.ConsensusPayload payload = 1;</code>
       */
      public Builder mergePayload(org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload value) {
        if (payloadBuilder_ == null) {
          if (payload_ != null) {
            payload_ =
              org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload.newBuilder(payload_).mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          payloadBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.maxbft.ConsensusPayload payload = 1;</code>
       */
      public Builder clearPayload() {
        if (payloadBuilder_ == null) {
          payload_ = null;
          onChanged();
        } else {
          payload_ = null;
          payloadBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.maxbft.ConsensusPayload payload = 1;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload.Builder getPayloadBuilder() {
        
        onChanged();
        return getPayloadFieldBuilder().getBuilder();
      }
      /**
       * <code>.maxbft.ConsensusPayload payload = 1;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayloadOrBuilder getPayloadOrBuilder() {
        if (payloadBuilder_ != null) {
          return payloadBuilder_.getMessageOrBuilder();
        } else {
          return payload_ == null ?
              org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload.getDefaultInstance() : payload_;
        }
      }
      /**
       * <code>.maxbft.ConsensusPayload payload = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload, org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayloadOrBuilder> 
          getPayloadFieldBuilder() {
        if (payloadBuilder_ == null) {
          payloadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload, org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayload.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusPayloadOrBuilder>(
                  getPayload(),
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        return payloadBuilder_;
      }

      private org.chainmaker.pb.common.Request.EndorsementEntry signEntry_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.Request.EndorsementEntry, org.chainmaker.pb.common.Request.EndorsementEntry.Builder, org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder> signEntryBuilder_;
      /**
       * <code>.common.EndorsementEntry sign_entry = 2;</code>
       * @return Whether the signEntry field is set.
       */
      public boolean hasSignEntry() {
        return signEntryBuilder_ != null || signEntry_ != null;
      }
      /**
       * <code>.common.EndorsementEntry sign_entry = 2;</code>
       * @return The signEntry.
       */
      public org.chainmaker.pb.common.Request.EndorsementEntry getSignEntry() {
        if (signEntryBuilder_ == null) {
          return signEntry_ == null ? org.chainmaker.pb.common.Request.EndorsementEntry.getDefaultInstance() : signEntry_;
        } else {
          return signEntryBuilder_.getMessage();
        }
      }
      /**
       * <code>.common.EndorsementEntry sign_entry = 2;</code>
       */
      public Builder setSignEntry(org.chainmaker.pb.common.Request.EndorsementEntry value) {
        if (signEntryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signEntry_ = value;
          onChanged();
        } else {
          signEntryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.common.EndorsementEntry sign_entry = 2;</code>
       */
      public Builder setSignEntry(
          org.chainmaker.pb.common.Request.EndorsementEntry.Builder builderForValue) {
        if (signEntryBuilder_ == null) {
          signEntry_ = builderForValue.build();
          onChanged();
        } else {
          signEntryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.common.EndorsementEntry sign_entry = 2;</code>
       */
      public Builder mergeSignEntry(org.chainmaker.pb.common.Request.EndorsementEntry value) {
        if (signEntryBuilder_ == null) {
          if (signEntry_ != null) {
            signEntry_ =
              org.chainmaker.pb.common.Request.EndorsementEntry.newBuilder(signEntry_).mergeFrom(value).buildPartial();
          } else {
            signEntry_ = value;
          }
          onChanged();
        } else {
          signEntryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.common.EndorsementEntry sign_entry = 2;</code>
       */
      public Builder clearSignEntry() {
        if (signEntryBuilder_ == null) {
          signEntry_ = null;
          onChanged();
        } else {
          signEntry_ = null;
          signEntryBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.common.EndorsementEntry sign_entry = 2;</code>
       */
      public org.chainmaker.pb.common.Request.EndorsementEntry.Builder getSignEntryBuilder() {
        
        onChanged();
        return getSignEntryFieldBuilder().getBuilder();
      }
      /**
       * <code>.common.EndorsementEntry sign_entry = 2;</code>
       */
      public org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder getSignEntryOrBuilder() {
        if (signEntryBuilder_ != null) {
          return signEntryBuilder_.getMessageOrBuilder();
        } else {
          return signEntry_ == null ?
              org.chainmaker.pb.common.Request.EndorsementEntry.getDefaultInstance() : signEntry_;
        }
      }
      /**
       * <code>.common.EndorsementEntry sign_entry = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.common.Request.EndorsementEntry, org.chainmaker.pb.common.Request.EndorsementEntry.Builder, org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder> 
          getSignEntryFieldBuilder() {
        if (signEntryBuilder_ == null) {
          signEntryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.common.Request.EndorsementEntry, org.chainmaker.pb.common.Request.EndorsementEntry.Builder, org.chainmaker.pb.common.Request.EndorsementEntryOrBuilder>(
                  getSignEntry(),
                  getParentForChildren(),
                  isClean());
          signEntry_ = null;
        }
        return signEntryBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:maxbft.ConsensusMsg)
    }

    // @@protoc_insertion_point(class_scope:maxbft.ConsensusMsg)
    private static final org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg();
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConsensusMsg>
        PARSER = new com.google.protobuf.AbstractParser<ConsensusMsg>() {
      @java.lang.Override
      public ConsensusMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConsensusMsg(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConsensusMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConsensusMsg> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BuildProposalOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxbft.BuildProposal)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint64 height = 1;</code>
     * @return The height.
     */
    long getHeight();

    /**
     * <code>bytes pre_hash = 2;</code>
     * @return The preHash.
     */
    com.google.protobuf.ByteString getPreHash();

    /**
     * <code>bool is_proposer = 3;</code>
     * @return The isProposer.
     */
    boolean getIsProposer();
  }
  /**
   * Protobuf type {@code maxbft.BuildProposal}
   */
  public static final class BuildProposal extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:maxbft.BuildProposal)
      BuildProposalOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BuildProposal.newBuilder() to construct.
    private BuildProposal(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BuildProposal() {
      preHash_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BuildProposal();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BuildProposal(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              height_ = input.readUInt64();
              break;
            }
            case 18: {

              preHash_ = input.readBytes();
              break;
            }
            case 24: {

              isProposer_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_BuildProposal_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_BuildProposal_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal.class, org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal.Builder.class);
    }

    public static final int HEIGHT_FIELD_NUMBER = 1;
    private long height_;
    /**
     * <code>uint64 height = 1;</code>
     * @return The height.
     */
    @java.lang.Override
    public long getHeight() {
      return height_;
    }

    public static final int PRE_HASH_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString preHash_;
    /**
     * <code>bytes pre_hash = 2;</code>
     * @return The preHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPreHash() {
      return preHash_;
    }

    public static final int IS_PROPOSER_FIELD_NUMBER = 3;
    private boolean isProposer_;
    /**
     * <code>bool is_proposer = 3;</code>
     * @return The isProposer.
     */
    @java.lang.Override
    public boolean getIsProposer() {
      return isProposer_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (height_ != 0L) {
        output.writeUInt64(1, height_);
      }
      if (!preHash_.isEmpty()) {
        output.writeBytes(2, preHash_);
      }
      if (isProposer_ != false) {
        output.writeBool(3, isProposer_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (height_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, height_);
      }
      if (!preHash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, preHash_);
      }
      if (isProposer_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isProposer_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal other = (org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal) obj;

      if (getHeight()
          != other.getHeight()) return false;
      if (!getPreHash()
          .equals(other.getPreHash())) return false;
      if (getIsProposer()
          != other.getIsProposer()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHeight());
      hash = (37 * hash) + PRE_HASH_FIELD_NUMBER;
      hash = (53 * hash) + getPreHash().hashCode();
      hash = (37 * hash) + IS_PROPOSER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsProposer());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxbft.BuildProposal}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxbft.BuildProposal)
        org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_BuildProposal_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_BuildProposal_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal.class, org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal.Builder.class);
      }

      // Construct using org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        height_ = 0L;

        preHash_ = com.google.protobuf.ByteString.EMPTY;

        isProposer_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_BuildProposal_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal getDefaultInstanceForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal build() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal buildPartial() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal result = new org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal(this);
        result.height_ = height_;
        result.preHash_ = preHash_;
        result.isProposer_ = isProposer_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal) {
          return mergeFrom((org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal other) {
        if (other == org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal.getDefaultInstance()) return this;
        if (other.getHeight() != 0L) {
          setHeight(other.getHeight());
        }
        if (other.getPreHash() != com.google.protobuf.ByteString.EMPTY) {
          setPreHash(other.getPreHash());
        }
        if (other.getIsProposer() != false) {
          setIsProposer(other.getIsProposer());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long height_ ;
      /**
       * <code>uint64 height = 1;</code>
       * @return The height.
       */
      @java.lang.Override
      public long getHeight() {
        return height_;
      }
      /**
       * <code>uint64 height = 1;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(long value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 height = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        
        height_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString preHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes pre_hash = 2;</code>
       * @return The preHash.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPreHash() {
        return preHash_;
      }
      /**
       * <code>bytes pre_hash = 2;</code>
       * @param value The preHash to set.
       * @return This builder for chaining.
       */
      public Builder setPreHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        preHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes pre_hash = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPreHash() {
        
        preHash_ = getDefaultInstance().getPreHash();
        onChanged();
        return this;
      }

      private boolean isProposer_ ;
      /**
       * <code>bool is_proposer = 3;</code>
       * @return The isProposer.
       */
      @java.lang.Override
      public boolean getIsProposer() {
        return isProposer_;
      }
      /**
       * <code>bool is_proposer = 3;</code>
       * @param value The isProposer to set.
       * @return This builder for chaining.
       */
      public Builder setIsProposer(boolean value) {
        
        isProposer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_proposer = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsProposer() {
        
        isProposer_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:maxbft.BuildProposal)
    }

    // @@protoc_insertion_point(class_scope:maxbft.BuildProposal)
    private static final org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal();
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BuildProposal>
        PARSER = new com.google.protobuf.AbstractParser<BuildProposal>() {
      @java.lang.Override
      public BuildProposal parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BuildProposal(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BuildProposal> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BuildProposal> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.BuildProposal getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WalEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxbft.WalEntry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.maxbft.ConsensusMsg msg = 1;</code>
     * @return Whether the msg field is set.
     */
    boolean hasMsg();
    /**
     * <code>.maxbft.ConsensusMsg msg = 1;</code>
     * @return The msg.
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg getMsg();
    /**
     * <code>.maxbft.ConsensusMsg msg = 1;</code>
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsgOrBuilder getMsgOrBuilder();

    /**
     * <code>.maxbft.MessageType msg_type = 2;</code>
     * @return The enum numeric value on the wire for msgType.
     */
    int getMsgTypeValue();
    /**
     * <code>.maxbft.MessageType msg_type = 2;</code>
     * @return The msgType.
     */
    org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType getMsgType();

    /**
     * <code>uint64 last_snapshot_index = 3;</code>
     * @return The lastSnapshotIndex.
     */
    long getLastSnapshotIndex();
  }
  /**
   * Protobuf type {@code maxbft.WalEntry}
   */
  public static final class WalEntry extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:maxbft.WalEntry)
      WalEntryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WalEntry.newBuilder() to construct.
    private WalEntry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WalEntry() {
      msgType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WalEntry();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WalEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg.Builder subBuilder = null;
              if (msg_ != null) {
                subBuilder = msg_.toBuilder();
              }
              msg_ = input.readMessage(org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(msg_);
                msg_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              msgType_ = rawValue;
              break;
            }
            case 24: {

              lastSnapshotIndex_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_WalEntry_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_WalEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry.class, org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry.Builder.class);
    }

    public static final int MSG_FIELD_NUMBER = 1;
    private org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg msg_;
    /**
     * <code>.maxbft.ConsensusMsg msg = 1;</code>
     * @return Whether the msg field is set.
     */
    @java.lang.Override
    public boolean hasMsg() {
      return msg_ != null;
    }
    /**
     * <code>.maxbft.ConsensusMsg msg = 1;</code>
     * @return The msg.
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg getMsg() {
      return msg_ == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg.getDefaultInstance() : msg_;
    }
    /**
     * <code>.maxbft.ConsensusMsg msg = 1;</code>
     */
    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsgOrBuilder getMsgOrBuilder() {
      return getMsg();
    }

    public static final int MSG_TYPE_FIELD_NUMBER = 2;
    private int msgType_;
    /**
     * <code>.maxbft.MessageType msg_type = 2;</code>
     * @return The enum numeric value on the wire for msgType.
     */
    @java.lang.Override public int getMsgTypeValue() {
      return msgType_;
    }
    /**
     * <code>.maxbft.MessageType msg_type = 2;</code>
     * @return The msgType.
     */
    @java.lang.Override public org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType getMsgType() {
      @SuppressWarnings("deprecation")
      org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType result = org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType.valueOf(msgType_);
      return result == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType.UNRECOGNIZED : result;
    }

    public static final int LAST_SNAPSHOT_INDEX_FIELD_NUMBER = 3;
    private long lastSnapshotIndex_;
    /**
     * <code>uint64 last_snapshot_index = 3;</code>
     * @return The lastSnapshotIndex.
     */
    @java.lang.Override
    public long getLastSnapshotIndex() {
      return lastSnapshotIndex_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (msg_ != null) {
        output.writeMessage(1, getMsg());
      }
      if (msgType_ != org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType.PROPOSAL_MESSAGE.getNumber()) {
        output.writeEnum(2, msgType_);
      }
      if (lastSnapshotIndex_ != 0L) {
        output.writeUInt64(3, lastSnapshotIndex_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (msg_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMsg());
      }
      if (msgType_ != org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType.PROPOSAL_MESSAGE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, msgType_);
      }
      if (lastSnapshotIndex_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, lastSnapshotIndex_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry)) {
        return super.equals(obj);
      }
      org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry other = (org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry) obj;

      if (hasMsg() != other.hasMsg()) return false;
      if (hasMsg()) {
        if (!getMsg()
            .equals(other.getMsg())) return false;
      }
      if (msgType_ != other.msgType_) return false;
      if (getLastSnapshotIndex()
          != other.getLastSnapshotIndex()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMsg()) {
        hash = (37 * hash) + MSG_FIELD_NUMBER;
        hash = (53 * hash) + getMsg().hashCode();
      }
      hash = (37 * hash) + MSG_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + msgType_;
      hash = (37 * hash) + LAST_SNAPSHOT_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLastSnapshotIndex());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxbft.WalEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxbft.WalEntry)
        org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_WalEntry_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_WalEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry.class, org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry.Builder.class);
      }

      // Construct using org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (msgBuilder_ == null) {
          msg_ = null;
        } else {
          msg_ = null;
          msgBuilder_ = null;
        }
        msgType_ = 0;

        lastSnapshotIndex_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.internal_static_maxbft_WalEntry_descriptor;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry getDefaultInstanceForType() {
        return org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry.getDefaultInstance();
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry build() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry buildPartial() {
        org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry result = new org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry(this);
        if (msgBuilder_ == null) {
          result.msg_ = msg_;
        } else {
          result.msg_ = msgBuilder_.build();
        }
        result.msgType_ = msgType_;
        result.lastSnapshotIndex_ = lastSnapshotIndex_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry) {
          return mergeFrom((org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry other) {
        if (other == org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry.getDefaultInstance()) return this;
        if (other.hasMsg()) {
          mergeMsg(other.getMsg());
        }
        if (other.msgType_ != 0) {
          setMsgTypeValue(other.getMsgTypeValue());
        }
        if (other.getLastSnapshotIndex() != 0L) {
          setLastSnapshotIndex(other.getLastSnapshotIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg msg_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg, org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsgOrBuilder> msgBuilder_;
      /**
       * <code>.maxbft.ConsensusMsg msg = 1;</code>
       * @return Whether the msg field is set.
       */
      public boolean hasMsg() {
        return msgBuilder_ != null || msg_ != null;
      }
      /**
       * <code>.maxbft.ConsensusMsg msg = 1;</code>
       * @return The msg.
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg getMsg() {
        if (msgBuilder_ == null) {
          return msg_ == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg.getDefaultInstance() : msg_;
        } else {
          return msgBuilder_.getMessage();
        }
      }
      /**
       * <code>.maxbft.ConsensusMsg msg = 1;</code>
       */
      public Builder setMsg(org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg value) {
        if (msgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          msg_ = value;
          onChanged();
        } else {
          msgBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.maxbft.ConsensusMsg msg = 1;</code>
       */
      public Builder setMsg(
          org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg.Builder builderForValue) {
        if (msgBuilder_ == null) {
          msg_ = builderForValue.build();
          onChanged();
        } else {
          msgBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.maxbft.ConsensusMsg msg = 1;</code>
       */
      public Builder mergeMsg(org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg value) {
        if (msgBuilder_ == null) {
          if (msg_ != null) {
            msg_ =
              org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg.newBuilder(msg_).mergeFrom(value).buildPartial();
          } else {
            msg_ = value;
          }
          onChanged();
        } else {
          msgBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.maxbft.ConsensusMsg msg = 1;</code>
       */
      public Builder clearMsg() {
        if (msgBuilder_ == null) {
          msg_ = null;
          onChanged();
        } else {
          msg_ = null;
          msgBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.maxbft.ConsensusMsg msg = 1;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg.Builder getMsgBuilder() {
        
        onChanged();
        return getMsgFieldBuilder().getBuilder();
      }
      /**
       * <code>.maxbft.ConsensusMsg msg = 1;</code>
       */
      public org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsgOrBuilder getMsgOrBuilder() {
        if (msgBuilder_ != null) {
          return msgBuilder_.getMessageOrBuilder();
        } else {
          return msg_ == null ?
              org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg.getDefaultInstance() : msg_;
        }
      }
      /**
       * <code>.maxbft.ConsensusMsg msg = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg, org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsgOrBuilder> 
          getMsgFieldBuilder() {
        if (msgBuilder_ == null) {
          msgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg, org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsg.Builder, org.chainmaker.pb.consensus.maxbft.Maxbft.ConsensusMsgOrBuilder>(
                  getMsg(),
                  getParentForChildren(),
                  isClean());
          msg_ = null;
        }
        return msgBuilder_;
      }

      private int msgType_ = 0;
      /**
       * <code>.maxbft.MessageType msg_type = 2;</code>
       * @return The enum numeric value on the wire for msgType.
       */
      @java.lang.Override public int getMsgTypeValue() {
        return msgType_;
      }
      /**
       * <code>.maxbft.MessageType msg_type = 2;</code>
       * @param value The enum numeric value on the wire for msgType to set.
       * @return This builder for chaining.
       */
      public Builder setMsgTypeValue(int value) {
        
        msgType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.maxbft.MessageType msg_type = 2;</code>
       * @return The msgType.
       */
      @java.lang.Override
      public org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType getMsgType() {
        @SuppressWarnings("deprecation")
        org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType result = org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType.valueOf(msgType_);
        return result == null ? org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType.UNRECOGNIZED : result;
      }
      /**
       * <code>.maxbft.MessageType msg_type = 2;</code>
       * @param value The msgType to set.
       * @return This builder for chaining.
       */
      public Builder setMsgType(org.chainmaker.pb.consensus.maxbft.Maxbft.MessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        msgType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.maxbft.MessageType msg_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMsgType() {
        
        msgType_ = 0;
        onChanged();
        return this;
      }

      private long lastSnapshotIndex_ ;
      /**
       * <code>uint64 last_snapshot_index = 3;</code>
       * @return The lastSnapshotIndex.
       */
      @java.lang.Override
      public long getLastSnapshotIndex() {
        return lastSnapshotIndex_;
      }
      /**
       * <code>uint64 last_snapshot_index = 3;</code>
       * @param value The lastSnapshotIndex to set.
       * @return This builder for chaining.
       */
      public Builder setLastSnapshotIndex(long value) {
        
        lastSnapshotIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 last_snapshot_index = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastSnapshotIndex() {
        
        lastSnapshotIndex_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:maxbft.WalEntry)
    }

    // @@protoc_insertion_point(class_scope:maxbft.WalEntry)
    private static final org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry();
    }

    public static org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WalEntry>
        PARSER = new com.google.protobuf.AbstractParser<WalEntry>() {
      @java.lang.Override
      public WalEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WalEntry(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WalEntry> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WalEntry> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.chainmaker.pb.consensus.maxbft.Maxbft.WalEntry getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxbft_QuorumCert_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_maxbft_QuorumCert_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxbft_ConsensusInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_maxbft_ConsensusInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxbft_SyncInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_maxbft_SyncInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxbft_ProposalData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_maxbft_ProposalData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxbft_ProposalMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_maxbft_ProposalMsg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxbft_VoteData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_maxbft_VoteData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxbft_VoteMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_maxbft_VoteMsg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxbft_BlockFetchMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_maxbft_BlockFetchMsg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxbft_BlockPair_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_maxbft_BlockPair_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxbft_BlockFetchRespMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_maxbft_BlockFetchRespMsg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxbft_ConsensusPayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_maxbft_ConsensusPayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxbft_ConsensusMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_maxbft_ConsensusMsg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxbft_BuildProposal_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_maxbft_BuildProposal_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxbft_WalEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_maxbft_WalEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035consensus/maxbft/maxbft.proto\022\006maxbft\032" +
      "\022common/block.proto\032\024common/request.prot" +
      "o\"\202\001\n\nQuorumCert\022\020\n\010block_id\030\001 \001(\014\022\016\n\006he" +
      "ight\030\002 \001(\004\022\r\n\005level\030\003 \001(\004\022\020\n\010new_view\030\004 " +
      "\001(\010\022\020\n\010epoch_id\030\005 \001(\004\022\037\n\005votes\030\006 \003(\0132\020.m" +
      "axbft.VoteData\"/\n\rConsensusInfo\022\036\n\002qc\030\001 " +
      "\001(\0132\022.maxbft.QuorumCert\"t\n\010SyncInfo\022&\n\nh" +
      "ighest_qc\030\001 \001(\0132\022.maxbft.QuorumCert\022&\n\nh" +
      "ighest_tc\030\002 \001(\0132\022.maxbft.QuorumCert\022\030\n\020h" +
      "ighest_tc_level\030\003 \001(\004\"\255\001\n\014ProposalData\022\034" +
      "\n\005block\030\001 \001(\0132\r.common.Block\022\016\n\006height\030\002" +
      " \001(\004\022\r\n\005level\030\003 \001(\004\022\020\n\010proposer\030\004 \001(\014\022\024\n" +
      "\014proposer_idx\030\005 \001(\004\022\020\n\010epoch_id\030\006 \001(\004\022&\n" +
      "\njustify_qc\030\007 \001(\0132\022.maxbft.QuorumCert\"_\n" +
      "\013ProposalMsg\022+\n\rproposal_data\030\001 \001(\0132\024.ma" +
      "xbft.ProposalData\022#\n\tsync_info\030\002 \001(\0132\020.m" +
      "axbft.SyncInfo\"\260\001\n\010VoteData\022\020\n\010block_id\030" +
      "\001 \001(\014\022\016\n\006height\030\002 \001(\004\022\r\n\005level\030\003 \001(\004\022\016\n\006" +
      "author\030\004 \001(\014\022\022\n\nauthor_idx\030\005 \001(\004\022\020\n\010new_" +
      "view\030\006 \001(\010\022\020\n\010epoch_id\030\007 \001(\004\022+\n\tsignatur" +
      "e\030\010 \001(\0132\030.common.EndorsementEntry\"S\n\007Vot" +
      "eMsg\022#\n\tvote_data\030\001 \001(\0132\020.maxbft.VoteDat" +
      "a\022#\n\tsync_info\030\002 \001(\0132\020.maxbft.SyncInfo\"\225" +
      "\001\n\rBlockFetchMsg\022\020\n\010block_id\030\001 \001(\014\022\016\n\006he" +
      "ight\030\002 \001(\004\022\022\n\nnum_blocks\030\003 \001(\004\022\022\n\nauthor" +
      "_idx\030\004 \001(\004\022\016\n\006req_id\030\005 \001(\004\022\024\n\014commit_blo" +
      "ck\030\006 \001(\014\022\024\n\014locked_bLock\030\007 \001(\014\"I\n\tBlockP" +
      "air\022\034\n\005block\030\001 \001(\0132\r.common.Block\022\036\n\002qc\030" +
      "\002 \001(\0132\022.maxbft.QuorumCert\"\205\001\n\021BlockFetch" +
      "RespMsg\022(\n\006status\030\001 \001(\0162\030.maxbft.BlockFe" +
      "tchStatus\022!\n\006blocks\030\002 \003(\0132\021.maxbft.Block" +
      "Pair\022\022\n\nauthor_idx\030\003 \001(\004\022\017\n\007resp_id\030\004 \001(" +
      "\004\"\374\001\n\020ConsensusPayload\022!\n\004type\030\001 \001(\0162\023.m" +
      "axbft.MessageType\022+\n\014proposal_msg\030\002 \001(\0132" +
      "\023.maxbft.ProposalMsgH\000\022#\n\010vote_msg\030\003 \001(\013" +
      "2\017.maxbft.VoteMsgH\000\0220\n\017block_fetch_msg\030\004" +
      " \001(\0132\025.maxbft.BlockFetchMsgH\000\0229\n\024block_f" +
      "etch_resp_msg\030\005 \001(\0132\031.maxbft.BlockFetchR" +
      "espMsgH\000B\006\n\004data\"g\n\014ConsensusMsg\022)\n\007payl" +
      "oad\030\001 \001(\0132\030.maxbft.ConsensusPayload\022,\n\ns" +
      "ign_entry\030\002 \001(\0132\030.common.EndorsementEntr" +
      "y\"F\n\rBuildProposal\022\016\n\006height\030\001 \001(\004\022\020\n\010pr" +
      "e_hash\030\002 \001(\014\022\023\n\013is_proposer\030\003 \001(\010\"q\n\010Wal" +
      "Entry\022!\n\003msg\030\001 \001(\0132\024.maxbft.ConsensusMsg" +
      "\022%\n\010msg_type\030\002 \001(\0162\023.maxbft.MessageType\022" +
      "\033\n\023last_snapshot_index\030\003 \001(\004*8\n\020BlockFet" +
      "chStatus\022\r\n\tSUCCEEDED\020\000\022\025\n\021NOT_ENOUGH_BL" +
      "OCKS\020\001*T\n\rConsStateType\022\016\n\nNEW_HEIGHT\020\000\022" +
      "\r\n\tNEW_LEVEL\020\001\022\013\n\007PROPOSE\020\002\022\010\n\004VOTE\020\003\022\r\n" +
      "\tPACEMAKER\020\004*l\n\013MessageType\022\024\n\020PROPOSAL_" +
      "MESSAGE\020\000\022\020\n\014VOTE_MESSAGE\020\001\022\027\n\023BLOCK_FET" +
      "CH_MESSAGE\020\002\022\034\n\030BLOCK_FETCH_RESP_MESSAGE" +
      "\020\003BY\n\"org.chainmaker.pb.consensus.maxbft" +
      "Z3chainmaker.org/chainmaker/pb-go/v2/con" +
      "sensus/maxbftb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.chainmaker.pb.common.ChainmakerBlock.getDescriptor(),
          org.chainmaker.pb.common.Request.getDescriptor(),
        });
    internal_static_maxbft_QuorumCert_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_maxbft_QuorumCert_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_maxbft_QuorumCert_descriptor,
        new java.lang.String[] { "BlockId", "Height", "Level", "NewView", "EpochId", "Votes", });
    internal_static_maxbft_ConsensusInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_maxbft_ConsensusInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_maxbft_ConsensusInfo_descriptor,
        new java.lang.String[] { "Qc", });
    internal_static_maxbft_SyncInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_maxbft_SyncInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_maxbft_SyncInfo_descriptor,
        new java.lang.String[] { "HighestQc", "HighestTc", "HighestTcLevel", });
    internal_static_maxbft_ProposalData_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_maxbft_ProposalData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_maxbft_ProposalData_descriptor,
        new java.lang.String[] { "Block", "Height", "Level", "Proposer", "ProposerIdx", "EpochId", "JustifyQc", });
    internal_static_maxbft_ProposalMsg_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_maxbft_ProposalMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_maxbft_ProposalMsg_descriptor,
        new java.lang.String[] { "ProposalData", "SyncInfo", });
    internal_static_maxbft_VoteData_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_maxbft_VoteData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_maxbft_VoteData_descriptor,
        new java.lang.String[] { "BlockId", "Height", "Level", "Author", "AuthorIdx", "NewView", "EpochId", "Signature", });
    internal_static_maxbft_VoteMsg_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_maxbft_VoteMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_maxbft_VoteMsg_descriptor,
        new java.lang.String[] { "VoteData", "SyncInfo", });
    internal_static_maxbft_BlockFetchMsg_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_maxbft_BlockFetchMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_maxbft_BlockFetchMsg_descriptor,
        new java.lang.String[] { "BlockId", "Height", "NumBlocks", "AuthorIdx", "ReqId", "CommitBlock", "LockedBLock", });
    internal_static_maxbft_BlockPair_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_maxbft_BlockPair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_maxbft_BlockPair_descriptor,
        new java.lang.String[] { "Block", "Qc", });
    internal_static_maxbft_BlockFetchRespMsg_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_maxbft_BlockFetchRespMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_maxbft_BlockFetchRespMsg_descriptor,
        new java.lang.String[] { "Status", "Blocks", "AuthorIdx", "RespId", });
    internal_static_maxbft_ConsensusPayload_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_maxbft_ConsensusPayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_maxbft_ConsensusPayload_descriptor,
        new java.lang.String[] { "Type", "ProposalMsg", "VoteMsg", "BlockFetchMsg", "BlockFetchRespMsg", "Data", });
    internal_static_maxbft_ConsensusMsg_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_maxbft_ConsensusMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_maxbft_ConsensusMsg_descriptor,
        new java.lang.String[] { "Payload", "SignEntry", });
    internal_static_maxbft_BuildProposal_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_maxbft_BuildProposal_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_maxbft_BuildProposal_descriptor,
        new java.lang.String[] { "Height", "PreHash", "IsProposer", });
    internal_static_maxbft_WalEntry_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_maxbft_WalEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_maxbft_WalEntry_descriptor,
        new java.lang.String[] { "Msg", "MsgType", "LastSnapshotIndex", });
    org.chainmaker.pb.common.ChainmakerBlock.getDescriptor();
    org.chainmaker.pb.common.Request.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
